{"version":3,"file":"d0dcf9c1039535d44ee74defc829dfbf62dac3c5-38d0b3b81b90a7595fef.js","mappings":"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","sources":["webpack://study-books/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/noop.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://study-books/./src/components/post/container/post-container.module.scss","webpack://study-books/./src/components/post/container/post-container.tsx","webpack://study-books/./src/components/post/header/post-header.module.scss","webpack://study-books/./src/components/post/header/post-header.tsx","webpack://study-books/./src/components/post/body/post-body.tsx","webpack://study-books/./src/components/post/index.ts","webpack://study-books/./node_modules/motion-utils/dist/es/array.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://study-books/./src/queries/app-config.ts","webpack://study-books/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/progress.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/errors.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","// extracted by mini-css-extract-plugin\nexport default {\"animatedContainer__content\":\"post-container-module--animated-container__content--c6ca7\"};","import * as React from 'react';\nimport { HTMLAttributes, PropsWithChildren } from 'react';\nimport { motion, MotionProps } from 'framer-motion';\nimport styles from './post-container.module.scss';\n\nconst PostContainer = ({ children, className, ...props }: PropsWithChildren<MotionProps & HTMLAttributes<HTMLDivElement>>) => {\n  return (\n    <motion.div\n      initial={{ y: 30, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.3, ease: \"easeOut\" }}\n      className={`${styles['animatedContainer__content']} ${className}`}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default PostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"postHeader__container\":\"post-header-module--post-header__container--17ea9\",\"postHeader__title\":\"post-header-module--post-header__title--8af55\",\"postHeader__meta\":\"post-header-module--post-header__meta--0e52a\"};","import * as React from 'react';\nimport { motion } from 'framer-motion';\nimport styles from './post-header.module.scss'\nimport { useAppConfig } from '@/queries/app-config';\n\ntype PostHeaderProps = {\n  title: string;\n  date: string;\n  description: string;\n  category: string;\n}\n\nconst PostHeader = ({ title, category, date }: PostHeaderProps) => {\n  const { site } = useAppConfig()\n\n  return (\n    <motion.div\n      className={styles['postHeader__container']}\n    >\n      <h1 className={styles['postHeader__title']}>\n        {title || site.siteMetadata.defaultPostTitle}\n      </h1>\n      <div className={styles['postHeader__meta']}>\n        <p>{category || site.siteMetadata.defaultCategoryName}</p>\n        <p>{date}</p>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default PostHeader;","import * as React from 'react';\n\ninterface MDXProps {\n  html: string;\n}\n\nconst PostBody: React.FC<MDXProps> = ({ html }) => {\n  return (\n    <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n  );\n};\n\nexport default PostBody;","import PostContainer from '@/components/post/container/post-container';\nimport PostHeader from '@/components/post/header/post-header';\nimport PostBody from '@/components/post/body/post-body';\n\nexport const Post = Object.assign(PostContainer, {\n  Header: PostHeader,\n  Body: PostBody\n})","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SiteMetadataConfigQuery } from '@/__generated__/gatsby-types';\nimport { DeepRequired } from '@/types';\n\nexport const SiteMetadataQuery = graphql`\n    query SiteMetadataConfig {\n        site {\n            siteMetadata {\n                title\n                categoryFieldName\n                defaultCategoryName\n                defaultPostTitle\n                obsidianNoteName\n            }\n        }\n    }\n`;\n\nexport const useAppConfig = (): DeepRequired<SiteMetadataConfigQuery> => useStaticQuery(SiteMetadataQuery);","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"__VERSION__\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["combineFunctions","a","b","v","pipe","transformers","reduce","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","singleCssVariableRegex","test","split","trim","createUnitType","unit","endsWith","length","parse","parseFloat","transform","degrees","percent","px","vh","vw","progressPercentage","mirrorEasing","easing","p","defaultOffset","arr","offset","remaining","min","i","offsetProgress","progress","push","fillOffset","backOut","backIn","backInOut","schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","noop","any","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask","_ref","children","className","props","React","motion","div","Object","assign","initial","y","opacity","animate","transition","duration","ease","styles","title","category","date","site","useAppConfig","siteMetadata","defaultPostTitle","defaultCategoryName","html","dangerouslySetInnerHTML","__html","Post","PostContainer","Header","PostHeader","Body","PostBody","addUniqueItem","item","indexOf","removeItem","index","splice","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","rgbUnit","Math","round","clampRgbUnit","rgba","red","green","blue","alpha","alpha$1","hueToRgb","q","t","mixImmediate","mixLinearColor","from","to","fromExpo","expo","sqrt","colorTypes","hex","hsla","asRGBA","color","type","find","Boolean","model","hue","saturation","lightness","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","Set","mixNumber","getMixer","mixComplex","Array","isArray","mixArray","mixObject","output","numValues","blendValue","map","origin","target","template","complex","createTransformer","originStats","targetStats","indexes","var","number","has","values","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","inertia","keyframes","velocity","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","max","restDelta","restSpeed","nearestBoundary","abs","amplitude","ideal","calcDelta","exp","calcLatest","applyFriction","delta","latest","timeReachedBoundary","spring$1","checkCatchBoundary","damping","stiffness","calculatedDuration","hasUpdatedFrame","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","isAnimationControls","start","getValueState","visualElement","forEach","getVelocity","resolveVariantFromProps","definition","custom","current","variants","resolveVariant","getProps","getValueTransition","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","add","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","x","translateX","translateY","scaleX","scaleY","scale","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","render","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","read","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","delete","resume","supportsFlags","memoSupports","callback","supportsFlag","memoized","memo","supportsLinearEasing","document","createElement","e","cubicBezierAsString","c","d","supportedWaapiEasing","linear","easeIn","easeOut","easeInOut","circIn","circOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","waapi","options","fill","iterations","direction","animation","finished","finally","isGenerator","NativeAnimation","WithPromise","super","finishedTime","isStopped","allowFlatten","isPseudoElement","applyToOptions","applyGeneratorOptions","autoplay","pause","onfinish","keyframe","speed","updateMotionValue","isCSSVar","style","setProperty","setStyle","notifyFinished","oncancel","play","updateFinished","finish","stop","commitStyles","effect","getComputedTiming","Number","currentTime","playbackRate","newSpeed","playState","startTime","newStartTime","attachTimeline","timeline","observe","updateTiming","unsupportedEasingFunctions","anticipate","circInOut","replaceStringEasing","NativeAnimationExtended","onUpdate","sampleAnimation","JSAnimation","sampleTime","setWithVelocity","sample","isAnimatable","acceleratedValues","supportsWaapi","hasOwnProperty","call","Element","prototype","AsyncMotionValueAnimation","repeatDelay","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","resolvedKeyframes","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","supportsBrowserAnimation","then","catch","pendingTimeline","_finished","onResolve","_onReject","isNotNull","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","elapsed","when","_delay","delayChildren","staggerChildren","staggerDirection","keys","isTransitionDefined","shouldSkip","skipAnimations","getFinalKeyframe","update","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","isAnimating","MotionHandoffAnimation","appearId","shouldReduceMotion","Promise","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","resolve","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","prop","reversePriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","source","originPoint","translate","isNaN","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","currentVelocity","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","clamp","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","setup","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","some","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","onStop","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","charAt","substring","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","getAnimatableNone","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","generateLinearEasing","resolution","points","numPoints","statsBuffer","sanitize","floatRegex","SubscriptionManager","subscriptions","numSubscriptions","getSize","useStaticQuery","resolveElements","scope","selectorCache","EventTarget","querySelectorAll","sin","acos","springDefaults","mass","bounce","visualDuration","granular","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","pow","f","g","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","toTransition","generatorOptions","createGenerator","createGeneratorEasing","reverseEasing","transitionTypeMap","decay","tween","replaceTransitionType","collectMotionValues","MotionValue","init","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","dependents","dependent","dirty","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","useIsomorphicLayoutEffect","useLayoutEffect","interpolate","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","frameloopDriver","passTimestamp","keepAlive","percentToProgress","holdTime","playbackSpeed","tick","teardown","mainThread","initAnimation","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","reject","driver","hasChanged","stopDriver","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","activeAnimations","toFromDifference","velocityPerSecond","frameDuration","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","count","onReject","warning","invariant","isBrowser","useConstant","r","parseInt","MotionGlobalConfig","isEasingArray","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","immediate","queue","frameloop","createRenderStep","preUpdate","processBatch","isBezierDefinition","supportsScrollTimeline","ScrollTimeline","isMotionValue"],"sourceRoot":""}