{"componentChunkName":"component---src-templates-post-template-tsx","path":"/post/compound-pattern/","result":{"data":{"markdownRemark":{"id":"10969e4d-1ff7-5a52-a532-ba6f574993aa","html":"<h2 id=\"복합-패턴\" style=\"position:relative;\"><a href=\"#%EB%B3%B5%ED%95%A9-%ED%8C%A8%ED%84%B4\" aria-label=\"복합 패턴 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>복합 패턴</h2>\n<blockquote>\n<p>복합 패턴은 여러 패턴을 함께 사용해서 다양한 디자인 문제를 해결하는 방법을 말한다.\n반복적으로 생길 수 있는 일반적인 문제를 해결하는 용도로 쓰이며, 2개 이상의 패턴을 결합해서 사용하는 것을 뜻한다.</p>\n</blockquote>\n<p>단, 패턴 몇 개를 결합한다고 해서 무조건 복합 패턴은 되는 것은 아니다.\n복합 패턴이라 불리기위해서는 여러 가지 문제의 일반적인 해결법을 제시해야 한다.</p>\n<h2 id=\"모델-뷰-컨트롤러-mvc\" style=\"position:relative;\"><a href=\"#%EB%AA%A8%EB%8D%B8-%EB%B7%B0-%EC%BB%A8%ED%8A%B8%EB%A1%A4%EB%9F%AC-mvc\" aria-label=\"모델 뷰 컨트롤러 mvc permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>모델-뷰-컨트롤러 (MVC)</h2>\n<p>모델-뷰-컨트롤러( <a class=\"obsidian-tag\" href=\"/tags/#MVC\">#MVC</a>, Model-View-Controller )는 여러 패턴을 합쳐놓은 복합 패턴의 대표적인 예이다.</p>\n<p>모델 (Model)</p>\n<ul>\n<li>모든 데이터, 상태, 애플리케이션 로직이 들어있다.</li>\n<li>뷰와 컨트롤러에서 모델의 상태를 조작하거나 가져올 때 필요한 인터페이스를 제공한다.</li>\n<li>모델이 자신의 상태 변화를 옵저버들에게 연락하긴 하지만 기본적으로 뷰와 컨트롤러에 별 관심이 없다.</li>\n</ul>\n<p>뷰 (View)</p>\n<ul>\n<li>모델을 표현하는 방법을 제공</li>\n<li>일반적으로 화면에 표시할 때 필요한 상태와 데이터는 모델에서 직접 가져온다.</li>\n</ul>\n<p>컨트롤러 (Controller)</p>\n<ul>\n<li>사용자로부터 입력 받는다.</li>\n<li>입력받은 내용이 모델에게 어떤 의미가 있는지 파악한다.</li>\n</ul>\n<ol>\n<li>사용자는 뷰에만 접촉할 수 있다.</li>\n<li>컨트롤러가 모델에게 상태를 변경하라고 요청한다.</li>\n<li>컨트롤러가 뷰를 변경해 달라고 요청할 수도 있다.</li>\n<li>상태가 변경되면 모델이 뷰에게 그 사실을 알린다.</li>\n<li>뷰가 모델에게 상태를 요청한다.</li>\n</ol>\n<h2 id=\"mvc에-사용되는-패턴-알아보기\" style=\"position:relative;\"><a href=\"#mvc%EC%97%90-%EC%82%AC%EC%9A%A9%EB%90%98%EB%8A%94-%ED%8C%A8%ED%84%B4-%EC%95%8C%EC%95%84%EB%B3%B4%EA%B8%B0\" aria-label=\"mvc에 사용되는 패턴 알아보기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>MVC에 사용되는 패턴 알아보기</h2>\n<p>모델 (Model)</p>\n<ul>\n<li>옵저버 패턴(<a class=\"obsidian-internal-link\" href=\"/post/observer-pattern\">observer-pattern</a>)을 사용한다.</li>\n<li>상태가 변경되었을 때 모델과 연관된 객체들에게 연락한다.</li>\n<li>모델을 뷰와 컨트롤러부터 완전히 독립시킬 수 있다.</li>\n<li>한 모델에서 서로 다른 뷰를 사용할 수도, 여러 개의 뷰를 동시에 사용하는 것도 가능하다.</li>\n</ul>\n<p>뷰 (View)</p>\n<ul>\n<li>컴포지트 패턴(<a class=\"obsidian-internal-link\" href=\"/post/iterator-pattern-composite-pattern\">iterator-pattern-composite-pattern</a>), 전략 패턴(<a class=\"obsidian-internal-link\" href=\"/post/strategy-pattern\">strategy-pattern</a>)을 사용한다.</li>\n<li>컨트롤러가 뷰에게 화면을 갱신해달라고 요청하면 최상위 뷰 구성요소에게만 갱신요청하기만 하면 된다.</li>\n</ul>\n<p>컨트롤러 (Controller)</p>\n<ul>\n<li>전략 패턴(<a class=\"obsidian-internal-link\" href=\"/post/strategy-pattern\">strategy-pattern</a>)을 사용한다.</li>\n<li>컨트롤러가 전략을 제공한다.</li>\n<li>뷰는 애플리케이션의 겉모습만 신경을 쓰고, 인터페이스의 모든 행동을 결정하는 일은 모두 컨트롤러에게 맡긴다.</li>\n<li>전략 패턴을 사용하여, 뷰를 모델로부터 분리한다.</li>\n</ul>","frontmatter":{"title":"CHAPTER 12 - 패턴을 모아 패턴 만들기 (복합 패턴)","date":"2025.05.22","categories":"DesignPattern","description":"헤드퍼스트 디자인 패턴 12장을 읽고 정리한 내용입니다."},"fields":{"category":"헤드 퍼스트 디자인 패턴 14가지 GoF 필살 패턴"},"enhancedHeadings":[{"id":"복합-패턴","value":"복합 패턴","depth":2,"contentLength":153},{"id":"모델-뷰-컨트롤러-mvc","value":"모델-뷰-컨트롤러 (MVC)","depth":2,"contentLength":376},{"id":"mvc에-사용되는-패턴-알아보기","value":"MVC에 사용되는 패턴 알아보기","depth":2,"contentLength":367}]}},"pageContext":{}},"staticQueryHashes":["2106608769","2555404786"],"slicesMap":{}}