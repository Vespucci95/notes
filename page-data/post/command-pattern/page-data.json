{"componentChunkName":"component---src-templates-post-template-tsx","path":"/post/command-pattern/","result":{"data":{"markdownRemark":{"id":"927627cd-40b5-52a3-85d4-36e56f6049b0","html":"<h2 id=\"커맨드-패턴의-정의\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%A0%95%EC%9D%98\" aria-label=\"커맨드 패턴의 정의 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴의 정의</h2>\n<blockquote>\n<p>커맨드 패턴을 사용하면 요청 내역을 객체로 캡슐화해서 객체를 서로 다른 요청 내역에 따라 매개변수화할 수 있다. 이를 통해 요청을 큐에 저장하거나 로그로 기록하거나 작업 취소 기능을 사용할 수 있다.</p>\n</blockquote>\n<p>간단히 말해, 커맨드 객체는 일련의 행동을 특정 리시버와 연결함으로써 요청을 캡슐화한 것이다.</p>\n<h2 id=\"만능-iot-리모컨\" style=\"position:relative;\"><a href=\"#%EB%A7%8C%EB%8A%A5-iot-%EB%A6%AC%EB%AA%A8%EC%BB%A8\" aria-label=\"만능 iot 리모컨 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>만능 IOT 리모컨</h2>\n<p>Weather-O-Rama의 CEO로부터 홈오토메이션 리모컨의 API 디자인을 의뢰받았다. 이 리모컨은 7개의 프로그래밍 가능한 슬롯이 있고, 각 슬롯마다 ON/OFF 버튼이 있으며, 마지막으로 누른 버튼의 명령을 취소하는 UNDO 버튼도 있다.</p>\n<p>여러 업체로부터 공급받은 자바 클래스를 살펴보니 공통적인 인터페이스가 없고, 앞으로 새로운 클래스가 추가될 가능성도 있어 확장성 있는 디자인이 필요했다.</p>\n<h2 id=\"커맨드-패턴의-실제-예-객체마을-식당\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%8B%A4%EC%A0%9C-%EC%98%88-%EA%B0%9D%EC%B2%B4%EB%A7%88%EC%9D%84-%EC%8B%9D%EB%8B%B9\" aria-label=\"커맨드 패턴의 실제 예 객체마을 식당 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴의 실제 예: 객체마을 식당</h2>\n<p>커맨드 패턴을 이해하기 위해 객체마을 식당의 주문 과정을 살펴보자</p>\n<ol>\n<li>고객이 종업원에게 주문을 한다.</li>\n<li>종업원은 주문을 받아서 카운터에 전달한다.</li>\n<li>주방장이 주문대로 음식을 준비한다.</li>\n</ol>\n<p>이 과정에서 각 역할은</p>\n<ul>\n<li>주문서: 주문 내용을 캡슐화하며, <code class=\"language-text\">orderUp()</code> 메소드를 통해 식사 준비를 지시한다.</li>\n<li>종업원: 주문서를 받고 <code class=\"language-text\">orderUp()</code> 메소드를 호출한다.</li>\n<li>주방장: 실제 식사를 준비하는 방법을 알고 있다.</li>\n</ul>\n<p>이를 통해 종업원과 주방장은 완전히 분리되어 있다. 종업원은 주문서에 있는 메소드만 호출하고, 주방장은 주문서로 할 일을 전달받는다.</p>\n<h2 id=\"첫-번째-커맨드-객체-만들기\" style=\"position:relative;\"><a href=\"#%EC%B2%AB-%EB%B2%88%EC%A7%B8-%EC%BB%A4%EB%A7%A8%EB%93%9C-%EA%B0%9D%EC%B2%B4-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"첫 번째 커맨드 객체 만들기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>첫 번째 커맨드 객체 만들기</h2>\n<p>커맨드 인터페이스 구현</p>\n<p>모든 커맨드 객체가 구현해야 하는 인터페이스</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>조명을 켤 때 필요한 커맨드 클래스 구현</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Light</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"on\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"off\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LightOnCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light <span class=\"token operator\">=</span> light<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"커맨드-객체-사용하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%EA%B0%9D%EC%B2%B4-%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"커맨드 객체 사용하기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 객체 사용하기</h2>\n<p>간단한 리모컨 클래스를 만들어 커맨드 객체를 사용해보자</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">SimpleRemoteControl</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> slot<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>command<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>slot <span class=\"token operator\">=</span> command<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">buttonWasPressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>slot<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">function</span> <span class=\"token function\">testSimpleRemote</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> remote <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">SimpleRemoteControl</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Light</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> lightOn <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LightOnCommand</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  \n  remote<span class=\"token punctuation\">.</span><span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>lightOn<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  remote<span class=\"token punctuation\">.</span><span class=\"token function\">buttonWasPressed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"커맨드-패턴의-주요-구성-요소\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4%EC%9D%98-%EC%A3%BC%EC%9A%94-%EA%B5%AC%EC%84%B1-%EC%9A%94%EC%86%8C\" aria-label=\"커맨드 패턴의 주요 구성 요소 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴의 주요 구성 요소</h2>\n<ul>\n<li>클라이언트: 커맨드 객체를 생성하고 인보커에 설정한다.</li>\n<li>인보커: 커맨드 객체의 execute() 메소드를 호출한다.</li>\n<li>커맨드: <code class=\"language-text\">execute()</code> 메소드를 통해 리시버에게 특정 작업을 요청한다.</li>\n<li>리시버: 실제 작업을 수행한다.</li>\n</ul>\n<h2 id=\"리모컨-코드-만들기\" style=\"position:relative;\"><a href=\"#%EB%A6%AC%EB%AA%A8%EC%BB%A8-%EC%BD%94%EB%93%9C-%EB%A7%8C%EB%93%A4%EA%B8%B0\" aria-label=\"리모컨 코드 만들기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>리모컨 코드 만들기</h2>\n<p>7개의 슬롯이 있는 리모컨 클래스를 구현해보자:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">RemoteControl</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> onCommands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> offCommands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    \n    <span class=\"token keyword\">const</span> noCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">7</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> noCommand<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> noCommand<span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>slot<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">,</span> onCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">,</span> offCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> onCommand<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> offCommand<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">onButtonWasPushed</span><span class=\"token punctuation\">(</span>slot<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">offButtonWasPushed</span><span class=\"token punctuation\">(</span>slot<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>여기서 <code class=\"language-text\">NoCommand</code>는 널 객체(null object) 패턴을 적용한 것으로, 슬롯에 아무 것도 할당되지 않았을 때 사용된다.</p>\n<h2 id=\"작업-취소-기능-추가하기\" style=\"position:relative;\"><a href=\"#%EC%9E%91%EC%97%85-%EC%B7%A8%EC%86%8C-%EA%B8%B0%EB%8A%A5-%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0\" aria-label=\"작업 취소 기능 추가하기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>작업 취소 기능 추가하기</h2>\n<p>Command 인터페이스에 <code class=\"language-text\">undo()</code> 메소드를 추가한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>리모컨 클래스를 수정하여 작업 취소 기능을 추가한다:</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">RemoteControlWithUndo</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> onCommands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> offCommands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">private</span> undoCommand<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> noCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">NoCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>noCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands <span class=\"token operator\">=</span> <span class=\"token function\">Array</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">fill</span><span class=\"token punctuation\">(</span>noCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>undoCommand <span class=\"token operator\">=</span> noCommand<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">onButtonWasPushed</span><span class=\"token punctuation\">(</span>slot<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>undoCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>onCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">offButtonWasPushed</span><span class=\"token punctuation\">(</span>slot<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>undoCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>offCommands<span class=\"token punctuation\">[</span>slot<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">undoButtonWasPushed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>undoCommand<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"여러-동작을-한번에-처리하기\" style=\"position:relative;\"><a href=\"#%EC%97%AC%EB%9F%AC-%EB%8F%99%EC%9E%91%EC%9D%84-%ED%95%9C%EB%B2%88%EC%97%90-%EC%B2%98%EB%A6%AC%ED%95%98%EA%B8%B0\" aria-label=\"여러 동작을 한번에 처리하기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>여러 동작을 한번에 처리하기</h2>\n<p>매크로 커맨드를 통해 여러 명령을 한 번에 실행할 수 있다</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">MacroCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">private</span> commands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>commands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands <span class=\"token operator\">=</span> commands<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  \n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// 역순으로 undo를 실행 (원래 실행 순서의 반대)</span>\n    <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span>length <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">>=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">--</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"커맨드-패턴-활용하기\" style=\"position:relative;\"><a href=\"#%EC%BB%A4%EB%A7%A8%EB%93%9C-%ED%8C%A8%ED%84%B4-%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0\" aria-label=\"커맨드 패턴 활용하기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>커맨드 패턴 활용하기</h2>\n<p>커맨드 패턴은 다음과 같은 다양한 상황에서 활용할 수 있다:</p>\n<ul>\n<li>스케줄러</li>\n<li>스레드 풀</li>\n<li>작업 큐</li>\n</ul>\n<h2 id=\"용어-정리\" style=\"position:relative;\"><a href=\"#%EC%9A%A9%EC%96%B4-%EC%A0%95%EB%A6%AC\" aria-label=\"용어 정리 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>용어 정리</h2>\n<ol>\n<li>커맨드(Command): 요청을 나타내는 객체로, 주로 execute() 메소드를 포함한다.</li>\n<li>컨크리트 커맨드(Concrete Command): 커맨드의 구체적인 구현이다.</li>\n<li>인보커(Invoker): 요청을 발신하는 객체로, 커맨드 객체의 execute() 메소드를 호출한다.</li>\n<li>수신자(Receiver): 요청을 수행하는 객체로, 실제 작업을 처리한다.</li>\n<li>클라이언트(Client): 인보커 객체와 수신자 객체 사이에서 커맨드 객체를 생성하고 설정한다.</li>\n</ol>\n<p>커맨드 패턴을 사용하면 요청하는 객체와 그 요청을 수행하는 객체를 분리함으로써 시스템의 결합도를 낮추고 유연성을 높일 수 있다.</p>\n<h2 id=\"전체-코드-살펴보기\" style=\"position:relative;\"><a href=\"#%EC%A0%84%EC%B2%B4-%EC%BD%94%EB%93%9C-%EC%82%B4%ED%8E%B4%EB%B3%B4%EA%B8%B0\" aria-label=\"전체 코드 살펴보기 permalink\" class=\"post-toc before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>전체 코드 살펴보기</h2>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// Command(커맨드)  </span>\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>  \n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token comment\">// Invoker(인보커)  </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Invoker</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token keyword\">private</span> command<span class=\"token operator\">:</span> Command  \n  <span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>command<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>command <span class=\"token operator\">=</span> command  \n  <span class=\"token punctuation\">}</span>  \n  <span class=\"token function\">executeCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>command<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token comment\">// Receiver (수신자)  </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Light</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'on'</span><span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">}</span>  \n  <span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span><span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token builtin\">console</span><span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'off'</span><span class=\"token punctuation\">)</span>  \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token comment\">// Concrete Command (컨크리트 커맨드)  </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LightOnCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token keyword\">private</span> light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">;</span>  \n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light <span class=\"token operator\">=</span> light<span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token comment\">// Concrete Command (컨크리트 커맨드)  </span>\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">LightOffCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token keyword\">private</span> light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">;</span>  \n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>light<span class=\"token operator\">:</span> Light<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light <span class=\"token operator\">=</span> light<span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">off</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>light<span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token keyword\">const</span> invoker <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Invoker</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">const</span> light <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Light</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">const</span> lightOnCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LightOnCommand</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n<span class=\"token keyword\">const</span> lightOffCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">LightOffCommand</span><span class=\"token punctuation\">(</span>light<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ninvoker<span class=\"token punctuation\">.</span><span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>lightOnCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ninvoker<span class=\"token punctuation\">.</span><span class=\"token function\">executeCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ninvoker<span class=\"token punctuation\">.</span><span class=\"token function\">setCommand</span><span class=\"token punctuation\">(</span>lightOffCommand<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \ninvoker<span class=\"token punctuation\">.</span><span class=\"token function\">executeCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  \n<span class=\"token keyword\">class</span> <span class=\"token class-name\">MacroCommand</span> <span class=\"token keyword\">implements</span> <span class=\"token class-name\">Command</span> <span class=\"token punctuation\">{</span>  \n  <span class=\"token keyword\">private</span> commands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>  \n  \n  <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span>commands<span class=\"token operator\">:</span> Command<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands <span class=\"token operator\">=</span> commands<span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n      command<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n  \n  <span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">{</span>  \n    <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>command<span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>  \n      command<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \n  <span class=\"token punctuation\">}</span>  \n<span class=\"token punctuation\">}</span>  \n  \n<span class=\"token keyword\">const</span> macroCommand <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">MacroCommand</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>lightOnCommand<span class=\"token punctuation\">,</span> lightOffCommand<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \nmacroCommand<span class=\"token punctuation\">.</span><span class=\"token function\">execute</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  \nmacroCommand<span class=\"token punctuation\">.</span><span class=\"token function\">undo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>","frontmatter":{"title":"CHAPTER 06 - 호출 캡슐화하기 (커맨드 패턴)","date":"2025.03.18","categories":"DesignPattern","description":"헤드퍼스트 디자인 패턴 6장을 읽고 TS로 정리한 내용입니다."},"fields":{"category":"헤드 퍼스트 디자인 패턴 14가지 GoF 필살 패턴"},"enhancedHeadings":[{"id":"커맨드-패턴의-정의","value":"커맨드 패턴의 정의","depth":2,"contentLength":125},{"id":"만능-iot-리모컨","value":"만능 IOT 리모컨","depth":2,"contentLength":178},{"id":"커맨드-패턴의-실제-예-객체마을-식당","value":"커맨드 패턴의 실제 예: 객체마을 식당","depth":2,"contentLength":238},{"id":"첫-번째-커맨드-객체-만들기","value":"첫 번째 커맨드 객체 만들기","depth":2,"contentLength":286},{"id":"커맨드-객체-사용하기","value":"커맨드 객체 사용하기","depth":2,"contentLength":365},{"id":"커맨드-패턴의-주요-구성-요소","value":"커맨드 패턴의 주요 구성 요소","depth":2,"contentLength":101},{"id":"리모컨-코드-만들기","value":"리모컨 코드 만들기","depth":2,"contentLength":577},{"id":"작업-취소-기능-추가하기","value":"작업 취소 기능 추가하기","depth":2,"contentLength":612},{"id":"여러-동작을-한번에-처리하기","value":"여러 동작을 한번에 처리하기","depth":2,"contentLength":314},{"id":"커맨드-패턴-활용하기","value":"커맨드 패턴 활용하기","depth":2,"contentLength":39},{"id":"용어-정리","value":"용어 정리","depth":2,"contentLength":260},{"id":"전체-코드-살펴보기","value":"전체 코드 살펴보기","depth":2,"contentLength":1201}]}},"pageContext":{}},"staticQueryHashes":["3003237974"],"slicesMap":{}}