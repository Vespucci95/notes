{"version":3,"file":"d0dcf9c1039535d44ee74defc829dfbf62dac3c5-7b0f26cd4a21559466b0.js","mappings":"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","sources":["webpack://study-books/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/noop.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://study-books/./src/components/post/container/post-container.module.scss","webpack://study-books/./src/components/post/container/post-container.tsx","webpack://study-books/./src/components/post/header/post-header.module.scss","webpack://study-books/./src/components/post/header/post-header.tsx","webpack://study-books/./src/components/post/body/post-body.tsx","webpack://study-books/./src/components/post/index.ts","webpack://study-books/./node_modules/motion-utils/dist/es/array.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://study-books/./src/queries/app-config.ts","webpack://study-books/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/is-svg-element.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/is-svg-svg-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/progress.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/is-html-element.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/errors.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://study-books/./src/components/seo/seo.tsx","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-object.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/utils/is-motion-value.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs"],"sourcesContent":["/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","// extracted by mini-css-extract-plugin\nexport default {\"animatedContainer__content\":\"post-container-module--animated-container__content--c6ca7\"};","import * as React from 'react';\nimport { HTMLAttributes, PropsWithChildren } from 'react';\nimport { motion, MotionProps } from 'framer-motion';\nimport styles from './post-container.module.scss';\n\nconst PostContainer = ({ children, className, ...props }: PropsWithChildren<MotionProps & HTMLAttributes<HTMLDivElement>>) => {\n  return (\n    <motion.div\n      initial={{ y: 30, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.3, ease: \"easeOut\" }}\n      className={`${styles['animatedContainer__content']} ${className}`}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default PostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"postHeader__container\":\"post-header-module--post-header__container--17ea9\",\"postHeader__title\":\"post-header-module--post-header__title--8af55\",\"postHeader__meta\":\"post-header-module--post-header__meta--0e52a\"};","import * as React from 'react';\nimport { motion } from 'framer-motion';\nimport styles from './post-header.module.scss'\nimport { useFetchAppConfig } from '@/queries/app-config';\n\ntype PostHeaderProps = {\n  title: string;\n  date: string;\n  description: string;\n  category: string;\n}\n\nconst PostHeader = ({ title, category, date }: PostHeaderProps) => {\n  const { site } = useFetchAppConfig()\n\n  return (\n    <motion.div\n      className={styles['postHeader__container']}\n    >\n      <h1 className={styles['postHeader__title']}>\n        {title || site.siteMetadata.defaultPostTitle}\n      </h1>\n      <div className={styles['postHeader__meta']}>\n        <p>{category || site.siteMetadata.defaultCategoryName}</p>\n        <p>{date}</p>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default PostHeader;","import * as React from 'react';\n\ninterface MDXProps {\n  html: string;\n}\n\nconst PostBody: React.FC<MDXProps> = ({ html }) => {\n  return (\n    <div className=\"markdown\" dangerouslySetInnerHTML={{ __html: html }} />\n  );\n};\n\nexport default PostBody;","import PostContainer from '@/components/post/container/post-container';\nimport PostHeader from '@/components/post/header/post-header';\nimport PostBody from '@/components/post/body/post-body';\n\nexport const Post = Object.assign(PostContainer, {\n  Header: PostHeader,\n  Body: PostBody\n})","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SiteMetadataConfigQuery } from '@/__generated__/gatsby-types';\nimport { DeepRequired } from '@/types';\n\nexport const SiteMetadataQuery = graphql`\n    query SiteMetadataConfig {\n        site {\n            siteMetadata {\n                title\n                author\n                description\n                siteUrl\n                obsidianNoteName\n                categoryFieldName\n                postTemplateBasePath\n                defaultCategoryName\n                defaultPostTitle\n            }\n        }\n    }\n`;\n\nexport const useFetchAppConfig = (): DeepRequired<SiteMetadataConfigQuery> => useStaticQuery(SiteMetadataQuery);","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an SVG element in a way\n * that works across iframes\n */\nfunction isSVGElement(element) {\n    return isObject(element) && \"ownerSVGElement\" in element;\n}\n\nexport { isSVGElement };\n","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revisit this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            this.options.onStop?.();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        this.options.onPlay?.();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.notifyFinished();\n        this.teardown();\n        this.state = \"finished\";\n        this.options.onComplete?.();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n        this.options.onCancel?.();\n    }\n    teardown() {\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from 'motion-dom';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { defaultTransformValue, parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\nimport { isHTMLElement } from '../../../utils/is-html-element.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Could be re-enabled now we have support for linear() easing\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!isHTMLElement(motionValue?.owner?.current)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from 'motion-dom';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, isSVGElement, isSVGSVGElement, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance) && !isSVGSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","import { isSVGElement } from './is-svg-element.mjs';\n\n/**\n * Checks if an element is specifically an SVGSVGElement (the root SVG element)\n * in a way that works across iframes\n */\nfunction isSVGSVGElement(element) {\n    return isSVGElement(element) && element.tagName === \"svg\";\n}\n\nexport { isSVGSVGElement };\n","import { isMotionValue, motionValue } from 'motion-dom';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isHTMLElement } from '../../utils/is-html-element.mjs';\nimport { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (isHTMLElement(target)) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { isMotionValue } from 'motion-dom';\nimport { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { isMotionValue } from 'motion-dom';\nimport { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isMotionValue } from 'motion-dom';\nimport { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { isMotionValue, transformPropOrder } from 'motion-dom';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, isMotionValue, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isMotionValue, motionValue } from 'motion-dom';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver, isMotionValue } from 'motion-dom';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, defaultTransformValue, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return this.projection?.isProjecting\n                ? defaultTransformValue(key)\n                : readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","import { isObject } from 'motion-utils';\n\n/**\n * Checks if an element is an HTML element in a way\n * that works across iframes\n */\nfunction isHTMLElement(element) {\n    return isObject(element) && \"offsetHeight\" in element;\n}\n\nexport { isHTMLElement };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","class WithPromise {\n    constructor() {\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import React from 'react'\nimport { graphql, useStaticQuery } from 'gatsby';\n\ntype Props = {\n  title?: string;\n}\n\nconst Seo = ({ title = '' }: Props) => {\n  const { meta } = useStaticQuery(graphql`\n      query MetaQuery {\n          meta: site {\n              siteMetadata {\n                  title\n                  description\n                  siteUrl\n                  author\n              }\n          }\n      }\n  `)\n\n  return (\n    <>\n      <title>{`${title || meta.siteMetadata.author}`}</title>\n      <meta lang=\"ko\" />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta httpEquiv=\"content-type\" content=\"text/html; charset=UTF-8\" />\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n      <meta name=\"description\" content={meta.siteMetadata.description} />\n    </>\n  );\n};\n\nexport default Seo;\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","function isObject(value) {\n    return typeof value === \"object\" && value !== null;\n}\n\nexport { isObject };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n"],"names":["combineFunctions","a","b","v","pipe","transformers","reduce","createUnitType","unit","test","endsWith","split","length","parse","parseFloat","transform","degrees","percent","px","vh","vw","progressPercentage","mirrorEasing","easing","p","defaultOffset","arr","offset","remaining","min","i","offsetProgress","progress","push","fillOffset","backOut","backIn","backInOut","schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","noop","any","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask","_ref","children","className","props","React","motion","div","Object","assign","initial","y","opacity","animate","transition","duration","ease","styles","title","category","date","site","useFetchAppConfig","siteMetadata","defaultPostTitle","defaultCategoryName","html","dangerouslySetInnerHTML","__html","Post","PostContainer","Header","PostHeader","Body","PostBody","addUniqueItem","item","indexOf","removeItem","index","splice","maxGeneratorDuration","calcGeneratorDuration","generator","next","done","Infinity","rgbUnit","Math","round","clampRgbUnit","rgba","red","green","blue","alpha","alpha$1","hueToRgb","q","t","mixImmediate","mixLinearColor","from","to","fromExpo","expo","sqrt","colorTypes","hex","hsla","asRGBA","color","type","find","Boolean","model","hue","saturation","lightness","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","Set","mixNumber","getMixer","mixComplex","Array","isArray","mixArray","mixObject","output","numValues","blendValue","map","key","origin","target","template","complex","createTransformer","originStats","targetStats","indexes","var","number","has","values","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","inertia","keyframes","velocity","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","max","restDelta","restSpeed","value","nearestBoundary","abs","amplitude","ideal","calcDelta","exp","calcLatest","applyFriction","delta","latest","timeReachedBoundary","spring$1","checkCatchBoundary","damping","stiffness","calculatedDuration","hasUpdatedFrame","checkStringStartsWith","token","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","singleCssVariableRegex","trim","generateLinearEasing","resolution","points","numPoints","substring","statsBuffer","addProjectionMetrics","sanitize","floatRegex","isNotNull","getFinalKeyframe","repeat","repeatType","finalKeyframe","speed","resolvedKeyframes","filter","SubscriptionManager","constructor","this","subscriptions","add","handler","notify","c","numSubscriptions","getSize","clear","useStaticQuery","resolveElements","elementOrSelector","scope","selectorCache","EventTarget","root","document","current","elements","querySelectorAll","circIn","sin","acos","circOut","circInOut","springDefaults","mass","bounce","visualDuration","granular","default","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","clamp","undampedFreq","exponentialDecay","calcAngularFreq","d","e","pow","f","g","initialGuess","result","rootIterations","approximateRoot","isNaN","durationKeys","physicsKeys","isSpringType","options","keys","some","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","PI","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","currentVelocity","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","toTransition","applyToOptions","generatorOptions","scale","createGenerator","createGeneratorEasing","reverseEasing","memo","callback","transitionTypeMap","decay","tween","replaceTransitionType","anticipate","collectMotionValues","MotionValue","init","canTrackVelocity","events","updateAndNotify","render","currentTime","updatedAt","setPrevFrameValue","prev","setCurrent","change","dependents","dependent","dirty","renderRequest","hasAnimated","owner","prevFrameValue","prevUpdatedAt","onChange","subscription","on","eventName","unsubscribe","read","stop","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","setWithVelocity","jump","endAnimation","addDependent","removeDependent","delete","get","getPrevious","getVelocity","start","startAnimation","Promise","resolve","animation","animationStart","then","animationComplete","clearAnimation","animationCancel","isAnimating","destroy","motionValue","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","x","lowerBound","upperBound","currentX","currentT","binarySubdivide","isSVGElement","element","singleColorRegex","isColorString","testProp","isNullish","prototype","hasOwnProperty","call","splitColor","aName","bName","cName","match","useIsomorphicLayoutEffect","useLayoutEffect","useEffect","interpolate","input","isClamp","inputLength","isZeroDeltaRange","reverse","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","MotionConfigContext","createContext","transformPagePoint","isStatic","reducedMotion","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","frameloopDriver","update","passTimestamp","keepAlive","percentToProgress","JSAnimation","WithPromise","super","startTime","isStopped","holdTime","playbackSpeed","sync","tick","teardown","onStop","mainThread","initAnimation","play","autoplay","pause","repeatDelay","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","sample","delay","onUpdate","timeWithoutDelay","isInDelayPhase","elapsed","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","finish","reject","finished","driver","newSpeed","hasChanged","onPlay","updateFinished","complete","notifyFinished","onComplete","onCancel","stopDriver","sampleTime","attachTimeline","timeline","allowFlatten","observe","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","_target","isAnimationControls","getValueState","visualElement","forEach","resolveVariantFromProps","definition","custom","variants","resolveVariant","getProps","getValueTransition","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","radToDeg","rad","rotate","angle","atan2","rebaseAngle","matrix2dParsers","translateX","translateY","scaleX","scaleY","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","transformsToRestore","removedTransforms","removeNonTranslationalTransform","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","readAllKeyframes","readKeyframes","KeyframeResolver","unresolvedKeyframes","isAsync","scheduleResolve","resolveKeyframes","currentValue","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","resume","supportsFlags","memoSupports","supportsFlag","memoized","supportsLinearEasing","createElement","cubicBezierAsString","supportedWaapiEasing","linear","easeIn","easeOut","easeInOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","times","pseudoElement","keyframeOptions","waapi","fill","iterations","direction","finally","isGenerator","NativeAnimation","finishedTime","isPseudoElement","applyGeneratorOptions","onfinish","keyframe","updateMotionValue","isCSSVar","style","setProperty","setStyle","commitStyles","effect","getComputedTiming","Number","playbackRate","playState","newStartTime","updateTiming","unsupportedEasingFunctions","replaceStringEasing","NativeAnimationExtended","sampleAnimation","isAnimatable","acceleratedValues","supportsWaapi","Element","AsyncMotionValueAnimation","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","forced","onKeyframesResolved","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","transformTemplate","supportsBrowserAnimation","catch","pendingTimeline","_finished","onResolve","_onReject","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","when","_delay","delayChildren","staggerChildren","staggerDirection","isTransitionDefined","shouldSkip","skipAnimations","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","MotionHandoffAnimation","appearId","shouldReduceMotion","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","animateChildren","first","last","sortNodePosition","shallowCompare","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","prop","reversePriorityOrder","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","source","originPoint","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","isDirty","timeout","checkElapsed","setup","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","lowercaseSVGElements","isSVGComponent","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","charAt","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","getAnimatableNone","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","activeAnimations","toFromDifference","velocityPerSecond","frameDuration","isHTMLElement","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","onReject","warning","invariant","isBrowser","meta","author","lang","property","content","httpEquiv","description","useConstant","r","parseInt","MotionGlobalConfig","isEasingArray","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","immediate","queue","frameloop","createRenderStep","preUpdate","processBatch","isBezierDefinition","isObject","isMotionValue","supportsScrollTimeline","ScrollTimeline"],"sourceRoot":""}