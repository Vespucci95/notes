{"version":3,"file":"d0dcf9c1039535d44ee74defc829dfbf62dac3c5-e3f40e080ebfc36c989b.js","mappings":"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","sources":["webpack://study-books/./node_modules/motion-utils/dist/es/pipe.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-css-variable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/units.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/mirror.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/default.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/fill.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/back.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/frame.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/noop.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/sync-time.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/array.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/calc-duration.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla-to-rgba.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/immediate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/color.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/visibility.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/complex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/inertia.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-animation-controls.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/get-value-transition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/utils/keys-position.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-keyframes-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/setters.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/add-will-change.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/camel-to-dash.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/optimized-appear/get-appear-id.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/parse-transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/unit-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/KeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/fill-wildcards.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/flags.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/linear-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/cubic-bezier.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/supported.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/easing/map-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/start-waapi-animation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/is-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/apply-generator.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/style-set.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/render/dom/is-css-var.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/unsupported-easing.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/NativeAnimationExtended.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/is-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/supports/waapi.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/AsyncMotionValueAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/can-animate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/utils/is-transition-defined.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-variant-label.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/variant-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/get-variant-context.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/Feature.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animations.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/is-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-dom-event.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-primary-pointer.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/event-info.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/models.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/utils/measure.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/get-context-window.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-ref-object.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/distance.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/drag/state/set-active.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/pan/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/microtask.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/PresenceContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/SwitchLayoutGroupContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/scale-correction.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/delay.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/utils/resolve-motion-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/shared/stack.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/animation/animate/single-value.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/styles/transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/drag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/drag/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/setup.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/hover.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/utils/is-node-or-child.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/is-keyboard-accessible.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/state.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/utils/keyboard.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/gestures/press/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/press.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/gestures.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/gestures/focus.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/layout.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/LazyContext.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/is-controlling-variants.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/create.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionContext/utils.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/definitions.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/symbol.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-motion-ref.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/features/load-features.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/is-forced-motion-value.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/get-as-type.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/int.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/transform.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/number.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-transform.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/build-styles.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/valid-prop.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/filter-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/lowercase-elements.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/utils/is-svg-component.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/path.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/build-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/create-render-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/is-svg-tag.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/use-props.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/use-render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/motion/utils/use-visual-state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/scrape-motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/config-motion.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/create-factory.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/auto.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/test.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/dimensions.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-numerical-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/css-variables-conversion.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/is-zero-value-string.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/filter.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/maps/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/animatable-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/make-none-animatable.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/DOMKeyframesResolver.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/utils/is-none.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/find.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/store.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/VisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/camel-case-attrs.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/svg/utils/render.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/proxy.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/render/components/motion/create.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/waapi/utils/linear.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/buffer.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/sanitize.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/float-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/get-final.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/subscription-manager.mjs","webpack://study-books/./src/queries/app-config.ts","webpack://study-books/./node_modules/motion-dom/dist/es/utils/resolve-elements.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/circ.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/defaults.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/find.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/spring/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/create-generator-easing.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/modifiers/reverse.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/memo.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/replace-transition-type.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/anticipate.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/index.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/cubic-bezier.mjs","webpack://study-books/./src/components/post/container/post-container.module.scss","webpack://study-books/./src/components/post/container/post-container.tsx","webpack://study-books/./src/components/post/header/post-header.module.scss","webpack://study-books/./src/components/post/header/post-header.tsx","webpack://study-books/./src/components/post/body/post-body.module.scss","webpack://study-books/./src/components/post/body/post-body.tsx","webpack://study-books/./src/components/post/index.ts","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/single-color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/utils.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/is-nullish.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-isomorphic-effect.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/interpolate.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/context/MotionConfigContext.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/utils/velocity.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/mix/number.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/drivers/frame.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/JSAnimation.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/utils/color-regex.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/complex/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/stats/animation-count.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/progress.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/velocity-per-second.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/clamp.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/time-conversion.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/utils/WithPromise.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hsla.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/errors.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/is-browser.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/utils/use-constant.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/color/hex.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/global-config.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/ease.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-easing-array.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/map.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/generators/keyframes.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/animation/keyframes/offsets/time.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/order.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/batcher.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/frameloop/render-step.mjs","webpack://study-books/./node_modules/motion-utils/dist/es/easing/utils/is-bezier-definition.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/value/types/numbers/index.mjs","webpack://study-books/./node_modules/motion-dom/dist/es/utils/supports/scroll-timeline.mjs","webpack://study-books/./node_modules/framer-motion/dist/es/value/utils/is-motion-value.mjs"],"sourcesContent":["/**\n * Pipe\n * Compose other transformers to run linearily\n * pipe(min(20), max(40))\n * @param  {...functions} transformers\n * @return {function}\n */\nconst combineFunctions = (a, b) => (v) => b(a(v));\nconst pipe = (...transformers) => transformers.reduce(combineFunctions);\n\nexport { pipe };\n","const checkStringStartsWith = (token) => (key) => typeof key === \"string\" && key.startsWith(token);\nconst isCSSVariableName = \n/*@__PURE__*/ checkStringStartsWith(\"--\");\nconst startsAsVariableToken = \n/*@__PURE__*/ checkStringStartsWith(\"var(--\");\nconst isCSSVariableToken = (value) => {\n    const startsWithToken = startsAsVariableToken(value);\n    if (!startsWithToken)\n        return false;\n    // Ensure any comments are stripped from the value as this can harm performance of the regex.\n    return singleCssVariableRegex.test(value.split(\"/*\")[0].trim());\n};\nconst singleCssVariableRegex = /var\\(--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)$/iu;\n\nexport { isCSSVariableName, isCSSVariableToken };\n","/*#__NO_SIDE_EFFECTS__*/\nconst createUnitType = (unit) => ({\n    test: (v) => typeof v === \"string\" && v.endsWith(unit) && v.split(\" \").length === 1,\n    parse: parseFloat,\n    transform: (v) => `${v}${unit}`,\n});\nconst degrees = /*@__PURE__*/ createUnitType(\"deg\");\nconst percent = /*@__PURE__*/ createUnitType(\"%\");\nconst px = /*@__PURE__*/ createUnitType(\"px\");\nconst vh = /*@__PURE__*/ createUnitType(\"vh\");\nconst vw = /*@__PURE__*/ createUnitType(\"vw\");\nconst progressPercentage = /*@__PURE__*/ (() => ({\n    ...percent,\n    parse: (v) => percent.parse(v) / 100,\n    transform: (v) => percent.transform(v * 100),\n}))();\n\nexport { degrees, percent, progressPercentage, px, vh, vw };\n","// Accepts an easing function and returns a new one that outputs mirrored values for\n// the second half of the animation. Turns easeIn into easeInOut.\nconst mirrorEasing = (easing) => (p) => p <= 0.5 ? easing(2 * p) / 2 : (2 - easing(2 * (1 - p))) / 2;\n\nexport { mirrorEasing };\n","import { fillOffset } from './fill.mjs';\n\nfunction defaultOffset(arr) {\n    const offset = [0];\n    fillOffset(offset, arr.length - 1);\n    return offset;\n}\n\nexport { defaultOffset };\n","import { progress } from 'motion-utils';\nimport { mixNumber } from '../../../utils/mix/number.mjs';\n\nfunction fillOffset(offset, remaining) {\n    const min = offset[offset.length - 1];\n    for (let i = 1; i <= remaining; i++) {\n        const offsetProgress = progress(0, remaining, i);\n        offset.push(mixNumber(min, 1, offsetProgress));\n    }\n}\n\nexport { fillOffset };\n","import { cubicBezier } from './cubic-bezier.mjs';\nimport { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst backOut = /*@__PURE__*/ cubicBezier(0.33, 1.53, 0.69, 0.99);\nconst backIn = /*@__PURE__*/ reverseEasing(backOut);\nconst backInOut = /*@__PURE__*/ mirrorEasing(backIn);\n\nexport { backIn, backInOut, backOut };\n","import { noop } from 'motion-utils';\nimport { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: frame, cancel: cancelFrame, state: frameData, steps: frameSteps, } = /* @__PURE__ */ createRenderBatcher(typeof requestAnimationFrame !== \"undefined\" ? requestAnimationFrame : noop, true);\n\nexport { cancelFrame, frame, frameData, frameSteps };\n","/*#__NO_SIDE_EFFECTS__*/\nconst noop = (any) => any;\n\nexport { noop };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { frameData } from './frame.mjs';\n\nlet now;\nfunction clearTime() {\n    now = undefined;\n}\n/**\n * An eventloop-synchronous alternative to performance.now().\n *\n * Ensures that time measurements remain consistent within a synchronous context.\n * Usually calling performance.now() twice within the same synchronous context\n * will return different values which isn't useful for animations when we're usually\n * trying to sync animations to the same frame.\n */\nconst time = {\n    now: () => {\n        if (now === undefined) {\n            time.set(frameData.isProcessing || MotionGlobalConfig.useManualTiming\n                ? frameData.timestamp\n                : performance.now());\n        }\n        return now;\n    },\n    set: (newTime) => {\n        now = newTime;\n        queueMicrotask(clearTime);\n    },\n};\n\nexport { time };\n","function addUniqueItem(arr, item) {\n    if (arr.indexOf(item) === -1)\n        arr.push(item);\n}\nfunction removeItem(arr, item) {\n    const index = arr.indexOf(item);\n    if (index > -1)\n        arr.splice(index, 1);\n}\n// Adapted from array-move\nfunction moveItem([...arr], fromIndex, toIndex) {\n    const startIndex = fromIndex < 0 ? arr.length + fromIndex : fromIndex;\n    if (startIndex >= 0 && startIndex < arr.length) {\n        const endIndex = toIndex < 0 ? arr.length + toIndex : toIndex;\n        const [item] = arr.splice(fromIndex, 1);\n        arr.splice(endIndex, 0, item);\n    }\n    return arr;\n}\n\nexport { addUniqueItem, moveItem, removeItem };\n","/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxGeneratorDuration = 20000;\nfunction calcGeneratorDuration(generator) {\n    let duration = 0;\n    const timeStep = 50;\n    let state = generator.next(duration);\n    while (!state.done && duration < maxGeneratorDuration) {\n        duration += timeStep;\n        state = generator.next(duration);\n    }\n    return duration >= maxGeneratorDuration ? Infinity : duration;\n}\n\nexport { calcGeneratorDuration, maxGeneratorDuration };\n","import { clamp } from 'motion-utils';\nimport { number, alpha } from '../numbers/index.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst clampRgbUnit = (v) => clamp(0, 255, v);\nconst rgbUnit = {\n    ...number,\n    transform: (v) => Math.round(clampRgbUnit(v)),\n};\nconst rgba = {\n    test: /*@__PURE__*/ isColorString(\"rgb\", \"red\"),\n    parse: /*@__PURE__*/ splitColor(\"red\", \"green\", \"blue\"),\n    transform: ({ red, green, blue, alpha: alpha$1 = 1 }) => \"rgba(\" +\n        rgbUnit.transform(red) +\n        \", \" +\n        rgbUnit.transform(green) +\n        \", \" +\n        rgbUnit.transform(blue) +\n        \", \" +\n        sanitize(alpha.transform(alpha$1)) +\n        \")\",\n};\n\nexport { rgbUnit, rgba };\n","// Adapted from https://gist.github.com/mjackson/5311256\nfunction hueToRgb(p, q, t) {\n    if (t < 0)\n        t += 1;\n    if (t > 1)\n        t -= 1;\n    if (t < 1 / 6)\n        return p + (q - p) * 6 * t;\n    if (t < 1 / 2)\n        return q;\n    if (t < 2 / 3)\n        return p + (q - p) * (2 / 3 - t) * 6;\n    return p;\n}\nfunction hslaToRgba({ hue, saturation, lightness, alpha }) {\n    hue /= 360;\n    saturation /= 100;\n    lightness /= 100;\n    let red = 0;\n    let green = 0;\n    let blue = 0;\n    if (!saturation) {\n        red = green = blue = lightness;\n    }\n    else {\n        const q = lightness < 0.5\n            ? lightness * (1 + saturation)\n            : lightness + saturation - lightness * saturation;\n        const p = 2 * lightness - q;\n        red = hueToRgb(p, q, hue + 1 / 3);\n        green = hueToRgb(p, q, hue);\n        blue = hueToRgb(p, q, hue - 1 / 3);\n    }\n    return {\n        red: Math.round(red * 255),\n        green: Math.round(green * 255),\n        blue: Math.round(blue * 255),\n        alpha,\n    };\n}\n\nexport { hslaToRgba };\n","function mixImmediate(a, b) {\n    return (p) => (p > 0 ? b : a);\n}\n\nexport { mixImmediate };\n","import { warning } from 'motion-utils';\nimport { hex } from '../../value/types/color/hex.mjs';\nimport { hsla } from '../../value/types/color/hsla.mjs';\nimport { hslaToRgba } from '../../value/types/color/hsla-to-rgba.mjs';\nimport { rgba } from '../../value/types/color/rgba.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber } from './number.mjs';\n\n// Linear color space blending\n// Explained https://www.youtube.com/watch?v=LKnqECcg6Gw\n// Demonstrated http://codepen.io/osublake/pen/xGVVaN\nconst mixLinearColor = (from, to, v) => {\n    const fromExpo = from * from;\n    const expo = v * (to * to - fromExpo) + fromExpo;\n    return expo < 0 ? 0 : Math.sqrt(expo);\n};\nconst colorTypes = [hex, rgba, hsla];\nconst getColorType = (v) => colorTypes.find((type) => type.test(v));\nfunction asRGBA(color) {\n    const type = getColorType(color);\n    warning(Boolean(type), `'${color}' is not an animatable color. Use the equivalent color code instead.`);\n    if (!Boolean(type))\n        return false;\n    let model = type.parse(color);\n    if (type === hsla) {\n        // TODO Remove this cast - needed since Motion's stricter typing\n        model = hslaToRgba(model);\n    }\n    return model;\n}\nconst mixColor = (from, to) => {\n    const fromRGBA = asRGBA(from);\n    const toRGBA = asRGBA(to);\n    if (!fromRGBA || !toRGBA) {\n        return mixImmediate(from, to);\n    }\n    const blended = { ...fromRGBA };\n    return (v) => {\n        blended.red = mixLinearColor(fromRGBA.red, toRGBA.red, v);\n        blended.green = mixLinearColor(fromRGBA.green, toRGBA.green, v);\n        blended.blue = mixLinearColor(fromRGBA.blue, toRGBA.blue, v);\n        blended.alpha = mixNumber(fromRGBA.alpha, toRGBA.alpha, v);\n        return rgba.transform(blended);\n    };\n};\n\nexport { mixColor, mixLinearColor };\n","const invisibleValues = new Set([\"none\", \"hidden\"]);\n/**\n * Returns a function that, when provided a progress value between 0 and 1,\n * will return the \"none\" or \"hidden\" string only when the progress is that of\n * the origin or target.\n */\nfunction mixVisibility(origin, target) {\n    if (invisibleValues.has(origin)) {\n        return (p) => (p <= 0 ? origin : target);\n    }\n    else {\n        return (p) => (p >= 1 ? target : origin);\n    }\n}\n\nexport { invisibleValues, mixVisibility };\n","import { pipe, warning } from 'motion-utils';\nimport { isCSSVariableToken } from '../../animation/utils/is-css-variable.mjs';\nimport { color } from '../../value/types/color/index.mjs';\nimport { complex, analyseComplexValue } from '../../value/types/complex/index.mjs';\nimport { mixColor } from './color.mjs';\nimport { mixImmediate } from './immediate.mjs';\nimport { mixNumber as mixNumber$1 } from './number.mjs';\nimport { invisibleValues, mixVisibility } from './visibility.mjs';\n\nfunction mixNumber(a, b) {\n    return (p) => mixNumber$1(a, b, p);\n}\nfunction getMixer(a) {\n    if (typeof a === \"number\") {\n        return mixNumber;\n    }\n    else if (typeof a === \"string\") {\n        return isCSSVariableToken(a)\n            ? mixImmediate\n            : color.test(a)\n                ? mixColor\n                : mixComplex;\n    }\n    else if (Array.isArray(a)) {\n        return mixArray;\n    }\n    else if (typeof a === \"object\") {\n        return color.test(a) ? mixColor : mixObject;\n    }\n    return mixImmediate;\n}\nfunction mixArray(a, b) {\n    const output = [...a];\n    const numValues = output.length;\n    const blendValue = a.map((v, i) => getMixer(v)(v, b[i]));\n    return (p) => {\n        for (let i = 0; i < numValues; i++) {\n            output[i] = blendValue[i](p);\n        }\n        return output;\n    };\n}\nfunction mixObject(a, b) {\n    const output = { ...a, ...b };\n    const blendValue = {};\n    for (const key in output) {\n        if (a[key] !== undefined && b[key] !== undefined) {\n            blendValue[key] = getMixer(a[key])(a[key], b[key]);\n        }\n    }\n    return (v) => {\n        for (const key in blendValue) {\n            output[key] = blendValue[key](v);\n        }\n        return output;\n    };\n}\nfunction matchOrder(origin, target) {\n    const orderedOrigin = [];\n    const pointers = { color: 0, var: 0, number: 0 };\n    for (let i = 0; i < target.values.length; i++) {\n        const type = target.types[i];\n        const originIndex = origin.indexes[type][pointers[type]];\n        const originValue = origin.values[originIndex] ?? 0;\n        orderedOrigin[i] = originValue;\n        pointers[type]++;\n    }\n    return orderedOrigin;\n}\nconst mixComplex = (origin, target) => {\n    const template = complex.createTransformer(target);\n    const originStats = analyseComplexValue(origin);\n    const targetStats = analyseComplexValue(target);\n    const canInterpolate = originStats.indexes.var.length === targetStats.indexes.var.length &&\n        originStats.indexes.color.length === targetStats.indexes.color.length &&\n        originStats.indexes.number.length >= targetStats.indexes.number.length;\n    if (canInterpolate) {\n        if ((invisibleValues.has(origin) &&\n            !targetStats.values.length) ||\n            (invisibleValues.has(target) &&\n                !originStats.values.length)) {\n            return mixVisibility(origin, target);\n        }\n        return pipe(mixArray(matchOrder(originStats, targetStats), targetStats.values), template);\n    }\n    else {\n        warning(true, `Complex values '${origin}' and '${target}' too different to mix. Ensure all colors are of the same type, and that each contains the same quantity of number and color values. Falling back to instant transition.`);\n        return mixImmediate(origin, target);\n    }\n};\n\nexport { getMixer, mixArray, mixComplex, mixObject };\n","import { getMixer } from './complex.mjs';\nimport { mixNumber } from './number.mjs';\n\nfunction mix(from, to, p) {\n    if (typeof from === \"number\" &&\n        typeof to === \"number\" &&\n        typeof p === \"number\") {\n        return mixNumber(from, to, p);\n    }\n    const mixer = getMixer(from);\n    return mixer(from, to);\n}\n\nexport { mix };\n","import { spring } from './spring/index.mjs';\nimport { calcGeneratorVelocity } from './utils/velocity.mjs';\n\nfunction inertia({ keyframes, velocity = 0.0, power = 0.8, timeConstant = 325, bounceDamping = 10, bounceStiffness = 500, modifyTarget, min, max, restDelta = 0.5, restSpeed, }) {\n    const origin = keyframes[0];\n    const state = {\n        done: false,\n        value: origin,\n    };\n    const isOutOfBounds = (v) => (min !== undefined && v < min) || (max !== undefined && v > max);\n    const nearestBoundary = (v) => {\n        if (min === undefined)\n            return max;\n        if (max === undefined)\n            return min;\n        return Math.abs(min - v) < Math.abs(max - v) ? min : max;\n    };\n    let amplitude = power * velocity;\n    const ideal = origin + amplitude;\n    const target = modifyTarget === undefined ? ideal : modifyTarget(ideal);\n    /**\n     * If the target has changed we need to re-calculate the amplitude, otherwise\n     * the animation will start from the wrong position.\n     */\n    if (target !== ideal)\n        amplitude = target - origin;\n    const calcDelta = (t) => -amplitude * Math.exp(-t / timeConstant);\n    const calcLatest = (t) => target + calcDelta(t);\n    const applyFriction = (t) => {\n        const delta = calcDelta(t);\n        const latest = calcLatest(t);\n        state.done = Math.abs(delta) <= restDelta;\n        state.value = state.done ? target : latest;\n    };\n    /**\n     * Ideally this would resolve for t in a stateless way, we could\n     * do that by always precalculating the animation but as we know\n     * this will be done anyway we can assume that spring will\n     * be discovered during that.\n     */\n    let timeReachedBoundary;\n    let spring$1;\n    const checkCatchBoundary = (t) => {\n        if (!isOutOfBounds(state.value))\n            return;\n        timeReachedBoundary = t;\n        spring$1 = spring({\n            keyframes: [state.value, nearestBoundary(state.value)],\n            velocity: calcGeneratorVelocity(calcLatest, t, state.value), // TODO: This should be passing * 1000\n            damping: bounceDamping,\n            stiffness: bounceStiffness,\n            restDelta,\n            restSpeed,\n        });\n    };\n    checkCatchBoundary(0);\n    return {\n        calculatedDuration: null,\n        next: (t) => {\n            /**\n             * We need to resolve the friction to figure out if we need a\n             * spring but we don't want to do this twice per frame. So here\n             * we flag if we updated for this frame and later if we did\n             * we can skip doing it again.\n             */\n            let hasUpdatedFrame = false;\n            if (!spring$1 && timeReachedBoundary === undefined) {\n                hasUpdatedFrame = true;\n                applyFriction(t);\n                checkCatchBoundary(t);\n            }\n            /**\n             * If we have a spring and the provided t is beyond the moment the friction\n             * animation crossed the min/max boundary, use the spring.\n             */\n            if (timeReachedBoundary !== undefined && t >= timeReachedBoundary) {\n                return spring$1.next(t - timeReachedBoundary);\n            }\n            else {\n                !hasUpdatedFrame && applyFriction(t);\n                return state;\n            }\n        },\n    };\n}\n\nexport { inertia };\n","import { warnOnce } from 'motion-utils';\n\nfunction createDOMMotionComponentProxy(componentFactory) {\n    if (typeof Proxy === \"undefined\") {\n        return componentFactory;\n    }\n    /**\n     * A cache of generated `motion` components, e.g `motion.div`, `motion.input` etc.\n     * Rather than generating them anew every render.\n     */\n    const componentCache = new Map();\n    const deprecatedFactoryFunction = (...args) => {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, \"motion() is deprecated. Use motion.create() instead.\");\n        }\n        return componentFactory(...args);\n    };\n    return new Proxy(deprecatedFactoryFunction, {\n        /**\n         * Called when `motion` is referenced with a prop: `motion.div`, `motion.input` etc.\n         * The prop name is passed through as `key` and we can use that to generate a `motion`\n         * DOM component with that name.\n         */\n        get: (_target, key) => {\n            if (key === \"create\")\n                return componentFactory;\n            /**\n             * If this element doesn't exist in the component cache, create it and cache.\n             */\n            if (!componentCache.has(key)) {\n                componentCache.set(key, componentFactory(key));\n            }\n            return componentCache.get(key);\n        },\n    });\n}\n\nexport { createDOMMotionComponentProxy };\n","function isAnimationControls(v) {\n    return (v !== null &&\n        typeof v === \"object\" &&\n        typeof v.start === \"function\");\n}\n\nexport { isAnimationControls };\n","function getValueState(visualElement) {\n    const state = [{}, {}];\n    visualElement?.values.forEach((value, key) => {\n        state[0][key] = value.get();\n        state[1][key] = value.getVelocity();\n    });\n    return state;\n}\nfunction resolveVariantFromProps(props, definition, custom, visualElement) {\n    /**\n     * If the variant definition is a function, resolve.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    /**\n     * If the variant definition is a variant label, or\n     * the function returned a variant label, resolve.\n     */\n    if (typeof definition === \"string\") {\n        definition = props.variants && props.variants[definition];\n    }\n    /**\n     * At this point we've resolved both functions and variant labels,\n     * but the resolved variant label might itself have been a function.\n     * If so, resolve. This can only have returned a valid target object.\n     */\n    if (typeof definition === \"function\") {\n        const [current, velocity] = getValueState(visualElement);\n        definition = definition(custom !== undefined ? custom : props.custom, current, velocity);\n    }\n    return definition;\n}\n\nexport { resolveVariantFromProps };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, visualElement);\n}\n\nexport { resolveVariant };\n","function getValueTransition(transition, key) {\n    return (transition?.[key] ??\n        transition?.[\"default\"] ??\n        transition);\n}\n\nexport { getValueTransition };\n","/**\n * Generate a list of every possible transform key.\n */\nconst transformPropOrder = [\n    \"transformPerspective\",\n    \"x\",\n    \"y\",\n    \"z\",\n    \"translateX\",\n    \"translateY\",\n    \"translateZ\",\n    \"scale\",\n    \"scaleX\",\n    \"scaleY\",\n    \"rotate\",\n    \"rotateX\",\n    \"rotateY\",\n    \"rotateZ\",\n    \"skew\",\n    \"skewX\",\n    \"skewY\",\n];\n/**\n * A quick lookup for transform props.\n */\nconst transformProps = /*@__PURE__*/ (() => new Set(transformPropOrder))();\n\nexport { transformPropOrder, transformProps };\n","import { transformPropOrder } from './keys-transform.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    ...transformPropOrder,\n]);\n\nexport { positionalKeys };\n","const isKeyframesTarget = (v) => {\n    return Array.isArray(v);\n};\n\nexport { isKeyframesTarget };\n","import { motionValue } from 'motion-dom';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction resolveFinalValueInKeyframes(v) {\n    // TODO maybe throw if v.length - 1 is placeholder token?\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved || {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\n\nexport { setTarget };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { isWillChangeMotionValue } from './is.mjs';\n\nfunction addValueToWillChange(visualElement, key) {\n    const willChange = visualElement.getValue(\"willChange\");\n    /**\n     * It could be that a user has set willChange to a regular MotionValue,\n     * in which case we can't add the value to it.\n     */\n    if (isWillChangeMotionValue(willChange)) {\n        return willChange.add(key);\n    }\n    else if (!willChange && MotionGlobalConfig.WillChange) {\n        const newWillChange = new MotionGlobalConfig.WillChange(\"auto\");\n        visualElement.addValue(\"willChange\", newWillChange);\n        newWillChange.add(key);\n    }\n}\n\nexport { addValueToWillChange };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Convert camelCase to dash-case properties.\n */\nconst camelToDash = (str) => str.replace(/([a-z])([A-Z])/gu, \"$1-$2\").toLowerCase();\n\nexport { camelToDash };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { optimizedAppearDataAttribute } from './data-id.mjs';\n\nfunction getOptimisedAppearId(visualElement) {\n    return visualElement.props[optimizedAppearDataAttribute];\n}\n\nexport { getOptimisedAppearId };\n","const radToDeg = (rad) => (rad * 180) / Math.PI;\nconst rotate = (v) => {\n    const angle = radToDeg(Math.atan2(v[1], v[0]));\n    return rebaseAngle(angle);\n};\nconst matrix2dParsers = {\n    x: 4,\n    y: 5,\n    translateX: 4,\n    translateY: 5,\n    scaleX: 0,\n    scaleY: 3,\n    scale: (v) => (Math.abs(v[0]) + Math.abs(v[3])) / 2,\n    rotate,\n    rotateZ: rotate,\n    skewX: (v) => radToDeg(Math.atan(v[1])),\n    skewY: (v) => radToDeg(Math.atan(v[2])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[2])) / 2,\n};\nconst rebaseAngle = (angle) => {\n    angle = angle % 360;\n    if (angle < 0)\n        angle += 360;\n    return angle;\n};\nconst rotateZ = rotate;\nconst scaleX = (v) => Math.sqrt(v[0] * v[0] + v[1] * v[1]);\nconst scaleY = (v) => Math.sqrt(v[4] * v[4] + v[5] * v[5]);\nconst matrix3dParsers = {\n    x: 12,\n    y: 13,\n    z: 14,\n    translateX: 12,\n    translateY: 13,\n    translateZ: 14,\n    scaleX,\n    scaleY,\n    scale: (v) => (scaleX(v) + scaleY(v)) / 2,\n    rotateX: (v) => rebaseAngle(radToDeg(Math.atan2(v[6], v[5]))),\n    rotateY: (v) => rebaseAngle(radToDeg(Math.atan2(-v[2], v[0]))),\n    rotateZ,\n    rotate: rotateZ,\n    skewX: (v) => radToDeg(Math.atan(v[4])),\n    skewY: (v) => radToDeg(Math.atan(v[1])),\n    skew: (v) => (Math.abs(v[1]) + Math.abs(v[4])) / 2,\n};\nfunction defaultTransformValue(name) {\n    return name.includes(\"scale\") ? 1 : 0;\n}\nfunction parseValueFromTransform(transform, name) {\n    if (!transform || transform === \"none\") {\n        return defaultTransformValue(name);\n    }\n    const matrix3dMatch = transform.match(/^matrix3d\\(([-\\d.e\\s,]+)\\)$/u);\n    let parsers;\n    let match;\n    if (matrix3dMatch) {\n        parsers = matrix3dParsers;\n        match = matrix3dMatch;\n    }\n    else {\n        const matrix2dMatch = transform.match(/^matrix\\(([-\\d.e\\s,]+)\\)$/u);\n        parsers = matrix2dParsers;\n        match = matrix2dMatch;\n    }\n    if (!match) {\n        return defaultTransformValue(name);\n    }\n    const valueParser = parsers[name];\n    const values = match[1].split(\",\").map(convertTransformToNumber);\n    return typeof valueParser === \"function\"\n        ? valueParser(values)\n        : values[valueParser];\n}\nconst readTransformValue = (instance, name) => {\n    const { transform = \"none\" } = getComputedStyle(instance);\n    return parseValueFromTransform(transform, name);\n};\nfunction convertTransformToNumber(value) {\n    return parseFloat(value.trim());\n}\n\nexport { parseValueFromTransform, readTransformValue };\n","import { parseValueFromTransform } from '../../../render/dom/parse-transform.mjs';\nimport { transformPropOrder } from '../../../render/utils/keys-transform.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst isNumOrPxType = (v) => v === number || v === px;\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: (_bbox, { transform }) => parseValueFromTransform(transform, \"x\"),\n    y: (_bbox, { transform }) => parseValueFromTransform(transform, \"y\"),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\n\nexport { isNumOrPxType, positionalValues, removeNonTranslationalTransform };\n","import { fillWildcards } from './utils/fill-wildcards.mjs';\nimport { removeNonTranslationalTransform } from './utils/unit-conversion.mjs';\nimport { frame } from '../../frameloop/frame.mjs';\n\nconst toResolve = new Set();\nlet isScheduled = false;\nlet anyNeedsMeasurement = false;\nlet isForced = false;\nfunction measureAllKeyframes() {\n    if (anyNeedsMeasurement) {\n        const resolversToMeasure = Array.from(toResolve).filter((resolver) => resolver.needsMeasurement);\n        const elementsToMeasure = new Set(resolversToMeasure.map((resolver) => resolver.element));\n        const transformsToRestore = new Map();\n        /**\n         * Write pass\n         * If we're measuring elements we want to remove bounding box-changing transforms.\n         */\n        elementsToMeasure.forEach((element) => {\n            const removedTransforms = removeNonTranslationalTransform(element);\n            if (!removedTransforms.length)\n                return;\n            transformsToRestore.set(element, removedTransforms);\n            element.render();\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureInitialState());\n        // Write\n        elementsToMeasure.forEach((element) => {\n            element.render();\n            const restore = transformsToRestore.get(element);\n            if (restore) {\n                restore.forEach(([key, value]) => {\n                    element.getValue(key)?.set(value);\n                });\n            }\n        });\n        // Read\n        resolversToMeasure.forEach((resolver) => resolver.measureEndState());\n        // Write\n        resolversToMeasure.forEach((resolver) => {\n            if (resolver.suspendedScrollY !== undefined) {\n                window.scrollTo(0, resolver.suspendedScrollY);\n            }\n        });\n    }\n    anyNeedsMeasurement = false;\n    isScheduled = false;\n    toResolve.forEach((resolver) => resolver.complete(isForced));\n    toResolve.clear();\n}\nfunction readAllKeyframes() {\n    toResolve.forEach((resolver) => {\n        resolver.readKeyframes();\n        if (resolver.needsMeasurement) {\n            anyNeedsMeasurement = true;\n        }\n    });\n}\nfunction flushKeyframeResolvers() {\n    isForced = true;\n    readAllKeyframes();\n    measureAllKeyframes();\n    isForced = false;\n}\nclass KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element, isAsync = false) {\n        this.state = \"pending\";\n        /**\n         * Track whether this resolver is async. If it is, it'll be added to the\n         * resolver queue and flushed in the next frame. Resolvers that aren't going\n         * to trigger read/write thrashing don't need to be async.\n         */\n        this.isAsync = false;\n        /**\n         * Track whether this resolver needs to perform a measurement\n         * to resolve its keyframes.\n         */\n        this.needsMeasurement = false;\n        this.unresolvedKeyframes = [...unresolvedKeyframes];\n        this.onComplete = onComplete;\n        this.name = name;\n        this.motionValue = motionValue;\n        this.element = element;\n        this.isAsync = isAsync;\n    }\n    scheduleResolve() {\n        this.state = \"scheduled\";\n        if (this.isAsync) {\n            toResolve.add(this);\n            if (!isScheduled) {\n                isScheduled = true;\n                frame.read(readAllKeyframes);\n                frame.resolveKeyframes(measureAllKeyframes);\n            }\n        }\n        else {\n            this.readKeyframes();\n            this.complete();\n        }\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, name, element, motionValue } = this;\n        // If initial keyframe is null we need to read it from the DOM\n        if (unresolvedKeyframes[0] === null) {\n            const currentValue = motionValue?.get();\n            // TODO: This doesn't work if the final keyframe is a wildcard\n            const finalKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n            if (currentValue !== undefined) {\n                unresolvedKeyframes[0] = currentValue;\n            }\n            else if (element && name) {\n                const valueAsRead = element.readValue(name, finalKeyframe);\n                if (valueAsRead !== undefined && valueAsRead !== null) {\n                    unresolvedKeyframes[0] = valueAsRead;\n                }\n            }\n            if (unresolvedKeyframes[0] === undefined) {\n                unresolvedKeyframes[0] = finalKeyframe;\n            }\n            if (motionValue && currentValue === undefined) {\n                motionValue.set(unresolvedKeyframes[0]);\n            }\n        }\n        fillWildcards(unresolvedKeyframes);\n    }\n    setFinalKeyframe() { }\n    measureInitialState() { }\n    renderEndStyles() { }\n    measureEndState() { }\n    complete(isForcedComplete = false) {\n        this.state = \"complete\";\n        this.onComplete(this.unresolvedKeyframes, this.finalKeyframe, isForcedComplete);\n        toResolve.delete(this);\n    }\n    cancel() {\n        if (this.state === \"scheduled\") {\n            toResolve.delete(this);\n            this.state = \"pending\";\n        }\n    }\n    resume() {\n        if (this.state === \"pending\")\n            this.scheduleResolve();\n    }\n}\n\nexport { KeyframeResolver, flushKeyframeResolvers };\n","function fillWildcards(keyframes) {\n    for (let i = 1; i < keyframes.length; i++) {\n        keyframes[i] ?? (keyframes[i] = keyframes[i - 1]);\n    }\n}\n\nexport { fillWildcards };\n","/**\n * Add the ability for test suites to manually set support flags\n * to better test more environments.\n */\nconst supportsFlags = {};\n\nexport { supportsFlags };\n","import { memo } from 'motion-utils';\nimport { supportsFlags } from './flags.mjs';\n\nfunction memoSupports(callback, supportsFlag) {\n    const memoized = memo(callback);\n    return () => supportsFlags[supportsFlag] ?? memoized();\n}\n\nexport { memoSupports };\n","import { memoSupports } from './memo.mjs';\n\nconst supportsLinearEasing = /*@__PURE__*/ memoSupports(() => {\n    try {\n        document\n            .createElement(\"div\")\n            .animate({ opacity: 0 }, { easing: \"linear(0, 1)\" });\n    }\n    catch (e) {\n        return false;\n    }\n    return true;\n}, \"linearEasing\");\n\nexport { supportsLinearEasing };\n","const cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\n\nexport { cubicBezierAsString };\n","import { cubicBezierAsString } from './cubic-bezier.mjs';\n\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: /*@__PURE__*/ cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: /*@__PURE__*/ cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: /*@__PURE__*/ cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: /*@__PURE__*/ cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\n\nexport { supportedWaapiEasing };\n","import { isBezierDefinition } from 'motion-utils';\nimport { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { generateLinearEasing } from '../utils/linear.mjs';\nimport { cubicBezierAsString } from './cubic-bezier.mjs';\nimport { supportedWaapiEasing } from './supported.mjs';\n\nfunction mapEasingToNativeEasing(easing, duration) {\n    if (!easing) {\n        return undefined;\n    }\n    else if (typeof easing === \"function\") {\n        return supportsLinearEasing()\n            ? generateLinearEasing(easing, duration)\n            : \"ease-out\";\n    }\n    else if (isBezierDefinition(easing)) {\n        return cubicBezierAsString(easing);\n    }\n    else if (Array.isArray(easing)) {\n        return easing.map((segmentEasing) => mapEasingToNativeEasing(segmentEasing, duration) ||\n            supportedWaapiEasing.easeOut);\n    }\n    else {\n        return supportedWaapiEasing[easing];\n    }\n}\n\nexport { mapEasingToNativeEasing };\n","import { activeAnimations } from '../../stats/animation-count.mjs';\nimport { statsBuffer } from '../../stats/buffer.mjs';\nimport { mapEasingToNativeEasing } from './easing/map-easing.mjs';\n\nfunction startWaapiAnimation(element, valueName, keyframes, { delay = 0, duration = 300, repeat = 0, repeatType = \"loop\", ease = \"easeOut\", times, } = {}, pseudoElement = undefined) {\n    const keyframeOptions = {\n        [valueName]: keyframes,\n    };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease, duration);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    if (statsBuffer.value) {\n        activeAnimations.waapi++;\n    }\n    const options = {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    };\n    if (pseudoElement)\n        options.pseudoElement = pseudoElement;\n    const animation = element.animate(keyframeOptions, options);\n    if (statsBuffer.value) {\n        animation.finished.finally(() => {\n            activeAnimations.waapi--;\n        });\n    }\n    return animation;\n}\n\nexport { startWaapiAnimation };\n","function isGenerator(type) {\n    return typeof type === \"function\" && \"applyToOptions\" in type;\n}\n\nexport { isGenerator };\n","import { invariant, millisecondsToSeconds, secondsToMilliseconds, noop } from 'motion-utils';\nimport { setStyle } from '../render/dom/style-set.mjs';\nimport { supportsScrollTimeline } from '../utils/supports/scroll-timeline.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { startWaapiAnimation } from './waapi/start-waapi-animation.mjs';\nimport { applyGeneratorOptions } from './waapi/utils/apply-generator.mjs';\n\n/**\n * NativeAnimation implements AnimationPlaybackControls for the browser's Web Animations API.\n */\nclass NativeAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.finishedTime = null;\n        this.isStopped = false;\n        if (!options)\n            return;\n        const { element, name, keyframes, pseudoElement, allowFlatten = false, finalKeyframe, onComplete, } = options;\n        this.isPseudoElement = Boolean(pseudoElement);\n        this.allowFlatten = allowFlatten;\n        this.options = options;\n        invariant(typeof options.type !== \"string\", `animateMini doesn't support \"type\" as a string. Did you mean to import { spring } from \"motion\"?`);\n        const transition = applyGeneratorOptions(options);\n        this.animation = startWaapiAnimation(element, name, keyframes, transition, pseudoElement);\n        if (transition.autoplay === false) {\n            this.animation.pause();\n        }\n        this.animation.onfinish = () => {\n            this.finishedTime = this.time;\n            if (!pseudoElement) {\n                const keyframe = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n                if (this.updateMotionValue) {\n                    this.updateMotionValue(keyframe);\n                }\n                else {\n                    /**\n                     * If we can, we want to commit the final style as set by the user,\n                     * rather than the computed keyframe value supplied by the animation.\n                     */\n                    setStyle(element, name, keyframe);\n                }\n                this.animation.cancel();\n            }\n            onComplete?.();\n            this.notifyFinished();\n        };\n        /**\n         * TODO: In a breaking change, we should replace this with `.notifyCancel()`\n         */\n        this.animation.oncancel = () => this.notifyFinished();\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        this.animation.play();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n        }\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.finish?.();\n    }\n    cancel() {\n        try {\n            this.animation.cancel();\n        }\n        catch (e) { }\n    }\n    stop() {\n        if (this.isStopped)\n            return;\n        this.isStopped = true;\n        const { state } = this;\n        if (state === \"idle\" || state === \"finished\") {\n            return;\n        }\n        if (this.updateMotionValue) {\n            this.updateMotionValue();\n        }\n        else {\n            this.commitStyles();\n        }\n        if (!this.isPseudoElement)\n            this.cancel();\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * In this method, we commit styles back to the DOM before cancelling\n     * the animation.\n     *\n     * This is designed to be overridden by NativeAnimationExtended, which\n     * will create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to also correctly calculate velocity for any subsequent animation\n     * while deferring the commit until the next animation frame.\n     */\n    commitStyles() {\n        if (!this.isPseudoElement) {\n            this.animation.commitStyles?.();\n        }\n    }\n    get duration() {\n        const duration = this.animation.effect?.getComputedTiming?.().duration || 0;\n        return millisecondsToSeconds(Number(duration));\n    }\n    get time() {\n        return millisecondsToSeconds(Number(this.animation.currentTime) || 0);\n    }\n    set time(newTime) {\n        this.finishedTime = null;\n        this.animation.currentTime = secondsToMilliseconds(newTime);\n    }\n    /**\n     * The playback speed of the animation.\n     * 1 = normal speed, 2 = double speed, 0.5 = half speed.\n     */\n    get speed() {\n        return this.animation.playbackRate;\n    }\n    set speed(newSpeed) {\n        // Allow backwards playback after finishing\n        if (newSpeed < 0)\n            this.finishedTime = null;\n        this.animation.playbackRate = newSpeed;\n    }\n    get state() {\n        return this.finishedTime !== null\n            ? \"finished\"\n            : this.animation.playState;\n    }\n    get startTime() {\n        return Number(this.animation.startTime);\n    }\n    set startTime(newStartTime) {\n        this.animation.startTime = newStartTime;\n    }\n    /**\n     * Attaches a timeline to the animation, for instance the `ScrollTimeline`.\n     */\n    attachTimeline({ timeline, observe }) {\n        if (this.allowFlatten) {\n            this.animation.effect?.updateTiming({ easing: \"linear\" });\n        }\n        this.animation.onfinish = null;\n        if (timeline && supportsScrollTimeline()) {\n            this.animation.timeline = timeline;\n            return noop;\n        }\n        else {\n            return observe(this);\n        }\n    }\n}\n\nexport { NativeAnimation };\n","import { supportsLinearEasing } from '../../../utils/supports/linear-easing.mjs';\nimport { isGenerator } from '../../generators/utils/is-generator.mjs';\n\nfunction applyGeneratorOptions({ type, ...options }) {\n    if (isGenerator(type) && supportsLinearEasing()) {\n        return type.applyToOptions(options);\n    }\n    else {\n        options.duration ?? (options.duration = 300);\n        options.ease ?? (options.ease = \"easeOut\");\n    }\n    return options;\n}\n\nexport { applyGeneratorOptions };\n","import { isCSSVar } from './is-css-var.mjs';\n\nfunction setStyle(element, name, value) {\n    isCSSVar(name)\n        ? element.style.setProperty(name, value)\n        : (element.style[name] = value);\n}\n\nexport { setStyle };\n","const isCSSVar = (name) => name.startsWith(\"--\");\n\nexport { isCSSVar };\n","import { anticipate, backInOut, circInOut } from 'motion-utils';\n\nconst unsupportedEasingFunctions = {\n    anticipate,\n    backInOut,\n    circInOut,\n};\nfunction isUnsupportedEase(key) {\n    return key in unsupportedEasingFunctions;\n}\nfunction replaceStringEasing(transition) {\n    if (typeof transition.ease === \"string\" &&\n        isUnsupportedEase(transition.ease)) {\n        transition.ease = unsupportedEasingFunctions[transition.ease];\n    }\n}\n\nexport { replaceStringEasing };\n","import { secondsToMilliseconds } from 'motion-utils';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { NativeAnimation } from './NativeAnimation.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { replaceStringEasing } from './waapi/utils/unsupported-easing.mjs';\n\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\nclass NativeAnimationExtended extends NativeAnimation {\n    constructor(options) {\n        /**\n         * The base NativeAnimation function only supports a subset\n         * of Motion easings, and WAAPI also only supports some\n         * easing functions via string/cubic-bezier definitions.\n         *\n         * This function replaces those unsupported easing functions\n         * with a JS easing function. This will later get compiled\n         * to a linear() easing function.\n         */\n        replaceStringEasing(options);\n        /**\n         * Ensure we replace the transition type with a generator function\n         * before passing to WAAPI.\n         *\n         * TODO: Does this have a better home? It could be shared with\n         * JSAnimation.\n         */\n        replaceTransitionType(options);\n        super(options);\n        if (options.startTime) {\n            this.startTime = options.startTime;\n        }\n        this.options = options;\n    }\n    /**\n     * WAAPI doesn't natively have any interruption capabilities.\n     *\n     * Rather than read commited styles back out of the DOM, we can\n     * create a renderless JS animation and sample it twice to calculate\n     * its current value, \"previous\" value, and therefore allow\n     * Motion to calculate velocity for any subsequent animation.\n     */\n    updateMotionValue(value) {\n        const { motionValue, onUpdate, onComplete, element, ...options } = this.options;\n        if (!motionValue)\n            return;\n        if (value !== undefined) {\n            motionValue.set(value);\n            return;\n        }\n        const sampleAnimation = new JSAnimation({\n            ...options,\n            autoplay: false,\n        });\n        const sampleTime = secondsToMilliseconds(this.finishedTime ?? this.time);\n        motionValue.setWithVelocity(sampleAnimation.sample(sampleTime - sampleDelta).value, sampleAnimation.sample(sampleTime).value, sampleDelta);\n        sampleAnimation.stop();\n    }\n}\n\nexport { NativeAnimationExtended };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (value, name) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (name === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { memo } from 'motion-utils';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    // TODO: Can be accelerated but currently disabled until https://issues.chromium.org/issues/41491098 is resolved\n    // or until we implement support for linear() easing.\n    // \"background-color\"\n]);\nconst supportsWaapi = /*@__PURE__*/ memo(() => Object.hasOwnProperty.call(Element.prototype, \"animate\"));\nfunction supportsBrowserAnimation(options) {\n    const { motionValue, name, repeatDelay, repeatType, damping, type } = options;\n    if (!motionValue ||\n        !motionValue.owner ||\n        !(motionValue.owner.current instanceof HTMLElement)) {\n        return false;\n    }\n    const { onUpdate, transformTemplate } = motionValue.owner.getProps();\n    return (supportsWaapi() &&\n        name &&\n        acceleratedValues.has(name) &&\n        (name !== \"transform\" || !transformTemplate) &&\n        /**\n         * If we're outputting values to onUpdate then we can't use WAAPI as there's\n         * no way to read the value from WAAPI every frame.\n         */\n        !onUpdate &&\n        !repeatDelay &&\n        repeatType !== \"mirror\" &&\n        damping !== 0 &&\n        type !== \"inertia\");\n}\n\nexport { supportsBrowserAnimation };\n","import { MotionGlobalConfig, noop } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { JSAnimation } from './JSAnimation.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { KeyframeResolver, flushKeyframeResolvers } from './keyframes/KeyframesResolver.mjs';\nimport { NativeAnimationExtended } from './NativeAnimationExtended.mjs';\nimport { canAnimate } from './utils/can-animate.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\nimport { supportsBrowserAnimation } from './waapi/supports/waapi.mjs';\n\n/**\n * Maximum time allowed between an animation being created and it being\n * resolved for us to use the latter as the start time.\n *\n * This is to ensure that while we prefer to \"start\" an animation as soon\n * as it's triggered, we also want to avoid a visual jump if there's a big delay\n * between these two moments.\n */\nconst MAX_RESOLVE_DELAY = 40;\nclass AsyncMotionValueAnimation extends WithPromise {\n    constructor({ autoplay = true, delay = 0, type = \"keyframes\", repeat = 0, repeatDelay = 0, repeatType = \"loop\", keyframes, name, motionValue, element, ...options }) {\n        super();\n        /**\n         * Bound to support return animation.stop pattern\n         */\n        this.stop = () => {\n            if (this._animation) {\n                this._animation.stop();\n                this.stopTimeline?.();\n            }\n            this.keyframeResolver?.cancel();\n        };\n        this.createdAt = time.now();\n        const optionsWithDefaults = {\n            autoplay,\n            delay,\n            type,\n            repeat,\n            repeatDelay,\n            repeatType,\n            name,\n            motionValue,\n            element,\n            ...options,\n        };\n        const KeyframeResolver$1 = element?.KeyframeResolver || KeyframeResolver;\n        this.keyframeResolver = new KeyframeResolver$1(keyframes, (resolvedKeyframes, finalKeyframe, forced) => this.onKeyframesResolved(resolvedKeyframes, finalKeyframe, optionsWithDefaults, !forced), name, motionValue, element);\n        this.keyframeResolver?.scheduleResolve();\n    }\n    onKeyframesResolved(keyframes, finalKeyframe, options, sync) {\n        this.keyframeResolver = undefined;\n        const { name, type, velocity, delay, isHandoff, onUpdate } = options;\n        this.resolvedAt = time.now();\n        /**\n         * If we can't animate this value with the resolved keyframes\n         * then we should complete it immediately.\n         */\n        if (!canAnimate(keyframes, name, type, velocity)) {\n            if (MotionGlobalConfig.instantAnimations || !delay) {\n                onUpdate?.(getFinalKeyframe(keyframes, options, finalKeyframe));\n            }\n            keyframes[0] = keyframes[keyframes.length - 1];\n            options.duration = 0;\n            options.repeat = 0;\n        }\n        /**\n         * Resolve startTime for the animation.\n         *\n         * This method uses the createdAt and resolvedAt to calculate the\n         * animation startTime. *Ideally*, we would use the createdAt time as t=0\n         * as the following frame would then be the first frame of the animation in\n         * progress, which would feel snappier.\n         *\n         * However, if there's a delay (main thread work) between the creation of\n         * the animation and the first commited frame, we prefer to use resolvedAt\n         * to avoid a sudden jump into the animation.\n         */\n        const startTime = sync\n            ? !this.resolvedAt\n                ? this.createdAt\n                : this.resolvedAt - this.createdAt > MAX_RESOLVE_DELAY\n                    ? this.resolvedAt\n                    : this.createdAt\n            : undefined;\n        const resolvedOptions = {\n            startTime,\n            finalKeyframe,\n            ...options,\n            keyframes,\n        };\n        /**\n         * Animate via WAAPI if possible. If this is a handoff animation, the optimised animation will be running via\n         * WAAPI. Therefore, this animation must be JS to ensure it runs \"under\" the\n         * optimised animation.\n         */\n        const animation = !isHandoff && supportsBrowserAnimation(resolvedOptions)\n            ? new NativeAnimationExtended({\n                ...resolvedOptions,\n                element: resolvedOptions.motionValue.owner.current,\n            })\n            : new JSAnimation(resolvedOptions);\n        animation.finished.then(() => this.notifyFinished()).catch(noop);\n        if (this.pendingTimeline) {\n            this.stopTimeline = animation.attachTimeline(this.pendingTimeline);\n            this.pendingTimeline = undefined;\n        }\n        this._animation = animation;\n    }\n    get finished() {\n        if (!this._animation) {\n            return this._finished;\n        }\n        else {\n            return this.animation.finished;\n        }\n    }\n    then(onResolve, _onReject) {\n        return this.finished.finally(onResolve).then(() => { });\n    }\n    get animation() {\n        if (!this._animation) {\n            this.keyframeResolver?.resume();\n            flushKeyframeResolvers();\n        }\n        return this._animation;\n    }\n    get duration() {\n        return this.animation.duration;\n    }\n    get time() {\n        return this.animation.time;\n    }\n    set time(newTime) {\n        this.animation.time = newTime;\n    }\n    get speed() {\n        return this.animation.speed;\n    }\n    get state() {\n        return this.animation.state;\n    }\n    set speed(newSpeed) {\n        this.animation.speed = newSpeed;\n    }\n    get startTime() {\n        return this.animation.startTime;\n    }\n    attachTimeline(timeline) {\n        if (this._animation) {\n            this.stopTimeline = this.animation.attachTimeline(timeline);\n        }\n        else {\n            this.pendingTimeline = timeline;\n        }\n        return () => this.stop();\n    }\n    play() {\n        this.animation.play();\n    }\n    pause() {\n        this.animation.pause();\n    }\n    complete() {\n        this.animation.complete();\n    }\n    cancel() {\n        if (this._animation) {\n            this.animation.cancel();\n        }\n        this.keyframeResolver?.cancel();\n    }\n}\n\nexport { AsyncMotionValueAnimation };\n","import { warning } from 'motion-utils';\nimport { isGenerator } from '../generators/utils/is-generator.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\n\nfunction hasKeyframesChanged(keyframes) {\n    const current = keyframes[0];\n    if (keyframes.length === 1)\n        return true;\n    for (let i = 0; i < keyframes.length; i++) {\n        if (keyframes[i] !== current)\n            return true;\n    }\n}\nfunction canAnimate(keyframes, name, type, velocity) {\n    /**\n     * Check if we're able to animate between the start and end keyframes,\n     * and throw a warning if we're attempting to animate between one that's\n     * animatable and another that isn't.\n     */\n    const originKeyframe = keyframes[0];\n    if (originKeyframe === null)\n        return false;\n    /**\n     * These aren't traditionally animatable but we do support them.\n     * In future we could look into making this more generic or replacing\n     * this function with mix() === mixImmediate\n     */\n    if (name === \"display\" || name === \"visibility\")\n        return true;\n    const targetKeyframe = keyframes[keyframes.length - 1];\n    const isOriginAnimatable = isAnimatable(originKeyframe, name);\n    const isTargetAnimatable = isAnimatable(targetKeyframe, name);\n    warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${name} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n    // Always skip if any of these are true\n    if (!isOriginAnimatable || !isTargetAnimatable) {\n        return false;\n    }\n    return (hasKeyframesChanged(keyframes) ||\n        ((type === \"spring\" || isGenerator(type)) && velocity));\n}\n\nexport { canAnimate };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from 'motion-dom';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { getValueTransition, frame, JSAnimation, AsyncMotionValueAnimation } from 'motion-dom';\nimport { secondsToMilliseconds, MotionGlobalConfig } from 'motion-utils';\nimport { getFinalKeyframe } from '../animators/waapi/utils/get-final-keyframe.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isTransitionDefined } from '../utils/is-transition-defined.mjs';\n\nconst animateMotionValue = (name, value, target, transition = {}, element, isHandoff) => (onComplete) => {\n    const valueTransition = getValueTransition(transition, name) || {};\n    /**\n     * Most transition values are currently completely overwritten by value-specific\n     * transitions. In the future it'd be nicer to blend these transitions. But for now\n     * delay actually does inherit from the root transition if not value-specific.\n     */\n    const delay = valueTransition.delay || transition.delay || 0;\n    /**\n     * Elapsed isn't a public transition option but can be passed through from\n     * optimized appear effects in milliseconds.\n     */\n    let { elapsed = 0 } = transition;\n    elapsed = elapsed - secondsToMilliseconds(delay);\n    const options = {\n        keyframes: Array.isArray(target) ? target : [null, target],\n        ease: \"easeOut\",\n        velocity: value.getVelocity(),\n        ...valueTransition,\n        delay: -elapsed,\n        onUpdate: (v) => {\n            value.set(v);\n            valueTransition.onUpdate && valueTransition.onUpdate(v);\n        },\n        onComplete: () => {\n            onComplete();\n            valueTransition.onComplete && valueTransition.onComplete();\n        },\n        name,\n        motionValue: value,\n        element: isHandoff ? undefined : element,\n    };\n    /**\n     * If there's no transition defined for this value, we can generate\n     * unique transition settings for this value.\n     */\n    if (!isTransitionDefined(valueTransition)) {\n        Object.assign(options, getDefaultTransition(name, options));\n    }\n    /**\n     * Both WAAPI and our internal animation functions use durations\n     * as defined by milliseconds, while our external API defines them\n     * as seconds.\n     */\n    options.duration && (options.duration = secondsToMilliseconds(options.duration));\n    options.repeatDelay && (options.repeatDelay = secondsToMilliseconds(options.repeatDelay));\n    /**\n     * Support deprecated way to set initial value. Prefer keyframe syntax.\n     */\n    if (options.from !== undefined) {\n        options.keyframes[0] = options.from;\n    }\n    let shouldSkip = false;\n    if (options.type === false ||\n        (options.duration === 0 && !options.repeatDelay)) {\n        options.duration = 0;\n        if (options.delay === 0) {\n            shouldSkip = true;\n        }\n    }\n    if (MotionGlobalConfig.instantAnimations ||\n        MotionGlobalConfig.skipAnimations) {\n        shouldSkip = true;\n        options.duration = 0;\n        options.delay = 0;\n    }\n    /**\n     * If the transition type or easing has been explicitly set by the user\n     * then we don't want to allow flattening the animation.\n     */\n    options.allowFlatten = !valueTransition.type && !valueTransition.ease;\n    /**\n     * If we can or must skip creating the animation, and apply only\n     * the final keyframe, do so. We also check once keyframes are resolved but\n     * this early check prevents the need to create an animation at all.\n     */\n    if (shouldSkip && !isHandoff && value.get() !== undefined) {\n        const finalKeyframe = getFinalKeyframe(options.keyframes, valueTransition);\n        if (finalKeyframe !== undefined) {\n            frame.update(() => {\n                options.onUpdate(finalKeyframe);\n                options.onComplete();\n            });\n            return;\n        }\n    }\n    return valueTransition.isSync\n        ? new JSAnimation(options)\n        : new AsyncMotionValueAnimation(options);\n};\n\nexport { animateMotionValue };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\n\nexport { isTransitionDefined };\n","import { getValueTransition, frame, positionalKeys } from 'motion-dom';\nimport { setTarget } from '../../render/utils/setters.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { getOptimisedAppearId } from '../optimized-appear/get-appear-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, targetAndTransition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = targetAndTransition;\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key, visualElement.latestValues[key] ?? null);\n        const valueTarget = target[key];\n        if (valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = {\n            delay,\n            ...getValueTransition(transition || {}, key),\n        };\n        /**\n         * If the value is already at the defined target, skip the animation.\n         */\n        const currentValue = value.get();\n        if (currentValue !== undefined &&\n            !value.isAnimating &&\n            !Array.isArray(valueTarget) &&\n            valueTarget === currentValue &&\n            !valueTransition.velocity) {\n            continue;\n        }\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        let isHandoff = false;\n        if (window.MotionHandoffAnimation) {\n            const appearId = getOptimisedAppearId(visualElement);\n            if (appearId) {\n                const startTime = window.MotionHandoffAnimation(appearId, key, frame);\n                if (startTime !== null) {\n                    valueTransition.startTime = startTime;\n                    isHandoff = true;\n                }\n            }\n        }\n        addValueToWillChange(visualElement, key);\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && positionalKeys.has(key)\n            ? { type: false }\n            : valueTransition, visualElement, isHandoff));\n        const animation = value.animation;\n        if (animation) {\n            animations.push(animation);\n        }\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            frame.update(() => {\n                transitionEnd && setTarget(visualElement, transitionEnd);\n            });\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.type === \"exit\"\n        ? visualElement.presenceContext?.custom\n        : undefined);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","/**\n * Decides if the supplied variable is variant label\n */\nfunction isVariantLabel(v) {\n    return typeof v === \"string\" || Array.isArray(v);\n}\n\nexport { isVariantLabel };\n","const variantPriorityOrder = [\n    \"animate\",\n    \"whileInView\",\n    \"whileFocus\",\n    \"whileHover\",\n    \"whileTap\",\n    \"whileDrag\",\n    \"exit\",\n];\nconst variantProps = [\"initial\", ...variantPriorityOrder];\n\nexport { variantPriorityOrder, variantProps };\n","import { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nconst numVariantProps = variantProps.length;\nfunction getVariantContext(visualElement) {\n    if (!visualElement)\n        return undefined;\n    if (!visualElement.isControllingVariants) {\n        const context = visualElement.parent\n            ? getVariantContext(visualElement.parent) || {}\n            : {};\n        if (visualElement.props.initial !== undefined) {\n            context.initial = visualElement.props.initial;\n        }\n        return context;\n    }\n    const context = {};\n    for (let i = 0; i < numVariantProps; i++) {\n        const name = variantProps[i];\n        const prop = visualElement.props[name];\n        if (isVariantLabel(prop) || prop === false) {\n            context[name] = prop;\n        }\n    }\n    return context;\n}\n\nexport { getVariantContext };\n","import { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { getVariantContext } from './get-variant-context.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    let state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (type) => (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition, type === \"exit\"\n            ? visualElement.presenceContext?.custom\n            : undefined);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(changedActiveType) {\n        const { props } = visualElement;\n        const context = getVariantContext(visualElement.parent) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined\n                ? props[type]\n                : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] &&\n                prop !== props[type] &&\n                propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            let handledRemovedValues = false;\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues(type), {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                if (removedKeys.has(key)) {\n                    handledRemovedValues = true;\n                    removedKeys.delete(key);\n                }\n                typeState.needsAnimating[key] = true;\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = false;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                let valueHasChanged = false;\n                if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                    valueHasChanged = !shallowCompare(next, prev);\n                }\n                else {\n                    valueHasChanged = next !== prev;\n                }\n                if (valueHasChanged) {\n                    if (next !== undefined && next !== null) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to skip this animation\n             * unless the inherited variants haven't changed on this render.\n             */\n            const willAnimateViaParent = isInherited && variantDidChange;\n            const needsAnimating = !willAnimateViaParent || handledRemovedValues;\n            if (shouldAnimateType && needsAnimating) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            /**\n             * If the initial prop contains a transition we can use that, otherwise\n             * allow the animation function to use the visual element's default.\n             */\n            if (typeof props.initial !== \"boolean\") {\n                const initialTransition = resolveVariant(visualElement, Array.isArray(props.initial)\n                    ? props.initial[0]\n                    : props.initial);\n                if (initialTransition && initialTransition.transition) {\n                    fallbackAnimation.transition = initialTransition.transition;\n                }\n            }\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                const motionValue = visualElement.getValue(key);\n                if (motionValue)\n                    motionValue.liveStyle = true;\n                // @ts-expect-error - @mattgperry to figure if we should do something here\n                fallbackAnimation[key] = fallbackTarget ?? null;\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            (props.initial === false || props.initial === props.animate) &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive) {\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        visualElement.variantChildren?.forEach((child) => child.animationState?.setActive(type, isActive));\n        state[type].isActive = isActive;\n        const animations = animateChanges(type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n        reset: () => {\n            state = createState();\n            isInitialRender = true;\n        },\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => {\n        visualElement.notify(\"AnimationComplete\", definition);\n    });\n}\n\nexport { animateVisualElement };\n","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent);\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => {\n                onExitComplete(this.id);\n            });\n        }\n    }\n    mount() {\n        const { register, onExitComplete } = this.node.presenceContext || {};\n        if (onExitComplete) {\n            onExitComplete(this.id);\n        }\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        if (isAnimationControls(animate)) {\n            this.unmountControls = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() {\n        this.node.animationState.reset();\n        this.unmountControls?.();\n    }\n}\n\nexport { AnimationFeature };\n","const isDragging = {\n    x: false,\n    y: false,\n};\nfunction isDragActive() {\n    return isDragging.x || isDragging.y;\n}\n\nexport { isDragActive, isDragging };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from 'motion-dom';\n\nfunction extractEventInfo(event) {\n    return {\n        point: {\n            x: event.pageX,\n            y: event.pageY,\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","import { mixNumber } from 'motion-dom';\n\nconst SCALE_PRECISION = 0.0001;\nconst SCALE_MIN = 1 - SCALE_PRECISION;\nconst SCALE_MAX = 1 + SCALE_PRECISION;\nconst TRANSLATE_PRECISION = 0.01;\nconst TRANSLATE_MIN = 0 - TRANSLATE_PRECISION;\nconst TRANSLATE_MAX = 0 + TRANSLATE_PRECISION;\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target, maxDistance) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mixNumber(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    delta.translate =\n        mixNumber(target.min, target.max, delta.origin) - delta.originPoint;\n    if ((delta.scale >= SCALE_MIN && delta.scale <= SCALE_MAX) ||\n        isNaN(delta.scale)) {\n        delta.scale = 1.0;\n    }\n    if ((delta.translate >= TRANSLATE_MIN &&\n        delta.translate <= TRANSLATE_MAX) ||\n        isNaN(delta.translate)) {\n        delta.translate = 0.0;\n    }\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY ||\n        values.skewX ||\n        values.skewY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mixNumber } from 'motion-dom';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\nconst TREE_SCALE_SNAP_MIN = 0.999999999999;\nconst TREE_SCALE_SNAP_MAX = 1.0000000000001;\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const { visualElement } = node.options;\n        if (visualElement &&\n            visualElement.props.style &&\n            visualElement.props.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    if (treeScale.x < TREE_SCALE_SNAP_MAX &&\n        treeScale.x > TREE_SCALE_SNAP_MIN) {\n        treeScale.x = 1.0;\n    }\n    if (treeScale.y < TREE_SCALE_SNAP_MAX &&\n        treeScale.y > TREE_SCALE_SNAP_MIN) {\n        treeScale.y = 1.0;\n    }\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, axisTranslate, axisScale, boxScale, axisOrigin = 0.5) {\n    const originPoint = mixNumber(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, axisTranslate, axisScale, originPoint, boxScale);\n}\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform.x, transform.scaleX, transform.scale, transform.originX);\n    transformAxis(box.y, transform.y, transform.scaleY, transform.scale, transform.originY);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","// Fixes https://github.com/motiondivision/motion/issues/2270\nconst getContextWindow = ({ current }) => {\n    return current ? current.ownerDocument.defaultView : null;\n};\n\nexport { getContextWindow };\n","function isRefObject(ref) {\n    return (ref &&\n        typeof ref === \"object\" &&\n        Object.prototype.hasOwnProperty.call(ref, \"current\"));\n}\n\nexport { isRefObject };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { frame, isPrimaryPointer, cancelFrame, frameData } from 'motion-dom';\nimport { pipe, secondsToMilliseconds, millisecondsToSeconds } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint, contextWindow, dragSnapToOrigin = false, } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        /**\n         * @internal\n         */\n        this.contextWindow = window;\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            const { onEnd, onSessionEnd, resumeAnimation } = this.handlers;\n            if (this.dragSnapToOrigin)\n                resumeAnimation && resumeAnimation();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.dragSnapToOrigin = dragSnapToOrigin;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        this.contextWindow = contextWindow || window;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(this.contextWindow, \"pointermove\", this.handlePointerMove), addPointerEvent(this.contextWindow, \"pointerup\", this.handlePointerUp), addPointerEvent(this.contextWindow, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","import { mixNumber } from 'motion-dom';\nimport { progress, clamp } from 'motion-utils';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(min, point, elastic.min)\n            : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic\n            ? mixNumber(max, point, elastic.max)\n            : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","import { frame, mixNumber, setDragLock, percent } from 'motion-dom';\nimport { invariant } from 'motion-utils';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addValueToWillChange } from '../../value/use-will-change/add-will-change.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, rebaseAxisConstraints, calcViewportConstraints, calcOrigin, defaultElastic } from './utils/constraints.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        this.openDragLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            const { dragSnapToOrigin } = this.getProps();\n            // Stop or pause any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            dragSnapToOrigin ? this.pauseAnimation() : this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event).point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openDragLock)\n                    this.openDragLock();\n                this.openDragLock = setDragLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openDragLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.postRender(() => onDragStart(event, info));\n            }\n            addValueToWillChange(this.visualElement, \"transform\");\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openDragLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        const resumeAnimation = () => eachAxis((axis) => this.getAnimationState(axis) === \"paused\" &&\n            this.getAxisMotionValue(axis).animation?.play());\n        const { dragSnapToOrigin } = this.getProps();\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n            resumeAnimation,\n        }, {\n            transformPagePoint: this.visualElement.getTransformPagePoint(),\n            dragSnapToOrigin,\n            contextWindow: getContextWindow(this.visualElement),\n        });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.postRender(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openDragLock) {\n            this.openDragLock();\n            this.openDragLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const layout = this.visualElement.projection &&\n            !this.visualElement.projection.layout\n            ? this.visualElement.projection.measure(false)\n            : this.visualElement.projection?.layout;\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.constraints !== false &&\n                    this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        addValueToWillChange(this.visualElement, axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition, this.visualElement, false));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    pauseAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).animation?.pause());\n    }\n    getAnimationState(axis) {\n        return this.getAxisMotionValue(axis).animation?.state;\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = `_drag${axis.toUpperCase()}`;\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial\n                ? props.initial[axis]\n                : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mixNumber(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue && this.constraints !== false) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mixNumber(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints) && dragConstraints.current) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        frame.read(measureDragConstraints);\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { isDragging } from './is-active.mjs';\n\nfunction setDragLock(axis) {\n    if (axis === \"x\" || axis === \"y\") {\n        if (isDragging[axis]) {\n            return null;\n        }\n        else {\n            isDragging[axis] = true;\n            return () => {\n                isDragging[axis] = false;\n            };\n        }\n    }\n    else {\n        if (isDragging.x || isDragging.y) {\n            return null;\n        }\n        else {\n            isDragging.x = isDragging.y = true;\n            return () => {\n                isDragging.x = isDragging.y = false;\n            };\n        }\n    }\n}\n\nexport { setDragLock };\n","import { frame } from 'motion-dom';\nimport { noop } from 'motion-utils';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { getContextWindow } from '../../utils/get-context-window.mjs';\nimport { PanSession } from './PanSession.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.postRender(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), {\n            transformPagePoint: this.node.getTransformPagePoint(),\n            contextWindow: getContextWindow(this.node),\n        });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.postRender(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","import { createRenderBatcher } from './batcher.mjs';\n\nconst { schedule: microtask, cancel: cancelMicrotask } = \n/* @__PURE__ */ createRenderBatcher(queueMicrotask, false);\n\nexport { cancelMicrotask, microtask };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst PresenceContext = \n/* @__PURE__ */ createContext(null);\n\nexport { PresenceContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LayoutGroupContext = createContext({});\n\nexport { LayoutGroupContext };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * Internal, exported only for usage in Framer\n */\nconst SwitchLayoutGroupContext = createContext({});\n\nexport { SwitchLayoutGroupContext };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from 'motion-dom';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { complex, mixNumber } from 'motion-dom';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mixNumber(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { isCSSVariableName } from 'motion-dom';\n\nconst scaleCorrectors = {};\nfunction addScaleCorrector(correctors) {\n    for (const key in correctors) {\n        scaleCorrectors[key] = correctors[key];\n        if (isCSSVariableName(key)) {\n            scaleCorrectors[key].isCSSVariable = true;\n        }\n    }\n}\n\nexport { addScaleCorrector, scaleCorrectors };\n","\"use client\";\nimport { jsx } from 'react/jsx-runtime';\nimport { frame, microtask } from 'motion-dom';\nimport { useContext, Component } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const { projection } = visualElement;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined ||\n            prevProps.isPresent !== isPresent) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            microtask.postRender(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (jsx(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect, useCallback } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence(subscribe = true) {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => {\n        if (subscribe) {\n            return register(id);\n        }\n    }, [subscribe]);\n    const safeToRemove = useCallback(() => subscribe && onExitComplete && onExitComplete(id), [id, onExitComplete, subscribe]);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from 'motion-utils';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { time, frame, cancelFrame } from 'motion-dom';\nimport { secondsToMilliseconds } from 'motion-utils';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = time.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.setup(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\nfunction delayInSeconds(callback, timeout) {\n    return delay(callback, secondsToMilliseconds(timeout));\n}\n\nexport { delay, delayInSeconds };\n","import { isMotionValue } from './is-motion-value.mjs';\n\n/**\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\n *\n * TODO: Remove and move to library\n */\nfunction resolveMotionValue(value) {\n    return isMotionValue(value) ? value.get() : value;\n}\n\nexport { resolveMotionValue };\n","import { mixNumber, percent, px } from 'motion-dom';\nimport { progress, circOut, noop } from 'motion-utils';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mixNumber(0, lead.opacity ?? 1, easeCrossfadeIn(progress));\n        target.opacityExit = mixNumber(follow.opacity ?? 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mixNumber(follow.opacity ?? 1, lead.opacity ?? 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mixNumber(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mixNumber(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = /*@__PURE__*/ compress(0, 0.5, circOut);\nconst easeCrossfadeOut = /*@__PURE__*/ compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n/**\n * Reset a delta to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisDeltaInto(delta, originDelta) {\n    delta.translate = originDelta.translate;\n    delta.scale = originDelta.scale;\n    delta.originPoint = originDelta.originPoint;\n    delta.origin = originDelta.origin;\n}\n\nexport { copyAxisDeltaInto, copyAxisInto, copyBoxInto };\n","import { percent, mixNumber } from 'motion-dom';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mixNumber(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mixNumber(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction axisEquals(a, b) {\n    return a.min === b.min && a.max === b.max;\n}\nfunction boxEquals(a, b) {\n    return axisEquals(a.x, b.x) && axisEquals(a.y, b.y);\n}\nfunction axisEqualsRounded(a, b) {\n    return (Math.round(a.min) === Math.round(b.min) &&\n        Math.round(a.max) === Math.round(b.max));\n}\nfunction boxEqualsRounded(a, b) {\n    return axisEqualsRounded(a.x, b.x) && axisEqualsRounded(a.y, b.y);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\nfunction axisDeltaEquals(a, b) {\n    return (a.translate === b.translate &&\n        a.scale === b.scale &&\n        a.originPoint === b.originPoint);\n}\n\nexport { aspectRatio, axisDeltaEquals, axisEquals, axisEqualsRounded, boxEquals, boxEqualsRounded, isDeltaZero };\n","import { addUniqueItem, removeItem } from 'motion-utils';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","import { statsBuffer, getValueTransition, cancelFrame, time, frameData, frameSteps, microtask, frame, activeAnimations, motionValue, mixNumber } from 'motion-dom';\nimport { SubscriptionManager, clamp, noop } from 'motion-utils';\nimport { animateSingleValue } from '../../animation/animate/single-value.mjs';\nimport { getOptimisedAppearId } from '../../animation/optimized-appear/get-appear-id.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto, copyAxisDeltaInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcLength, calcRelativePosition, calcRelativeBox, calcBoxDelta, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { boxEqualsRounded, isDeltaZero, axisDeltaEquals, aspectRatio, boxEquals } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { globalProjectionState } from './state.mjs';\n\nconst metrics = {\n    nodes: 0,\n    calculatedTargetDeltas: 0,\n    calculatedProjections: 0,\n};\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\nconst hiddenVisibility = { visibility: \"hidden\" };\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\nfunction resetDistortingTransform(key, visualElement, values, sharedAnimationValues) {\n    const { latestValues } = visualElement;\n    // Record the distorting transform and then temporarily set it to 0\n    if (latestValues[key]) {\n        values[key] = latestValues[key];\n        visualElement.setStaticValue(key, 0);\n        if (sharedAnimationValues) {\n            sharedAnimationValues[key] = 0;\n        }\n    }\n}\nfunction cancelTreeOptimisedTransformAnimations(projectionNode) {\n    projectionNode.hasCheckedOptimisedAppear = true;\n    if (projectionNode.root === projectionNode)\n        return;\n    const { visualElement } = projectionNode.options;\n    if (!visualElement)\n        return;\n    const appearId = getOptimisedAppearId(visualElement);\n    if (window.MotionHasOptimisedAnimation(appearId, \"transform\")) {\n        const { layout, layoutId } = projectionNode.options;\n        window.MotionCancelOptimisedAnimation(appearId, \"transform\", frame, !(layout || layoutId));\n    }\n    const { parent } = projectionNode;\n    if (parent && !parent.hasCheckedOptimisedAppear) {\n        cancelTreeOptimisedTransformAnimations(parent);\n    }\n}\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent?.()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * Store whether this node has been checked for optimised appear animations. As\n             * effects fire bottom-up, and we want to look up the tree for appear animations,\n             * this makes sure we only check each path once, stopping at nodes that\n             * have already been checked.\n             */\n            this.hasCheckedOptimisedAppear = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.scheduleUpdate = () => this.update();\n            this.projectionUpdateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                this.projectionUpdateScheduled = false;\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                if (statsBuffer.value) {\n                    metrics.nodes =\n                        metrics.calculatedTargetDeltas =\n                            metrics.calculatedProjections =\n                                0;\n                }\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                if (statsBuffer.addProjectionMetrics) {\n                    statsBuffer.addProjectionMetrics(metrics);\n                }\n            };\n            /**\n             * Frame calculations\n             */\n            this.resolvedRelativeTargetAt = 0.0;\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (this.root.hasTreeAnimated && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeLayoutChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const hasTargetChanged = !this.targetLayout ||\n                        !boxEqualsRounded(this.targetLayout, newLayout);\n                    /*\n                     * Note: Disabled to fix relative animations always triggering new\n                     * layout animations. If this causes further issues, we can try\n                     * a different approach to detecting relative target changes.\n                     */\n                    // || hasRelativeLayoutChanged\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeLayoutChanged;\n                    if (this.options.layoutRoot ||\n                        this.resumeFrom ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (hasTargetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            this.eventHandlers.clear();\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetSkewAndRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            /**\n             * If we're running optimised appear animations then these must be\n             * cancelled before measuring the DOM. This is so we can measure\n             * the true layout of the element rather than the WAAPI animation\n             * which will be unaffected by the resetSkewAndRotate step.\n             *\n             * Note: This is a DOM write. Worst case scenario is this is sandwiched\n             * between other snapshot reads which will cause unnecessary style recalculations.\n             * This has to happen here though, as we don't yet know which nodes will need\n             * snapshots in startUpdate(), but we only want to cancel optimised animations\n             * if a layout animation measurement is actually going to be affected by them.\n             */\n            if (window.MotionCancelOptimisedAnimation &&\n                !this.hasCheckedOptimisedAppear) {\n                cancelTreeOptimisedTransformAnimations(this);\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = time.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            frameSteps.update.process(frameData);\n            frameSteps.preRender.process(frameData);\n            frameSteps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                microtask.read(this.scheduleUpdate);\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            if (!this.projectionUpdateScheduled) {\n                this.projectionUpdateScheduled = true;\n                frame.preRender(this.updateProjection, false, true);\n            }\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n            if (this.snapshot &&\n                !calcLength(this.snapshot.measuredBox.x) &&\n                !calcLength(this.snapshot.measuredBox.y)) {\n                this.snapshot = undefined;\n            }\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement && this.instance) {\n                const isRoot = checkIsScrollRoot(this.instance);\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot,\n                    offset: measureScroll(this.instance),\n                    wasRoot: this.scroll ? this.scroll.isRoot : isRoot,\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty ||\n                this.shouldResetTransform ||\n                this.options.alwaysMeasureLayout;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                this.instance &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            const wasInScrollRoot = this.scroll?.wasRoot || this.path.some(checkNodeWasScrollRoot);\n            if (!wasInScrollRoot) {\n                // Remove viewport scroll to give page-relative coordinates\n                const { scroll } = this.root;\n                if (scroll) {\n                    translateAxis(box.x, scroll.offset.x);\n                    translateAxis(box.y, scroll.offset.y);\n                }\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            if (this.scroll?.wasRoot) {\n                return boxWithoutScroll;\n            }\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.wasRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                this.parent?.isProjectionDirty ||\n                this.attemptToResolveRelativeTarget ||\n                this.root.updateBlockedByResize);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            if (!this.targetDelta && !this.relativeTarget) {\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedTargetDeltas++;\n            }\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || this.parent?.isProjectionDirty) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n                lead.targetWithTransforms = createBox();\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.prevProjectionDelta) {\n                    this.createProjectionDeltas();\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta || !this.prevProjectionDelta) {\n                this.createProjectionDeltas();\n            }\n            else {\n                copyAxisDeltaInto(this.prevProjectionDelta.x, this.projectionDelta.x);\n                copyAxisDeltaInto(this.prevProjectionDelta.y, this.projectionDelta.y);\n            }\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            if (this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY ||\n                !axisDeltaEquals(this.projectionDelta.x, this.prevProjectionDelta.x) ||\n                !axisDeltaEquals(this.projectionDelta.y, this.prevProjectionDelta.y)) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            if (statsBuffer.value) {\n                metrics.calculatedProjections++;\n            }\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.visualElement?.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        createProjectionDeltas() {\n            this.prevProjectionDelta = createDelta();\n            this.projectionDelta = createDelta();\n            this.projectionDeltaWithTransform = createDelta();\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot ? snapshot.latestValues : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation?.stop(false);\n            this.resumingFrom?.currentAnimation?.stop(false);\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                activeAnimations.layout++;\n                this.motionValue || (this.motionValue = motionValue(0));\n                this.currentAnimation = animateSingleValue(this.motionValue, [0, 1000], {\n                    ...options,\n                    isSync: true,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onStop: () => {\n                        activeAnimations.layout--;\n                    },\n                    onComplete: () => {\n                        activeAnimations.layout--;\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop(false);\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.lead || this : this;\n        }\n        getPrevLead() {\n            const { layoutId } = this.options;\n            return layoutId ? this.getStack()?.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetSkewAndRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected skew or rotation values, we can early return without a forced render.\n            let hasDistortingTransform = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.z ||\n                latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ ||\n                latestValues.skewX ||\n                latestValues.skewY) {\n                hasDistortingTransform = true;\n            }\n            // If there's no distorting values, we don't need to do any more.\n            if (!hasDistortingTransform)\n                return;\n            const resetValues = {};\n            if (latestValues.z) {\n                resetDistortingTransform(\"z\", visualElement, resetValues, this.animationValues);\n            }\n            // Check the skew and rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                resetDistortingTransform(`rotate${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n                resetDistortingTransform(`skew${transformAxes[i]}`, visualElement, resetValues, this.animationValues);\n            }\n            // Force a render of this element to apply the transform with all skews and rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n                if (this.animationValues) {\n                    this.animationValues[key] = resetValues[key];\n                }\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp) {\n            if (!this.instance || this.isSVG)\n                return undefined;\n            if (!this.isVisible) {\n                return hiddenVisibility;\n            }\n            const styles = {\n                visibility: \"\",\n            };\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp?.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity ??\n                            this.latestValues.opacity ??\n                            1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo, isCSSVariable } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    // If this is a CSS variable, set it directly on the instance.\n                    // Replacing this function from creating styles to setting them\n                    // would be a good place to remove per frame object creation\n                    if (isCSSVariable) {\n                        this.options.visualElement.renderState.vars[key] = corrected;\n                    }\n                    else {\n                        styles[key] = corrected;\n                    }\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp?.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => node.currentAnimation?.stop(false));\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    const snapshot = node.resumeFrom?.snapshot || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeLayoutChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEqualsRounded(relativeSnapshot, relativeLayout)) {\n                        hasRelativeLayoutChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeLayoutChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    if (statsBuffer.value) {\n        metrics.nodes++;\n    }\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetSkewAndRotation(node) {\n    node.resetSkewAndRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mixNumber(delta.translate, 0, p);\n    output.scale = mixNumber(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mixNumber(from.min, to.min, p);\n    output.max = mixNumber(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nconst userAgentContains = (string) => typeof navigator !== \"undefined\" &&\n    navigator.userAgent &&\n    navigator.userAgent.toLowerCase().includes(string);\n/**\n * Measured bounding boxes must be rounded in Safari and\n * left untouched in Chrome, otherwise non-integer layouts within scaled-up elements\n * can appear to jump.\n */\nconst roundPoint = userAgentContains(\"applewebkit/\") && !userAgentContains(\"chrome/\")\n    ? Math.round\n    : noop;\nfunction roundAxis(axis) {\n    // Round to the nearest .5 pixels to support subpixel layouts\n    axis.min = roundPoint(axis.min);\n    axis.max = roundPoint(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\nfunction checkNodeWasScrollRoot(node) {\n    return node !== node.root && node.scroll?.wasRoot;\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { animateMotionValue } from '../interfaces/motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    const zTranslate = latestTransform?.z || 0;\n    if (xTranslate || yTranslate || zTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, ${zTranslate}px) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { transformPerspective, rotate, rotateX, rotateY, skewX, skewY } = latestTransform;\n        if (transformPerspective)\n            transform = `perspective(${transformPerspective}px) ${transform}`;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n        if (skewX)\n            transform += `skewX(${skewX}deg) `;\n        if (skewY)\n            transform += `skewY(${skewY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from 'motion-utils';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { resolveElements } from '../../utils/resolve-elements.mjs';\n\nfunction setupGesture(elementOrSelector, options) {\n    const elements = resolveElements(elementOrSelector);\n    const gestureAbortController = new AbortController();\n    const eventOptions = {\n        passive: true,\n        ...options,\n        signal: gestureAbortController.signal,\n    };\n    const cancel = () => gestureAbortController.abort();\n    return [elements, eventOptions, cancel];\n}\n\nexport { setupGesture };\n","import { isDragActive } from './drag/state/is-active.mjs';\nimport { setupGesture } from './utils/setup.mjs';\n\nfunction isValidHover(event) {\n    return !(event.pointerType === \"touch\" || isDragActive());\n}\n/**\n * Create a hover gesture. hover() is different to .addEventListener(\"pointerenter\")\n * in that it has an easier syntax, filters out polyfilled touch events, interoperates\n * with drag gestures, and automatically removes the \"pointerennd\" event listener when the hover ends.\n *\n * @public\n */\nfunction hover(elementOrSelector, onHoverStart, options = {}) {\n    const [elements, eventOptions, cancel] = setupGesture(elementOrSelector, options);\n    const onPointerEnter = (enterEvent) => {\n        if (!isValidHover(enterEvent))\n            return;\n        const { target } = enterEvent;\n        const onHoverEnd = onHoverStart(target, enterEvent);\n        if (typeof onHoverEnd !== \"function\" || !target)\n            return;\n        const onPointerLeave = (leaveEvent) => {\n            if (!isValidHover(leaveEvent))\n                return;\n            onHoverEnd(leaveEvent);\n            target.removeEventListener(\"pointerleave\", onPointerLeave);\n        };\n        target.addEventListener(\"pointerleave\", onPointerLeave, eventOptions);\n    };\n    elements.forEach((element) => {\n        element.addEventListener(\"pointerenter\", onPointerEnter, eventOptions);\n    });\n    return cancel;\n}\n\nexport { hover };\n","import { hover, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handleHoverEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.animationState && props.whileHover) {\n        node.animationState.setActive(\"whileHover\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onHover\" + lifecycle);\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass HoverGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = hover(current, (_element, startEvent) => {\n            handleHoverEvent(this.node, startEvent, \"Start\");\n            return (endEvent) => handleHoverEvent(this.node, endEvent, \"End\");\n        });\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","const focusableElements = new Set([\n    \"BUTTON\",\n    \"INPUT\",\n    \"SELECT\",\n    \"TEXTAREA\",\n    \"A\",\n]);\nfunction isElementKeyboardAccessible(element) {\n    return (focusableElements.has(element.tagName) ||\n        element.tabIndex !== -1);\n}\n\nexport { isElementKeyboardAccessible };\n","const isPressing = new WeakSet();\n\nexport { isPressing };\n","import { isPressing } from './state.mjs';\n\n/**\n * Filter out events that are not \"Enter\" keys.\n */\nfunction filterEvents(callback) {\n    return (event) => {\n        if (event.key !== \"Enter\")\n            return;\n        callback(event);\n    };\n}\nfunction firePointerEvent(target, type) {\n    target.dispatchEvent(new PointerEvent(\"pointer\" + type, { isPrimary: true, bubbles: true }));\n}\nconst enableKeyboardPress = (focusEvent, eventOptions) => {\n    const element = focusEvent.currentTarget;\n    if (!element)\n        return;\n    const handleKeydown = filterEvents(() => {\n        if (isPressing.has(element))\n            return;\n        firePointerEvent(element, \"down\");\n        const handleKeyup = filterEvents(() => {\n            firePointerEvent(element, \"up\");\n        });\n        const handleBlur = () => firePointerEvent(element, \"cancel\");\n        element.addEventListener(\"keyup\", handleKeyup, eventOptions);\n        element.addEventListener(\"blur\", handleBlur, eventOptions);\n    });\n    element.addEventListener(\"keydown\", handleKeydown, eventOptions);\n    /**\n     * Add an event listener that fires on blur to remove the keydown events.\n     */\n    element.addEventListener(\"blur\", () => element.removeEventListener(\"keydown\", handleKeydown), eventOptions);\n};\n\nexport { enableKeyboardPress };\n","import { isDragActive } from '../drag/state/is-active.mjs';\nimport { isNodeOrChild } from '../utils/is-node-or-child.mjs';\nimport { isPrimaryPointer } from '../utils/is-primary-pointer.mjs';\nimport { setupGesture } from '../utils/setup.mjs';\nimport { isElementKeyboardAccessible } from './utils/is-keyboard-accessible.mjs';\nimport { enableKeyboardPress } from './utils/keyboard.mjs';\nimport { isPressing } from './utils/state.mjs';\n\n/**\n * Filter out events that are not primary pointer events, or are triggering\n * while a Motion gesture is active.\n */\nfunction isValidPressEvent(event) {\n    return isPrimaryPointer(event) && !isDragActive();\n}\n/**\n * Create a press gesture.\n *\n * Press is different to `\"pointerdown\"`, `\"pointerup\"` in that it\n * automatically filters out secondary pointer events like right\n * click and multitouch.\n *\n * It also adds accessibility support for keyboards, where\n * an element with a press gesture will receive focus and\n *  trigger on Enter `\"keydown\"` and `\"keyup\"` events.\n *\n * This is different to a browser's `\"click\"` event, which does\n * respond to keyboards but only for the `\"click\"` itself, rather\n * than the press start and end/cancel. The element also needs\n * to be focusable for this to work, whereas a press gesture will\n * make an element focusable by default.\n *\n * @public\n */\nfunction press(targetOrSelector, onPressStart, options = {}) {\n    const [targets, eventOptions, cancelEvents] = setupGesture(targetOrSelector, options);\n    const startPress = (startEvent) => {\n        const target = startEvent.currentTarget;\n        if (!isValidPressEvent(startEvent) || isPressing.has(target))\n            return;\n        isPressing.add(target);\n        const onPressEnd = onPressStart(target, startEvent);\n        const onPointerEnd = (endEvent, success) => {\n            window.removeEventListener(\"pointerup\", onPointerUp);\n            window.removeEventListener(\"pointercancel\", onPointerCancel);\n            if (isPressing.has(target)) {\n                isPressing.delete(target);\n            }\n            if (!isValidPressEvent(endEvent)) {\n                return;\n            }\n            if (typeof onPressEnd === \"function\") {\n                onPressEnd(endEvent, { success });\n            }\n        };\n        const onPointerUp = (upEvent) => {\n            onPointerEnd(upEvent, target === window ||\n                target === document ||\n                options.useGlobalTarget ||\n                isNodeOrChild(target, upEvent.target));\n        };\n        const onPointerCancel = (cancelEvent) => {\n            onPointerEnd(cancelEvent, false);\n        };\n        window.addEventListener(\"pointerup\", onPointerUp, eventOptions);\n        window.addEventListener(\"pointercancel\", onPointerCancel, eventOptions);\n    };\n    targets.forEach((target) => {\n        const pointerDownTarget = options.useGlobalTarget ? window : target;\n        pointerDownTarget.addEventListener(\"pointerdown\", startPress, eventOptions);\n        if (target instanceof HTMLElement) {\n            target.addEventListener(\"focus\", (event) => enableKeyboardPress(event, eventOptions));\n            if (!isElementKeyboardAccessible(target) &&\n                !target.hasAttribute(\"tabindex\")) {\n                target.tabIndex = 0;\n            }\n        }\n    });\n    return cancelEvents;\n}\n\nexport { press };\n","import { press, frame } from 'motion-dom';\nimport { extractEventInfo } from '../events/event-info.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nfunction handlePressEvent(node, event, lifecycle) {\n    const { props } = node;\n    if (node.current instanceof HTMLButtonElement && node.current.disabled) {\n        return;\n    }\n    if (node.animationState && props.whileTap) {\n        node.animationState.setActive(\"whileTap\", lifecycle === \"Start\");\n    }\n    const eventName = (\"onTap\" + (lifecycle === \"End\" ? \"\" : lifecycle));\n    const callback = props[eventName];\n    if (callback) {\n        frame.postRender(() => callback(event, extractEventInfo(event)));\n    }\n}\nclass PressGesture extends Feature {\n    mount() {\n        const { current } = this.node;\n        if (!current)\n            return;\n        this.unmount = press(current, (_element, startEvent) => {\n            handlePressEvent(this.node, startEvent, \"Start\");\n            return (endEvent, { success }) => handlePressEvent(this.node, endEvent, success ? \"End\" : \"Cancel\");\n        }, { useGlobalTarget: this.node.props.globalTapTarget });\n    }\n    unmount() { }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { pipe } from 'motion-utils';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst LazyContext = createContext({ strict: false });\n\nexport { LazyContext };\n","\"use client\";\nimport { createContext } from 'react';\n\nconst MotionContext = /* @__PURE__ */ createContext({});\n\nexport { MotionContext };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { variantProps } from './variant-props.mjs';\n\nfunction isControllingVariants(props) {\n    return (isAnimationControls(props.animate) ||\n        variantProps.some((name) => isVariantLabel(props[name])));\n}\nfunction isVariantNode(props) {\n    return Boolean(isControllingVariants(props) || props.variants);\n}\n\nexport { isControllingVariants, isVariantNode };\n","import { useContext, useMemo } from 'react';\nimport { MotionContext } from './index.mjs';\nimport { getCurrentTreeVariants } from './utils.mjs';\n\nfunction useCreateMotionContext(props) {\n    const { initial, animate } = getCurrentTreeVariants(props, useContext(MotionContext));\n    return useMemo(() => ({ initial, animate }), [variantLabelsAsDependency(initial), variantLabelsAsDependency(animate)]);\n}\nfunction variantLabelsAsDependency(prop) {\n    return Array.isArray(prop) ? prop.join(\" \") : prop;\n}\n\nexport { useCreateMotionContext };\n","import { isControllingVariants } from '../../render/utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from '../../render/utils/is-variant-label.mjs';\n\nfunction getCurrentTreeVariants(props, context) {\n    if (isControllingVariants(props)) {\n        const { initial, animate } = props;\n        return {\n            initial: initial === false || isVariantLabel(initial)\n                ? initial\n                : undefined,\n            animate: isVariantLabel(animate) ? animate : undefined,\n        };\n    }\n    return props.inherit !== false ? context : {};\n}\n\nexport { getCurrentTreeVariants };\n","const featureProps = {\n    animation: [\n        \"animate\",\n        \"variants\",\n        \"whileHover\",\n        \"whileTap\",\n        \"exit\",\n        \"whileInView\",\n        \"whileFocus\",\n        \"whileDrag\",\n    ],\n    exit: [\"exit\"],\n    drag: [\"drag\", \"dragControls\"],\n    focus: [\"whileFocus\"],\n    hover: [\"whileHover\", \"onHoverStart\", \"onHoverEnd\"],\n    tap: [\"whileTap\", \"onTap\", \"onTapStart\", \"onTapCancel\"],\n    pan: [\"onPan\", \"onPanStart\", \"onPanSessionStart\", \"onPanEnd\"],\n    inView: [\"whileInView\", \"onViewportEnter\", \"onViewportLeave\"],\n    layout: [\"layout\", \"layoutId\"],\n};\nconst featureDefinitions = {};\nfor (const key in featureProps) {\n    featureDefinitions[key] = {\n        isEnabled: (props) => featureProps[key].some((name) => !!props[name]),\n    };\n}\n\nexport { featureDefinitions };\n","const motionComponentSymbol = Symbol.for(\"motionComponentSymbol\");\n\nexport { motionComponentSymbol };\n","import { useCallback } from 'react';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\n\n/**\n * Creates a ref function that, when called, hydrates the provided\n * external ref and VisualElement.\n */\nfunction useMotionRef(visualState, visualElement, externalRef) {\n    return useCallback((instance) => {\n        if (instance) {\n            visualState.onMount && visualState.onMount(instance);\n        }\n        if (visualElement) {\n            if (instance) {\n                visualElement.mount(instance);\n            }\n            else {\n                visualElement.unmount();\n            }\n        }\n        if (externalRef) {\n            if (typeof externalRef === \"function\") {\n                externalRef(instance);\n            }\n            else if (isRefObject(externalRef)) {\n                externalRef.current = instance;\n            }\n        }\n    }, \n    /**\n     * Only pass a new ref callback to React if we've received a visual element\n     * factory. Otherwise we'll be mounting/remounting every time externalRef\n     * or other dependencies change.\n     */\n    [visualElement]);\n}\n\nexport { useMotionRef };\n","import { microtask } from 'motion-dom';\nimport { useContext, useRef, useInsertionEffect, useEffect } from 'react';\nimport { optimizedAppearDataAttribute } from '../../animation/optimized-appear/data-id.mjs';\nimport { LazyContext } from '../../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../context/SwitchLayoutGroupContext.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\n\nfunction useVisualElement(Component, visualState, props, createVisualElement, ProjectionNodeConstructor) {\n    const { visualElement: parent } = useContext(MotionContext);\n    const lazyContext = useContext(LazyContext);\n    const presenceContext = useContext(PresenceContext);\n    const reducedMotionConfig = useContext(MotionConfigContext).reducedMotion;\n    const visualElementRef = useRef(null);\n    /**\n     * If we haven't preloaded a renderer, check to see if we have one lazy-loaded\n     */\n    createVisualElement = createVisualElement || lazyContext.renderer;\n    if (!visualElementRef.current && createVisualElement) {\n        visualElementRef.current = createVisualElement(Component, {\n            visualState,\n            parent,\n            props,\n            presenceContext,\n            blockInitialAnimation: presenceContext\n                ? presenceContext.initial === false\n                : false,\n            reducedMotionConfig,\n        });\n    }\n    const visualElement = visualElementRef.current;\n    /**\n     * Load Motion gesture and animation features. These are rendered as renderless\n     * components so each feature can optionally make use of React lifecycle methods.\n     */\n    const initialLayoutGroupConfig = useContext(SwitchLayoutGroupContext);\n    if (visualElement &&\n        !visualElement.projection &&\n        ProjectionNodeConstructor &&\n        (visualElement.type === \"html\" || visualElement.type === \"svg\")) {\n        createProjectionNode(visualElementRef.current, props, ProjectionNodeConstructor, initialLayoutGroupConfig);\n    }\n    const isMounted = useRef(false);\n    useInsertionEffect(() => {\n        /**\n         * Check the component has already mounted before calling\n         * `update` unnecessarily. This ensures we skip the initial update.\n         */\n        if (visualElement && isMounted.current) {\n            visualElement.update(props, presenceContext);\n        }\n    });\n    /**\n     * Cache this value as we want to know whether HandoffAppearAnimations\n     * was present on initial render - it will be deleted after this.\n     */\n    const optimisedAppearId = props[optimizedAppearDataAttribute];\n    const wantsHandoff = useRef(Boolean(optimisedAppearId) &&\n        !window.MotionHandoffIsComplete?.(optimisedAppearId) &&\n        window.MotionHasOptimisedAnimation?.(optimisedAppearId));\n    useIsomorphicLayoutEffect(() => {\n        if (!visualElement)\n            return;\n        isMounted.current = true;\n        window.MotionIsMounted = true;\n        visualElement.updateFeatures();\n        microtask.render(visualElement.render);\n        /**\n         * Ideally this function would always run in a useEffect.\n         *\n         * However, if we have optimised appear animations to handoff from,\n         * it needs to happen synchronously to ensure there's no flash of\n         * incorrect styles in the event of a hydration error.\n         *\n         * So if we detect a situtation where optimised appear animations\n         * are running, we use useLayoutEffect to trigger animations.\n         */\n        if (wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n    });\n    useEffect(() => {\n        if (!visualElement)\n            return;\n        if (!wantsHandoff.current && visualElement.animationState) {\n            visualElement.animationState.animateChanges();\n        }\n        if (wantsHandoff.current) {\n            // This ensures all future calls to animateChanges() in this component will run in useEffect\n            queueMicrotask(() => {\n                window.MotionHandoffMarkAsComplete?.(optimisedAppearId);\n            });\n            wantsHandoff.current = false;\n        }\n    });\n    return visualElement;\n}\nfunction createProjectionNode(visualElement, props, ProjectionNodeConstructor, initialPromotionConfig) {\n    const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, layoutCrossfade, } = props;\n    visualElement.projection = new ProjectionNodeConstructor(visualElement.latestValues, props[\"data-framer-portal-id\"]\n        ? undefined\n        : getClosestProjectingNode(visualElement.parent));\n    visualElement.projection.setOptions({\n        layoutId,\n        layout,\n        alwaysMeasureLayout: Boolean(drag) || (dragConstraints && isRefObject(dragConstraints)),\n        visualElement,\n        /**\n         * TODO: Update options in an effect. This could be tricky as it'll be too late\n         * to update by the time layout animations run.\n         * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n         * ensuring it gets called if there's no potential layout animations.\n         *\n         */\n        animationType: typeof layout === \"string\" ? layout : \"both\",\n        initialPromotionConfig,\n        crossfade: layoutCrossfade,\n        layoutScroll,\n        layoutRoot,\n    });\n}\nfunction getClosestProjectingNode(visualElement) {\n    if (!visualElement)\n        return undefined;\n    return visualElement.options.allowProjection !== false\n        ? visualElement.projection\n        : getClosestProjectingNode(visualElement.parent);\n}\n\nexport { useVisualElement };\n","\"use client\";\nimport { jsxs, jsx } from 'react/jsx-runtime';\nimport { warning, invariant } from 'motion-utils';\nimport { forwardRef, useContext } from 'react';\nimport { LayoutGroupContext } from '../context/LayoutGroupContext.mjs';\nimport { LazyContext } from '../context/LazyContext.mjs';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\nimport { MotionContext } from '../context/MotionContext/index.mjs';\nimport { useCreateMotionContext } from '../context/MotionContext/create.mjs';\nimport { isBrowser } from '../utils/is-browser.mjs';\nimport { featureDefinitions } from './features/definitions.mjs';\nimport { loadFeatures } from './features/load-features.mjs';\nimport { motionComponentSymbol } from './utils/symbol.mjs';\nimport { useMotionRef } from './utils/use-motion-ref.mjs';\nimport { useVisualElement } from './utils/use-visual-element.mjs';\n\n/**\n * Create a `motion` component.\n *\n * This function accepts a Component argument, which can be either a string (ie \"div\"\n * for `motion.div`), or an actual React component.\n *\n * Alongside this is a config option which provides a way of rendering the provided\n * component \"offline\", or outside the React render cycle.\n */\nfunction createRendererMotionComponent({ preloadedFeatures, createVisualElement, useRender, useVisualState, Component, }) {\n    preloadedFeatures && loadFeatures(preloadedFeatures);\n    function MotionComponent(props, externalRef) {\n        /**\n         * If we need to measure the element we load this functionality in a\n         * separate class component in order to gain access to getSnapshotBeforeUpdate.\n         */\n        let MeasureLayout;\n        const configAndProps = {\n            ...useContext(MotionConfigContext),\n            ...props,\n            layoutId: useLayoutId(props),\n        };\n        const { isStatic } = configAndProps;\n        const context = useCreateMotionContext(props);\n        const visualState = useVisualState(props, isStatic);\n        if (!isStatic && isBrowser) {\n            useStrictMode(configAndProps, preloadedFeatures);\n            const layoutProjection = getProjectionFunctionality(configAndProps);\n            MeasureLayout = layoutProjection.MeasureLayout;\n            /**\n             * Create a VisualElement for this component. A VisualElement provides a common\n             * interface to renderer-specific APIs (ie DOM/Three.js etc) as well as\n             * providing a way of rendering to these APIs outside of the React render loop\n             * for more performant animations and interactions\n             */\n            context.visualElement = useVisualElement(Component, visualState, configAndProps, createVisualElement, layoutProjection.ProjectionNode);\n        }\n        /**\n         * The mount order and hierarchy is specific to ensure our element ref\n         * is hydrated by the time features fire their effects.\n         */\n        return (jsxs(MotionContext.Provider, { value: context, children: [MeasureLayout && context.visualElement ? (jsx(MeasureLayout, { visualElement: context.visualElement, ...configAndProps })) : null, useRender(Component, props, useMotionRef(visualState, context.visualElement, externalRef), visualState, isStatic, context.visualElement)] }));\n    }\n    MotionComponent.displayName = `motion.${typeof Component === \"string\"\n        ? Component\n        : `create(${Component.displayName ?? Component.name ?? \"\"})`}`;\n    const ForwardRefMotionComponent = forwardRef(MotionComponent);\n    ForwardRefMotionComponent[motionComponentSymbol] = Component;\n    return ForwardRefMotionComponent;\n}\nfunction useLayoutId({ layoutId }) {\n    const layoutGroupId = useContext(LayoutGroupContext).id;\n    return layoutGroupId && layoutId !== undefined\n        ? layoutGroupId + \"-\" + layoutId\n        : layoutId;\n}\nfunction useStrictMode(configAndProps, preloadedFeatures) {\n    const isStrict = useContext(LazyContext).strict;\n    /**\n     * If we're in development mode, check to make sure we're not rendering a motion component\n     * as a child of LazyMotion, as this will break the file-size benefits of using it.\n     */\n    if (process.env.NODE_ENV !== \"production\" &&\n        preloadedFeatures &&\n        isStrict) {\n        const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n        configAndProps.ignoreStrict\n            ? warning(false, strictMessage)\n            : invariant(false, strictMessage);\n    }\n}\nfunction getProjectionFunctionality(props) {\n    const { drag, layout } = featureDefinitions;\n    if (!drag && !layout)\n        return {};\n    const combined = { ...drag, ...layout };\n    return {\n        MeasureLayout: drag?.isEnabled(props) || layout?.isEnabled(props)\n            ? combined.MeasureLayout\n            : undefined,\n        ProjectionNode: combined.ProjectionNode,\n    };\n}\n\nexport { createRendererMotionComponent };\n","import { featureDefinitions } from './definitions.mjs';\n\nfunction loadFeatures(features) {\n    for (const key in features) {\n        featureDefinitions[key] = {\n            ...featureDefinitions[key],\n            ...features[key],\n        };\n    }\n}\n\nexport { loadFeatures };\n","import { transformProps } from 'motion-dom';\nimport { scaleCorrectors } from '../../projection/styles/scale-correction.mjs';\n\nfunction isForcedMotionValue(key, { layout, layoutId }) {\n    return (transformProps.has(key) ||\n        key.startsWith(\"origin\") ||\n        ((layout || layoutId !== undefined) &&\n            (!!scaleCorrectors[key] || key === \"opacity\")));\n}\n\nexport { isForcedMotionValue };\n","/**\n * Provided a value and a ValueType, returns the value as that value type.\n */\nconst getValueAsType = (value, type) => {\n    return type && typeof value === \"number\"\n        ? type.transform(value)\n        : value;\n};\n\nexport { getValueAsType };\n","import { number } from './numbers/index.mjs';\n\nconst int = {\n    ...number,\n    transform: Math.round,\n};\n\nexport { int };\n","import { scale, alpha } from '../numbers/index.mjs';\nimport { degrees, px, progressPercentage } from '../numbers/units.mjs';\n\nconst transformValueTypes = {\n    rotate: degrees,\n    rotateX: degrees,\n    rotateY: degrees,\n    rotateZ: degrees,\n    scale,\n    scaleX: scale,\n    scaleY: scale,\n    scaleZ: scale,\n    skew: degrees,\n    skewX: degrees,\n    skewY: degrees,\n    distance: px,\n    translateX: px,\n    translateY: px,\n    translateZ: px,\n    x: px,\n    y: px,\n    z: px,\n    perspective: px,\n    transformPerspective: px,\n    opacity: alpha,\n    originX: progressPercentage,\n    originY: progressPercentage,\n    originZ: px,\n};\n\nexport { transformValueTypes };\n","import { int } from '../int.mjs';\nimport { alpha } from '../numbers/index.mjs';\nimport { px } from '../numbers/units.mjs';\nimport { transformValueTypes } from './transform.mjs';\n\nconst numberValueTypes = {\n    // Border props\n    borderWidth: px,\n    borderTopWidth: px,\n    borderRightWidth: px,\n    borderBottomWidth: px,\n    borderLeftWidth: px,\n    borderRadius: px,\n    radius: px,\n    borderTopLeftRadius: px,\n    borderTopRightRadius: px,\n    borderBottomRightRadius: px,\n    borderBottomLeftRadius: px,\n    // Positioning props\n    width: px,\n    maxWidth: px,\n    height: px,\n    maxHeight: px,\n    top: px,\n    right: px,\n    bottom: px,\n    left: px,\n    // Spacing props\n    padding: px,\n    paddingTop: px,\n    paddingRight: px,\n    paddingBottom: px,\n    paddingLeft: px,\n    margin: px,\n    marginTop: px,\n    marginRight: px,\n    marginBottom: px,\n    marginLeft: px,\n    // Misc\n    backgroundPositionX: px,\n    backgroundPositionY: px,\n    ...transformValueTypes,\n    zIndex: int,\n    // SVG\n    fillOpacity: alpha,\n    strokeOpacity: alpha,\n    numOctaves: int,\n};\n\nexport { numberValueTypes };\n","import { transformPropOrder, getValueAsType, numberValueTypes } from 'motion-dom';\n\nconst translateAlias = {\n    x: \"translateX\",\n    y: \"translateY\",\n    z: \"translateZ\",\n    transformPerspective: \"perspective\",\n};\nconst numTransforms = transformPropOrder.length;\n/**\n * Build a CSS transform style from individual x/y/scale etc properties.\n *\n * This outputs with a default order of transforms/scales/rotations, this can be customised by\n * providing a transformTemplate function.\n */\nfunction buildTransform(latestValues, transform, transformTemplate) {\n    // The transform string we're going to build into.\n    let transformString = \"\";\n    let transformIsDefault = true;\n    /**\n     * Loop over all possible transforms in order, adding the ones that\n     * are present to the transform string.\n     */\n    for (let i = 0; i < numTransforms; i++) {\n        const key = transformPropOrder[i];\n        const value = latestValues[key];\n        if (value === undefined)\n            continue;\n        let valueIsDefault = true;\n        if (typeof value === \"number\") {\n            valueIsDefault = value === (key.startsWith(\"scale\") ? 1 : 0);\n        }\n        else {\n            valueIsDefault = parseFloat(value) === 0;\n        }\n        if (!valueIsDefault || transformTemplate) {\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (!valueIsDefault) {\n                transformIsDefault = false;\n                const transformName = translateAlias[key] || key;\n                transformString += `${transformName}(${valueAsType}) `;\n            }\n            if (transformTemplate) {\n                transform[key] = valueAsType;\n            }\n        }\n    }\n    transformString = transformString.trim();\n    // If we have a custom `transform` template, pass our transform values and\n    // generated transformString to that before returning\n    if (transformTemplate) {\n        transformString = transformTemplate(transform, transformIsDefault ? \"\" : transformString);\n    }\n    else if (transformIsDefault) {\n        transformString = \"none\";\n    }\n    return transformString;\n}\n\nexport { buildTransform };\n","import { transformProps, isCSSVariableName, getValueAsType, numberValueTypes } from 'motion-dom';\nimport { buildTransform } from './build-transform.mjs';\n\nfunction buildHTMLStyles(state, latestValues, transformTemplate) {\n    const { style, vars, transformOrigin } = state;\n    // Track whether we encounter any transform or transformOrigin values.\n    let hasTransform = false;\n    let hasTransformOrigin = false;\n    /**\n     * Loop over all our latest animated values and decide whether to handle them\n     * as a style or CSS variable.\n     *\n     * Transforms and transform origins are kept separately for further processing.\n     */\n    for (const key in latestValues) {\n        const value = latestValues[key];\n        if (transformProps.has(key)) {\n            // If this is a transform, flag to enable further transform processing\n            hasTransform = true;\n            continue;\n        }\n        else if (isCSSVariableName(key)) {\n            vars[key] = value;\n            continue;\n        }\n        else {\n            // Convert the value to its default value type, ie 0 -> \"0px\"\n            const valueAsType = getValueAsType(value, numberValueTypes[key]);\n            if (key.startsWith(\"origin\")) {\n                // If this is a transform origin, flag and enable further transform-origin processing\n                hasTransformOrigin = true;\n                transformOrigin[key] =\n                    valueAsType;\n            }\n            else {\n                style[key] = valueAsType;\n            }\n        }\n    }\n    if (!latestValues.transform) {\n        if (hasTransform || transformTemplate) {\n            style.transform = buildTransform(latestValues, state.transform, transformTemplate);\n        }\n        else if (style.transform) {\n            /**\n             * If we have previously created a transform but currently don't have any,\n             * reset transform style to none.\n             */\n            style.transform = \"none\";\n        }\n    }\n    /**\n     * Build a transformOrigin style. Uses the same defaults as the browser for\n     * undefined origins.\n     */\n    if (hasTransformOrigin) {\n        const { originX = \"50%\", originY = \"50%\", originZ = 0, } = transformOrigin;\n        style.transformOrigin = `${originX} ${originY} ${originZ}`;\n    }\n}\n\nexport { buildHTMLStyles };\n","const createHtmlRenderState = () => ({\n    style: {},\n    transform: {},\n    transformOrigin: {},\n    vars: {},\n});\n\nexport { createHtmlRenderState };\n","import { useMemo } from 'react';\nimport { isForcedMotionValue } from '../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nfunction copyRawValuesOnly(target, source, props) {\n    for (const key in source) {\n        if (!isMotionValue(source[key]) && !isForcedMotionValue(key, props)) {\n            target[key] = source[key];\n        }\n    }\n}\nfunction useInitialMotionValues({ transformTemplate }, visualState) {\n    return useMemo(() => {\n        const state = createHtmlRenderState();\n        buildHTMLStyles(state, visualState, transformTemplate);\n        return Object.assign({}, state.vars, state.style);\n    }, [visualState]);\n}\nfunction useStyle(props, visualState) {\n    const styleProp = props.style || {};\n    const style = {};\n    /**\n     * Copy non-Motion Values straight into style\n     */\n    copyRawValuesOnly(style, styleProp, props);\n    Object.assign(style, useInitialMotionValues(props, visualState));\n    return style;\n}\nfunction useHTMLProps(props, visualState) {\n    // The `any` isn't ideal but it is the type of createElement props argument\n    const htmlProps = {};\n    const style = useStyle(props, visualState);\n    if (props.drag && props.dragListener !== false) {\n        // Disable the ghost element when a user drags\n        htmlProps.draggable = false;\n        // Disable text selection\n        style.userSelect =\n            style.WebkitUserSelect =\n                style.WebkitTouchCallout =\n                    \"none\";\n        // Disable scrolling on the draggable direction\n        style.touchAction =\n            props.drag === true\n                ? \"none\"\n                : `pan-${props.drag === \"x\" ? \"y\" : \"x\"}`;\n    }\n    if (props.tabIndex === undefined &&\n        (props.onTap || props.onTapStart || props.whileTap)) {\n        htmlProps.tabIndex = 0;\n    }\n    htmlProps.style = style;\n    return htmlProps;\n}\n\nexport { copyRawValuesOnly, useHTMLProps };\n","/**\n * A list of all valid MotionProps.\n *\n * @privateRemarks\n * This doesn't throw if a `MotionProp` name is missing - it should.\n */\nconst validMotionProps = new Set([\n    \"animate\",\n    \"exit\",\n    \"variants\",\n    \"initial\",\n    \"style\",\n    \"values\",\n    \"variants\",\n    \"transition\",\n    \"transformTemplate\",\n    \"custom\",\n    \"inherit\",\n    \"onBeforeLayoutMeasure\",\n    \"onAnimationStart\",\n    \"onAnimationComplete\",\n    \"onUpdate\",\n    \"onDragStart\",\n    \"onDrag\",\n    \"onDragEnd\",\n    \"onMeasureDragConstraints\",\n    \"onDirectionLock\",\n    \"onDragTransitionEnd\",\n    \"_dragX\",\n    \"_dragY\",\n    \"onHoverStart\",\n    \"onHoverEnd\",\n    \"onViewportEnter\",\n    \"onViewportLeave\",\n    \"globalTapTarget\",\n    \"ignoreStrict\",\n    \"viewport\",\n]);\n/**\n * Check whether a prop name is a valid `MotionProp` key.\n *\n * @param key - Name of the property to check\n * @returns `true` is key is a valid `MotionProp`.\n *\n * @public\n */\nfunction isValidMotionProp(key) {\n    return (key.startsWith(\"while\") ||\n        (key.startsWith(\"drag\") && key !== \"draggable\") ||\n        key.startsWith(\"layout\") ||\n        key.startsWith(\"onTap\") ||\n        key.startsWith(\"onPan\") ||\n        key.startsWith(\"onLayout\") ||\n        validMotionProps.has(key));\n}\n\nexport { isValidMotionProp };\n","import { isValidMotionProp } from '../../../motion/utils/valid-prop.mjs';\n\nlet shouldForward = (key) => !isValidMotionProp(key);\nfunction loadExternalIsValidProp(isValidProp) {\n    if (!isValidProp)\n        return;\n    // Explicitly filter our events\n    shouldForward = (key) => key.startsWith(\"on\") ? !isValidMotionProp(key) : isValidProp(key);\n}\n/**\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\n * of these should be passed to the underlying DOM node.\n *\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\n *\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\n * actually required.\n */\ntry {\n    /**\n     * We attempt to import this package but require won't be defined in esm environments, in that case\n     * isPropValid will have to be provided via `MotionContext`. In a 6.0.0 this should probably be removed\n     * in favour of explicit injection.\n     */\n    loadExternalIsValidProp(require(\"@emotion/is-prop-valid\").default);\n}\ncatch {\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\nfunction filterProps(props, isDom, forwardMotionProps) {\n    const filteredProps = {};\n    for (const key in props) {\n        /**\n         * values is considered a valid prop by Emotion, so if it's present\n         * this will be rendered out to the DOM unless explicitly filtered.\n         *\n         * We check the type as it could be used with the `feColorMatrix`\n         * element, which we support.\n         */\n        if (key === \"values\" && typeof props.values === \"object\")\n            continue;\n        if (shouldForward(key) ||\n            (forwardMotionProps === true && isValidMotionProp(key)) ||\n            (!isDom && !isValidMotionProp(key)) ||\n            // If trying to use native HTML drag events, forward drag listeners\n            (props[\"draggable\"] &&\n                key.startsWith(\"onDrag\"))) {\n            filteredProps[key] =\n                props[key];\n        }\n    }\n    return filteredProps;\n}\n\nexport { filterProps, loadExternalIsValidProp };\n","/**\n * We keep these listed separately as we use the lowercase tag names as part\n * of the runtime bundle to detect SVG components\n */\nconst lowercaseSVGElements = [\n    \"animate\",\n    \"circle\",\n    \"defs\",\n    \"desc\",\n    \"ellipse\",\n    \"g\",\n    \"image\",\n    \"line\",\n    \"filter\",\n    \"marker\",\n    \"mask\",\n    \"metadata\",\n    \"path\",\n    \"pattern\",\n    \"polygon\",\n    \"polyline\",\n    \"rect\",\n    \"stop\",\n    \"switch\",\n    \"symbol\",\n    \"svg\",\n    \"text\",\n    \"tspan\",\n    \"use\",\n    \"view\",\n];\n\nexport { lowercaseSVGElements };\n","import { lowercaseSVGElements } from '../../svg/lowercase-elements.mjs';\n\nfunction isSVGComponent(Component) {\n    if (\n    /**\n     * If it's not a string, it's a custom React component. Currently we only support\n     * HTML custom React components.\n     */\n    typeof Component !== \"string\" ||\n        /**\n         * If it contains a dash, the element is a custom HTML webcomponent.\n         */\n        Component.includes(\"-\")) {\n        return false;\n    }\n    else if (\n    /**\n     * If it's in our list of lowercase SVG tags, it's an SVG component\n     */\n    lowercaseSVGElements.indexOf(Component) > -1 ||\n        /**\n         * If it contains a capital letter, it's an SVG component\n         */\n        /[A-Z]/u.test(Component)) {\n        return true;\n    }\n    return false;\n}\n\nexport { isSVGComponent };\n","import { px } from 'motion-dom';\n\nconst dashKeys = {\n    offset: \"stroke-dashoffset\",\n    array: \"stroke-dasharray\",\n};\nconst camelKeys = {\n    offset: \"strokeDashoffset\",\n    array: \"strokeDasharray\",\n};\n/**\n * Build SVG path properties. Uses the path's measured length to convert\n * our custom pathLength, pathSpacing and pathOffset into stroke-dashoffset\n * and stroke-dasharray attributes.\n *\n * This function is mutative to reduce per-frame GC.\n */\nfunction buildSVGPath(attrs, length, spacing = 1, offset = 0, useDashCase = true) {\n    // Normalise path length by setting SVG attribute pathLength to 1\n    attrs.pathLength = 1;\n    // We use dash case when setting attributes directly to the DOM node and camel case\n    // when defining props on a React component.\n    const keys = useDashCase ? dashKeys : camelKeys;\n    // Build the dash offset\n    attrs[keys.offset] = px.transform(-offset);\n    // Build the dash array\n    const pathLength = px.transform(length);\n    const pathSpacing = px.transform(spacing);\n    attrs[keys.array] = `${pathLength} ${pathSpacing}`;\n}\n\nexport { buildSVGPath };\n","import { buildHTMLStyles } from '../../html/utils/build-styles.mjs';\nimport { buildSVGPath } from './path.mjs';\n\n/**\n * Build SVG visual attrbutes, like cx and style.transform\n */\nfunction buildSVGAttrs(state, { attrX, attrY, attrScale, pathLength, pathSpacing = 1, pathOffset = 0, \n// This is object creation, which we try to avoid per-frame.\n...latest }, isSVGTag, transformTemplate, styleProp) {\n    buildHTMLStyles(state, latest, transformTemplate);\n    /**\n     * For svg tags we just want to make sure viewBox is animatable and treat all the styles\n     * as normal HTML tags.\n     */\n    if (isSVGTag) {\n        if (state.style.viewBox) {\n            state.attrs.viewBox = state.style.viewBox;\n        }\n        return;\n    }\n    state.attrs = state.style;\n    state.style = {};\n    const { attrs, style } = state;\n    /**\n     * However, we apply transforms as CSS transforms.\n     * So if we detect a transform, transformOrigin we take it from attrs and copy it into style.\n     */\n    if (attrs.transform) {\n        style.transform = attrs.transform;\n        delete attrs.transform;\n    }\n    if (style.transform || attrs.transformOrigin) {\n        style.transformOrigin = attrs.transformOrigin ?? \"50% 50%\";\n        delete attrs.transformOrigin;\n    }\n    if (style.transform) {\n        /**\n         * SVG's element transform-origin uses its own median as a reference.\n         * Therefore, transformBox becomes a fill-box\n         */\n        style.transformBox = styleProp?.transformBox ?? \"fill-box\";\n        delete attrs.transformBox;\n    }\n    // Render attrX/attrY/attrScale as attributes\n    if (attrX !== undefined)\n        attrs.x = attrX;\n    if (attrY !== undefined)\n        attrs.y = attrY;\n    if (attrScale !== undefined)\n        attrs.scale = attrScale;\n    // Build SVG path if one has been defined\n    if (pathLength !== undefined) {\n        buildSVGPath(attrs, pathLength, pathSpacing, pathOffset, false);\n    }\n}\n\nexport { buildSVGAttrs };\n","import { createHtmlRenderState } from '../../html/utils/create-render-state.mjs';\n\nconst createSvgRenderState = () => ({\n    ...createHtmlRenderState(),\n    attrs: {},\n});\n\nexport { createSvgRenderState };\n","const isSVGTag = (tag) => typeof tag === \"string\" && tag.toLowerCase() === \"svg\";\n\nexport { isSVGTag };\n","import { useMemo } from 'react';\nimport { copyRawValuesOnly } from '../html/use-props.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nfunction useSVGProps(props, visualState, _isStatic, Component) {\n    const visualProps = useMemo(() => {\n        const state = createSvgRenderState();\n        buildSVGAttrs(state, visualState, isSVGTag(Component), props.transformTemplate, props.style);\n        return {\n            ...state.attrs,\n            style: { ...state.style },\n        };\n    }, [visualState]);\n    if (props.style) {\n        const rawStyles = {};\n        copyRawValuesOnly(rawStyles, props.style, props);\n        visualProps.style = { ...rawStyles, ...visualProps.style };\n    }\n    return visualProps;\n}\n\nexport { useSVGProps };\n","import { Fragment, useMemo, createElement } from 'react';\nimport { useHTMLProps } from '../html/use-props.mjs';\nimport { filterProps } from './utils/filter-props.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\nimport { useSVGProps } from '../svg/use-props.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction createUseRender(forwardMotionProps = false) {\n    const useRender = (Component, props, ref, { latestValues }, isStatic) => {\n        const useVisualProps = isSVGComponent(Component)\n            ? useSVGProps\n            : useHTMLProps;\n        const visualProps = useVisualProps(props, latestValues, isStatic, Component);\n        const filteredProps = filterProps(props, typeof Component === \"string\", forwardMotionProps);\n        const elementProps = Component !== Fragment\n            ? { ...filteredProps, ...visualProps, ref }\n            : {};\n        /**\n         * If component has been handed a motion value as its child,\n         * memoise its initial value and render that. Subsequent updates\n         * will be handled by the onChange handler\n         */\n        const { children } = props;\n        const renderedChildren = useMemo(() => (isMotionValue(children) ? children.get() : children), [children]);\n        return createElement(Component, {\n            ...elementProps,\n            children: renderedChildren,\n        });\n    };\n    return useRender;\n}\n\nexport { createUseRender };\n","import { useContext } from 'react';\nimport { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { MotionContext } from '../../context/MotionContext/index.mjs';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\nimport { isControllingVariants, isVariantNode } from '../../render/utils/is-controlling-variants.mjs';\nimport { resolveVariantFromProps } from '../../render/utils/resolve-variants.mjs';\nimport { useConstant } from '../../utils/use-constant.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\n\nfunction makeState({ scrapeMotionValuesFromProps, createRenderState, }, props, context, presenceContext) {\n    const state = {\n        latestValues: makeLatestValues(props, context, presenceContext, scrapeMotionValuesFromProps),\n        renderState: createRenderState(),\n    };\n    return state;\n}\nconst makeUseVisualState = (config) => (props, isStatic) => {\n    const context = useContext(MotionContext);\n    const presenceContext = useContext(PresenceContext);\n    const make = () => makeState(config, props, context, presenceContext);\n    return isStatic ? make() : useConstant(make);\n};\nfunction makeLatestValues(props, context, presenceContext, scrapeMotionValues) {\n    const values = {};\n    const motionValues = scrapeMotionValues(props, {});\n    for (const key in motionValues) {\n        values[key] = resolveMotionValue(motionValues[key]);\n    }\n    let { initial, animate } = props;\n    const isControllingVariants$1 = isControllingVariants(props);\n    const isVariantNode$1 = isVariantNode(props);\n    if (context &&\n        isVariantNode$1 &&\n        !isControllingVariants$1 &&\n        props.inherit !== false) {\n        if (initial === undefined)\n            initial = context.initial;\n        if (animate === undefined)\n            animate = context.animate;\n    }\n    let isInitialAnimationBlocked = presenceContext\n        ? presenceContext.initial === false\n        : false;\n    isInitialAnimationBlocked = isInitialAnimationBlocked || initial === false;\n    const variantToSet = isInitialAnimationBlocked ? animate : initial;\n    if (variantToSet &&\n        typeof variantToSet !== \"boolean\" &&\n        !isAnimationControls(variantToSet)) {\n        const list = Array.isArray(variantToSet) ? variantToSet : [variantToSet];\n        for (let i = 0; i < list.length; i++) {\n            const resolved = resolveVariantFromProps(props, list[i]);\n            if (resolved) {\n                const { transitionEnd, transition, ...target } = resolved;\n                for (const key in target) {\n                    let valueTarget = target[key];\n                    if (Array.isArray(valueTarget)) {\n                        /**\n                         * Take final keyframe if the initial animation is blocked because\n                         * we want to initialise at the end of that blocked animation.\n                         */\n                        const index = isInitialAnimationBlocked\n                            ? valueTarget.length - 1\n                            : 0;\n                        valueTarget = valueTarget[index];\n                    }\n                    if (valueTarget !== null) {\n                        values[key] = valueTarget;\n                    }\n                }\n                for (const key in transitionEnd) {\n                    values[key] = transitionEnd[key];\n                }\n            }\n        }\n    }\n    return values;\n}\n\nexport { makeUseVisualState };\n","import { isForcedMotionValue } from '../../../motion/utils/is-forced-motion-value.mjs';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const { style } = props;\n    const newValues = {};\n    for (const key in style) {\n        if (isMotionValue(style[key]) ||\n            (prevProps.style &&\n                isMotionValue(prevProps.style[key])) ||\n            isForcedMotionValue(key, props) ||\n            visualElement?.getValue(key)?.liveStyle !== undefined) {\n            newValues[key] = style[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { createHtmlRenderState } from './utils/create-render-state.mjs';\n\nconst htmlMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps,\n        createRenderState: createHtmlRenderState,\n    }),\n};\n\nexport { htmlMotionConfig };\n","import { transformPropOrder } from 'motion-dom';\nimport { isMotionValue } from '../../../value/utils/is-motion-value.mjs';\nimport { scrapeMotionValuesFromProps as scrapeMotionValuesFromProps$1 } from '../../html/utils/scrape-motion-values.mjs';\n\nfunction scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n    const newValues = scrapeMotionValuesFromProps$1(props, prevProps, visualElement);\n    for (const key in props) {\n        if (isMotionValue(props[key]) ||\n            isMotionValue(prevProps[key])) {\n            const targetKey = transformPropOrder.indexOf(key) !== -1\n                ? \"attr\" + key.charAt(0).toUpperCase() + key.substring(1)\n                : key;\n            newValues[targetKey] = props[key];\n        }\n    }\n    return newValues;\n}\n\nexport { scrapeMotionValuesFromProps };\n","import { makeUseVisualState } from '../../motion/utils/use-visual-state.mjs';\nimport { createSvgRenderState } from './utils/create-render-state.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nconst svgMotionConfig = {\n    useVisualState: makeUseVisualState({\n        scrapeMotionValuesFromProps: scrapeMotionValuesFromProps,\n        createRenderState: createSvgRenderState,\n    }),\n};\n\nexport { svgMotionConfig };\n","import { createRendererMotionComponent } from '../../motion/index.mjs';\nimport { createUseRender } from '../dom/use-render.mjs';\nimport { isSVGComponent } from '../dom/utils/is-svg-component.mjs';\nimport { htmlMotionConfig } from '../html/config-motion.mjs';\nimport { svgMotionConfig } from '../svg/config-motion.mjs';\n\nfunction createMotionComponentFactory(preloadedFeatures, createVisualElement) {\n    return function createMotionComponent(Component, { forwardMotionProps } = { forwardMotionProps: false }) {\n        const baseConfig = isSVGComponent(Component)\n            ? svgMotionConfig\n            : htmlMotionConfig;\n        const config = {\n            ...baseConfig,\n            preloadedFeatures,\n            useRender: createUseRender(forwardMotionProps),\n            createVisualElement,\n            Component,\n        };\n        return createRendererMotionComponent(config);\n    };\n}\n\nexport { createMotionComponentFactory };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { auto } from './auto.mjs';\nimport { number } from './numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from './numbers/units.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)$/u.test(v);\n\nexport { isNumericalString };\n","import { invariant, isNumericalString } from 'motion-utils';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = \n// eslint-disable-next-line redos-detector/no-unsafe-regex -- false positive, as it can match a lot of words\n/^var\\(--(?:([\\w-]+)|([\\w-]+), ?([a-zA-Z\\d ()%#.,-]+))\\)/u;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token1, token2, fallback] = match;\n    return [`--${token1 ?? token2}`, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        const trimmed = resolved.trim();\n        return isNumericalString(trimmed) ? parseFloat(trimmed) : trimmed;\n    }\n    return isCSSVariableToken(fallback)\n        ? getVariableValue(fallback, element, depth + 1)\n        : fallback;\n}\n\nexport { getVariableValue, parseCSSVariable };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/u.test(v);\n\nexport { isZeroValueString };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /\\b([a-z-]*)\\(.*?\\)/gu;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../color/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../complex/index.mjs';\nimport { filter } from '../complex/filter.mjs';\nimport { getDefaultValueType } from '../maps/defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","import { analyseComplexValue } from '../../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../../../value/types/utils/animatable-none.mjs';\n\n/**\n * If we encounter keyframes like \"none\" or \"0\" and we also have keyframes like\n * \"#fff\" or \"200px 200px\" we want to find a keyframe to serve as a template for\n * the \"none\" keyframes. In this case \"#fff\" or \"200px 200px\" - then these get turned into\n * zero equivalents, i.e. \"#fff0\" or \"0px 0px\".\n */\nconst invalidTemplates = new Set([\"auto\", \"none\", \"0\"]);\nfunction makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name) {\n    let i = 0;\n    let animatableTemplate = undefined;\n    while (i < unresolvedKeyframes.length && !animatableTemplate) {\n        const keyframe = unresolvedKeyframes[i];\n        if (typeof keyframe === \"string\" &&\n            !invalidTemplates.has(keyframe) &&\n            analyseComplexValue(keyframe).values.length) {\n            animatableTemplate = unresolvedKeyframes[i];\n        }\n        i++;\n    }\n    if (animatableTemplate && name) {\n        for (const noneIndex of noneKeyframeIndexes) {\n            unresolvedKeyframes[noneIndex] = getAnimatableNone(name, animatableTemplate);\n        }\n    }\n}\n\nexport { makeNoneKeyframesAnimatable };\n","import { positionalKeys } from '../../render/utils/keys-position.mjs';\nimport { findDimensionValueType } from '../../value/types/dimensions.mjs';\nimport { getVariableValue } from '../utils/css-variables-conversion.mjs';\nimport { isCSSVariableToken } from '../utils/is-css-variable.mjs';\nimport { KeyframeResolver } from './KeyframesResolver.mjs';\nimport { isNone } from './utils/is-none.mjs';\nimport { makeNoneKeyframesAnimatable } from './utils/make-none-animatable.mjs';\nimport { isNumOrPxType, positionalValues } from './utils/unit-conversion.mjs';\n\nclass DOMKeyframesResolver extends KeyframeResolver {\n    constructor(unresolvedKeyframes, onComplete, name, motionValue, element) {\n        super(unresolvedKeyframes, onComplete, name, motionValue, element, true);\n    }\n    readKeyframes() {\n        const { unresolvedKeyframes, element, name } = this;\n        if (!element || !element.current)\n            return;\n        super.readKeyframes();\n        /**\n         * If any keyframe is a CSS variable, we need to find its value by sampling the element\n         */\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            let keyframe = unresolvedKeyframes[i];\n            if (typeof keyframe === \"string\") {\n                keyframe = keyframe.trim();\n                if (isCSSVariableToken(keyframe)) {\n                    const resolved = getVariableValue(keyframe, element.current);\n                    if (resolved !== undefined) {\n                        unresolvedKeyframes[i] = resolved;\n                    }\n                    if (i === unresolvedKeyframes.length - 1) {\n                        this.finalKeyframe = keyframe;\n                    }\n                }\n            }\n        }\n        /**\n         * Resolve \"none\" values. We do this potentially twice - once before and once after measuring keyframes.\n         * This could be seen as inefficient but it's a trade-off to avoid measurements in more situations, which\n         * have a far bigger performance impact.\n         */\n        this.resolveNoneKeyframes();\n        /**\n         * Check to see if unit type has changed. If so schedule jobs that will\n         * temporarily set styles to the destination keyframes.\n         * Skip if we have more than two keyframes or this isn't a positional value.\n         * TODO: We can throw if there are multiple keyframes and the value type changes.\n         */\n        if (!positionalKeys.has(name) || unresolvedKeyframes.length !== 2) {\n            return;\n        }\n        const [origin, target] = unresolvedKeyframes;\n        const originType = findDimensionValueType(origin);\n        const targetType = findDimensionValueType(target);\n        /**\n         * Either we don't recognise these value types or we can animate between them.\n         */\n        if (originType === targetType)\n            return;\n        /**\n         * If both values are numbers or pixels, we can animate between them by\n         * converting them to numbers.\n         */\n        if (isNumOrPxType(originType) && isNumOrPxType(targetType)) {\n            for (let i = 0; i < unresolvedKeyframes.length; i++) {\n                const value = unresolvedKeyframes[i];\n                if (typeof value === \"string\") {\n                    unresolvedKeyframes[i] = parseFloat(value);\n                }\n            }\n        }\n        else if (positionalValues[name]) {\n            /**\n             * Else, the only way to resolve this is by measuring the element.\n             */\n            this.needsMeasurement = true;\n        }\n    }\n    resolveNoneKeyframes() {\n        const { unresolvedKeyframes, name } = this;\n        const noneKeyframeIndexes = [];\n        for (let i = 0; i < unresolvedKeyframes.length; i++) {\n            if (unresolvedKeyframes[i] === null ||\n                isNone(unresolvedKeyframes[i])) {\n                noneKeyframeIndexes.push(i);\n            }\n        }\n        if (noneKeyframeIndexes.length) {\n            makeNoneKeyframesAnimatable(unresolvedKeyframes, noneKeyframeIndexes, name);\n        }\n    }\n    measureInitialState() {\n        const { element, unresolvedKeyframes, name } = this;\n        if (!element || !element.current)\n            return;\n        if (name === \"height\") {\n            this.suspendedScrollY = window.pageYOffset;\n        }\n        this.measuredOrigin = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        unresolvedKeyframes[0] = this.measuredOrigin;\n        // Set final key frame to measure after next render\n        const measureKeyframe = unresolvedKeyframes[unresolvedKeyframes.length - 1];\n        if (measureKeyframe !== undefined) {\n            element.getValue(name, measureKeyframe).jump(measureKeyframe, false);\n        }\n    }\n    measureEndState() {\n        const { element, name, unresolvedKeyframes } = this;\n        if (!element || !element.current)\n            return;\n        const value = element.getValue(name);\n        value && value.jump(this.measuredOrigin, false);\n        const finalKeyframeIndex = unresolvedKeyframes.length - 1;\n        const finalKeyframe = unresolvedKeyframes[finalKeyframeIndex];\n        unresolvedKeyframes[finalKeyframeIndex] = positionalValues[name](element.measureViewportBox(), window.getComputedStyle(element.current));\n        if (finalKeyframe !== null && this.finalKeyframe === undefined) {\n            this.finalKeyframe = finalKeyframe;\n        }\n        // If we removed transform values, reapply them before the next render\n        if (this.removedTransforms?.length) {\n            this.removedTransforms.forEach(([unsetTransformName, unsetTransformValue]) => {\n                element\n                    .getValue(unsetTransformName)\n                    .set(unsetTransformValue);\n            });\n        }\n        this.resolveNoneKeyframes();\n    }\n}\n\nexport { DOMKeyframesResolver };\n","import { isZeroValueString } from 'motion-utils';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n    else {\n        return true;\n    }\n}\n\nexport { isNone };\n","import { color } from '../color/index.mjs';\nimport { complex } from '../complex/index.mjs';\nimport { dimensionValueTypes } from '../dimensions.mjs';\nimport { testValueType } from '../test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { KeyframeResolver, time, frame, cancelFrame, transformProps, motionValue, findValueType, complex, getAnimatableNone } from 'motion-dom';\nimport { warnOnce, isNumericalString, isZeroValueString, SubscriptionManager } from 'motion-utils';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { visualElementStore } from './store.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\n\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps, _visualElement) {\n        return {};\n    }\n    constructor({ parent, props, presenceContext, reducedMotionConfig, blockInitialAnimation, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        this.KeyframeResolver = KeyframeResolver;\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.renderScheduledAt = 0.0;\n        this.scheduleRender = () => {\n            const now = time.now();\n            if (this.renderScheduledAt < now) {\n                this.renderScheduledAt = now;\n                frame.render(this.render, false, true);\n            }\n        };\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.blockInitialAnimation = Boolean(blockInitialAnimation);\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't necessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {}, this);\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n            }\n        }\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.valueSubscriptions.clear();\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature) {\n                feature.unmount();\n                feature.isMounted = false;\n            }\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        if (this.valueSubscriptions.has(key)) {\n            this.valueSubscriptions.get(key)();\n        }\n        const valueIsTransform = transformProps.has(key);\n        if (valueIsTransform && this.onBindTransform) {\n            this.onBindTransform();\n        }\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate && frame.preRender(this.notifyUpdate);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        let removeSyncCheck;\n        if (window.MotionCheckAppearSync) {\n            removeSyncCheck = window.MotionCheckAppearSync(this, key, value);\n        }\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n            if (removeSyncCheck)\n                removeSyncCheck();\n            if (value.owner)\n                value.stop();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    updateFeatures() {\n        let key = \"animation\";\n        for (key in featureDefinitions) {\n            const featureDefinition = featureDefinitions[key];\n            if (!featureDefinition)\n                continue;\n            const { isEnabled, Feature: FeatureConstructor } = featureDefinition;\n            /**\n             * If this feature is enabled but not active, make a new instance.\n             */\n            if (!this.features[key] &&\n                FeatureConstructor &&\n                isEnabled(this.props)) {\n                this.features[key] = new FeatureConstructor(this);\n            }\n            /**\n             * If we have a feature, mount or update it.\n             */\n            if (this.features[key]) {\n                const feature = this.features[key];\n                if (feature.isMounted) {\n                    feature.update();\n                }\n                else {\n                    feature.mount();\n                    feature.isMounted = true;\n                }\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listenerName = (\"on\" + key);\n            const listener = props[listenerName];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps, this), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        const existingValue = this.values.get(key);\n        if (value !== existingValue) {\n            if (existingValue)\n                this.removeValue(key);\n            this.bindToMotionValue(key, value);\n            this.values.set(key, value);\n            this.latestValues[key] = value.get();\n        }\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue === null ? undefined : defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key, target) {\n        let value = this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : this.getBaseTargetFromProps(this.props, key) ??\n                this.readValueFromInstance(this.current, key, this.options);\n        if (value !== undefined && value !== null) {\n            if (typeof value === \"string\" &&\n                (isNumericalString(value) || isZeroValueString(value))) {\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n                value = parseFloat(value);\n            }\n            else if (!findValueType(value) && complex.test(target)) {\n                value = getAnimatableNone(key, target);\n            }\n            this.setBaseTarget(key, isMotionValue(value) ? value.get() : value);\n        }\n        return isMotionValue(value) ? value.get() : value;\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        const { initial } = this.props;\n        let valueFromInitial;\n        if (typeof initial === \"string\" || typeof initial === \"object\") {\n            const variant = resolveVariantFromProps(this.props, initial, this.presenceContext?.custom);\n            if (variant) {\n                valueFromInitial = variant[key];\n            }\n        }\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { motionValue } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                if (existingValue.liveStyle === true) {\n                    existingValue.jump(nextValue);\n                }\n                else if (!existingValue.hasAnimated) {\n                    existingValue.set(nextValue);\n                }\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { DOMKeyframesResolver } from 'motion-dom';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    constructor() {\n        super(...arguments);\n        this.KeyframeResolver = DOMKeyframesResolver;\n    }\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style\n            ? props.style[key]\n            : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current) {\n                    this.current.textContent = `${latest}`;\n                }\n            });\n        }\n    }\n}\n\nexport { DOMVisualElement };\n","function renderHTML(element, { style, vars }, styleProp, projection) {\n    Object.assign(element.style, style, projection && projection.getProjectionStyles(styleProp));\n    // Loop over any CSS variables and assign those.\n    for (const key in vars) {\n        element.style.setProperty(key, vars[key]);\n    }\n}\n\nexport { renderHTML };\n","import { transformProps, readTransformValue, isCSSVariableName } from 'motion-dom';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"html\";\n        this.renderInstance = renderHTML;\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            return readTransformValue(instance, key);\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, props) {\n        buildHTMLStyles(renderState, latestValues, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","/**\n * A set of attribute names that are always read/written as camel case.\n */\nconst camelCaseAttributes = new Set([\n    \"baseFrequency\",\n    \"diffuseConstant\",\n    \"kernelMatrix\",\n    \"kernelUnitLength\",\n    \"keySplines\",\n    \"keyTimes\",\n    \"limitingConeAngle\",\n    \"markerHeight\",\n    \"markerWidth\",\n    \"numOctaves\",\n    \"targetX\",\n    \"targetY\",\n    \"surfaceScale\",\n    \"specularConstant\",\n    \"specularExponent\",\n    \"stdDeviation\",\n    \"tableValues\",\n    \"viewBox\",\n    \"gradientTransform\",\n    \"pathLength\",\n    \"startOffset\",\n    \"textLength\",\n    \"lengthAdjust\",\n]);\n\nexport { camelCaseAttributes };\n","import { transformProps, getDefaultValueType } from 'motion-dom';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.type = \"svg\";\n        this.isSVGTag = false;\n        this.measureInstanceViewportBox = createBox;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    scrapeMotionValuesFromProps(props, prevProps, visualElement) {\n        return scrapeMotionValuesFromProps(props, prevProps, visualElement);\n    }\n    build(renderState, latestValues, props) {\n        buildSVGAttrs(renderState, latestValues, this.isSVGTag, props.transformTemplate, props.style);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { camelToDash } from '../../dom/utils/camel-to-dash.mjs';\nimport { renderHTML } from '../../html/utils/render.mjs';\nimport { camelCaseAttributes } from './camel-case-attrs.mjs';\n\nfunction renderSVG(element, renderState, _styleProp, projection) {\n    renderHTML(element, renderState, undefined, projection);\n    for (const key in renderState.attrs) {\n        element.setAttribute(!camelCaseAttributes.has(key) ? camelToDash(key) : key, renderState.attrs[key]);\n    }\n}\n\nexport { renderSVG };\n","import { Fragment } from 'react';\nimport { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options)\n        : new HTMLVisualElement(options, {\n            allowProjection: Component !== Fragment,\n        });\n};\n\nexport { createDomVisualElement };\n","import { createDOMMotionComponentProxy } from '../create-proxy.mjs';\nimport { createMotionComponent } from './create.mjs';\n\nconst motion = /*@__PURE__*/ createDOMMotionComponentProxy(createMotionComponent);\n\nexport { motion };\n","import { animations } from '../../../motion/features/animations.mjs';\nimport { drag } from '../../../motion/features/drag.mjs';\nimport { gestureAnimations } from '../../../motion/features/gestures.mjs';\nimport { layout } from '../../../motion/features/layout.mjs';\nimport { createMotionComponentFactory } from '../create-factory.mjs';\nimport { createDomVisualElement } from '../../dom/create-visual-element.mjs';\n\nconst createMotionComponent = /*@__PURE__*/ createMotionComponentFactory({\n    ...animations,\n    ...gestureAnimations,\n    ...drag,\n    ...layout,\n}, createDomVisualElement);\n\nexport { createMotionComponent };\n","const generateLinearEasing = (easing, duration, // as milliseconds\nresolution = 10 // as milliseconds\n) => {\n    let points = \"\";\n    const numPoints = Math.max(Math.round(duration / resolution), 2);\n    for (let i = 0; i < numPoints; i++) {\n        points += easing(i / (numPoints - 1)) + \", \";\n    }\n    return `linear(${points.substring(0, points.length - 2)})`;\n};\n\nexport { generateLinearEasing };\n","const statsBuffer = {\n    value: null,\n    addProjectionMetrics: null,\n};\n\nexport { statsBuffer };\n","// If this number is a decimal, make it just five decimal places\n// to avoid exponents\nconst sanitize = (v) => Math.round(v * 100000) / 100000;\n\nexport { sanitize };\n","const floatRegex = /-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/gu;\n\nexport { floatRegex };\n","const isNotNull = (value) => value !== null;\nfunction getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }, finalKeyframe, speed = 1) {\n    const resolvedKeyframes = keyframes.filter(isNotNull);\n    const useFirstKeyframe = speed < 0 || (repeat && repeatType !== \"loop\" && repeat % 2 === 1);\n    const index = useFirstKeyframe ? 0 : resolvedKeyframes.length - 1;\n    return !index || finalKeyframe === undefined\n        ? resolvedKeyframes[index]\n        : finalKeyframe;\n}\n\nexport { getFinalKeyframe };\n","import { addUniqueItem, removeItem } from './array.mjs';\n\nclass SubscriptionManager {\n    constructor() {\n        this.subscriptions = [];\n    }\n    add(handler) {\n        addUniqueItem(this.subscriptions, handler);\n        return () => removeItem(this.subscriptions, handler);\n    }\n    notify(a, b, c) {\n        const numSubscriptions = this.subscriptions.length;\n        if (!numSubscriptions)\n            return;\n        if (numSubscriptions === 1) {\n            /**\n             * If there's only a single handler we can just call it without invoking a loop.\n             */\n            this.subscriptions[0](a, b, c);\n        }\n        else {\n            for (let i = 0; i < numSubscriptions; i++) {\n                /**\n                 * Check whether the handler exists before firing as it's possible\n                 * the subscriptions were modified during this loop running.\n                 */\n                const handler = this.subscriptions[i];\n                handler && handler(a, b, c);\n            }\n        }\n    }\n    getSize() {\n        return this.subscriptions.length;\n    }\n    clear() {\n        this.subscriptions.length = 0;\n    }\n}\n\nexport { SubscriptionManager };\n","import { graphql, useStaticQuery } from 'gatsby';\nimport { SiteMetadataConfigQuery } from '@/__generated__/gatsby-types';\nimport { DeepRequired } from '@/types';\n\nexport const SiteMetadataQuery = graphql`\n    query SiteMetadataConfig {\n        site {\n            siteMetadata {\n                title\n                categoryFieldName\n                defaultCategoryName\n                defaultPostTitle\n                obsidianNoteName\n            }\n        }\n    }\n`;\n\nexport const useAppConfig = (): DeepRequired<SiteMetadataConfigQuery> => useStaticQuery(SiteMetadataQuery);","function resolveElements(elementOrSelector, scope, selectorCache) {\n    if (elementOrSelector instanceof EventTarget) {\n        return [elementOrSelector];\n    }\n    else if (typeof elementOrSelector === \"string\") {\n        let root = document;\n        if (scope) {\n            root = scope.current;\n        }\n        const elements = selectorCache?.[elementOrSelector] ??\n            root.querySelectorAll(elementOrSelector);\n        return elements ? Array.from(elements) : [];\n    }\n    return Array.from(elementOrSelector);\n}\n\nexport { resolveElements };\n","import { mirrorEasing } from './modifiers/mirror.mjs';\nimport { reverseEasing } from './modifiers/reverse.mjs';\n\nconst circIn = (p) => 1 - Math.sin(Math.acos(p));\nconst circOut = reverseEasing(circIn);\nconst circInOut = mirrorEasing(circIn);\n\nexport { circIn, circInOut, circOut };\n","const springDefaults = {\n    // Default spring physics\n    stiffness: 100,\n    damping: 10,\n    mass: 1.0,\n    velocity: 0.0,\n    // Default duration/bounce-based options\n    duration: 800, // in ms\n    bounce: 0.3,\n    visualDuration: 0.3, // in seconds\n    // Rest thresholds\n    restSpeed: {\n        granular: 0.01,\n        default: 2,\n    },\n    restDelta: {\n        granular: 0.005,\n        default: 0.5,\n    },\n    // Limits\n    minDuration: 0.01, // in seconds\n    maxDuration: 10.0, // in seconds\n    minDamping: 0.05,\n    maxDamping: 1,\n};\n\nexport { springDefaults };\n","import { warning, secondsToMilliseconds, clamp, millisecondsToSeconds } from 'motion-utils';\nimport { springDefaults } from './defaults.mjs';\n\nconst safeMin = 0.001;\nfunction findSpring({ duration = springDefaults.duration, bounce = springDefaults.bounce, velocity = springDefaults.velocity, mass = springDefaults.mass, }) {\n    let envelope;\n    let derivative;\n    warning(duration <= secondsToMilliseconds(springDefaults.maxDuration), \"Spring duration must be 10 seconds or less\");\n    let dampingRatio = 1 - bounce;\n    /**\n     * Restrict dampingRatio and duration to within acceptable ranges.\n     */\n    dampingRatio = clamp(springDefaults.minDamping, springDefaults.maxDamping, dampingRatio);\n    duration = clamp(springDefaults.minDuration, springDefaults.maxDuration, millisecondsToSeconds(duration));\n    if (dampingRatio < 1) {\n        /**\n         * Underdamped spring\n         */\n        envelope = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const a = exponentialDecay - velocity;\n            const b = calcAngularFreq(undampedFreq, dampingRatio);\n            const c = Math.exp(-delta);\n            return safeMin - (a / b) * c;\n        };\n        derivative = (undampedFreq) => {\n            const exponentialDecay = undampedFreq * dampingRatio;\n            const delta = exponentialDecay * duration;\n            const d = delta * velocity + velocity;\n            const e = Math.pow(dampingRatio, 2) * Math.pow(undampedFreq, 2) * duration;\n            const f = Math.exp(-delta);\n            const g = calcAngularFreq(Math.pow(undampedFreq, 2), dampingRatio);\n            const factor = -envelope(undampedFreq) + safeMin > 0 ? -1 : 1;\n            return (factor * ((d - e) * f)) / g;\n        };\n    }\n    else {\n        /**\n         * Critically-damped spring\n         */\n        envelope = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (undampedFreq - velocity) * duration + 1;\n            return -safeMin + a * b;\n        };\n        derivative = (undampedFreq) => {\n            const a = Math.exp(-undampedFreq * duration);\n            const b = (velocity - undampedFreq) * (duration * duration);\n            return a * b;\n        };\n    }\n    const initialGuess = 5 / duration;\n    const undampedFreq = approximateRoot(envelope, derivative, initialGuess);\n    duration = secondsToMilliseconds(duration);\n    if (isNaN(undampedFreq)) {\n        return {\n            stiffness: springDefaults.stiffness,\n            damping: springDefaults.damping,\n            duration,\n        };\n    }\n    else {\n        const stiffness = Math.pow(undampedFreq, 2) * mass;\n        return {\n            stiffness,\n            damping: dampingRatio * 2 * Math.sqrt(mass * stiffness),\n            duration,\n        };\n    }\n}\nconst rootIterations = 12;\nfunction approximateRoot(envelope, derivative, initialGuess) {\n    let result = initialGuess;\n    for (let i = 1; i < rootIterations; i++) {\n        result = result - envelope(result) / derivative(result);\n    }\n    return result;\n}\nfunction calcAngularFreq(undampedFreq, dampingRatio) {\n    return undampedFreq * Math.sqrt(1 - dampingRatio * dampingRatio);\n}\n\nexport { calcAngularFreq, findSpring };\n","import { millisecondsToSeconds, secondsToMilliseconds, clamp } from 'motion-utils';\nimport { generateLinearEasing } from '../../waapi/utils/linear.mjs';\nimport { calcGeneratorDuration, maxGeneratorDuration } from '../utils/calc-duration.mjs';\nimport { createGeneratorEasing } from '../utils/create-generator-easing.mjs';\nimport { calcGeneratorVelocity } from '../utils/velocity.mjs';\nimport { springDefaults } from './defaults.mjs';\nimport { findSpring, calcAngularFreq } from './find.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = {\n        velocity: springDefaults.velocity,\n        stiffness: springDefaults.stiffness,\n        damping: springDefaults.damping,\n        mass: springDefaults.mass,\n        isResolvedFromDuration: false,\n        ...options,\n    };\n    // stiffness/damping/mass overrides duration/bounce\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        if (options.visualDuration) {\n            const visualDuration = options.visualDuration;\n            const root = (2 * Math.PI) / (visualDuration * 1.2);\n            const stiffness = root * root;\n            const damping = 2 *\n                clamp(0.05, 1, 1 - (options.bounce || 0)) *\n                Math.sqrt(stiffness);\n            springOptions = {\n                ...springOptions,\n                mass: springDefaults.mass,\n                stiffness,\n                damping,\n            };\n        }\n        else {\n            const derived = findSpring(options);\n            springOptions = {\n                ...springOptions,\n                ...derived,\n                mass: springDefaults.mass,\n            };\n            springOptions.isResolvedFromDuration = true;\n        }\n    }\n    return springOptions;\n}\nfunction spring(optionsOrVisualDuration = springDefaults.visualDuration, bounce = springDefaults.bounce) {\n    const options = typeof optionsOrVisualDuration !== \"object\"\n        ? {\n            visualDuration: optionsOrVisualDuration,\n            keyframes: [0, 1],\n            bounce,\n        }\n        : optionsOrVisualDuration;\n    let { restSpeed, restDelta } = options;\n    const origin = options.keyframes[0];\n    const target = options.keyframes[options.keyframes.length - 1];\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = { done: false, value: origin };\n    const { stiffness, damping, mass, duration, velocity, isResolvedFromDuration, } = getSpringOptions({\n        ...options,\n        velocity: -millisecondsToSeconds(options.velocity || 0),\n    });\n    const initialVelocity = velocity || 0.0;\n    const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n    const initialDelta = target - origin;\n    const undampedAngularFreq = millisecondsToSeconds(Math.sqrt(stiffness / mass));\n    /**\n     * If we're working on a granular scale, use smaller defaults for determining\n     * when the spring is finished.\n     *\n     * These defaults have been selected emprically based on what strikes a good\n     * ratio between feeling good and finishing as soon as changes are imperceptible.\n     */\n    const isGranularScale = Math.abs(initialDelta) < 5;\n    restSpeed || (restSpeed = isGranularScale\n        ? springDefaults.restSpeed.granular\n        : springDefaults.restSpeed.default);\n    restDelta || (restDelta = isGranularScale\n        ? springDefaults.restDelta.granular\n        : springDefaults.restDelta.default);\n    let resolveSpring;\n    if (dampingRatio < 1) {\n        const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n        // Underdamped spring\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            return (target -\n                envelope *\n                    (((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) /\n                        angularFreq) *\n                        Math.sin(angularFreq * t) +\n                        initialDelta * Math.cos(angularFreq * t)));\n        };\n    }\n    else if (dampingRatio === 1) {\n        // Critically damped spring\n        resolveSpring = (t) => target -\n            Math.exp(-undampedAngularFreq * t) *\n                (initialDelta +\n                    (initialVelocity + undampedAngularFreq * initialDelta) * t);\n    }\n    else {\n        // Overdamped spring\n        const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n        resolveSpring = (t) => {\n            const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n            // When performing sinh or cosh values can hit Infinity so we cap them here\n            const freqForT = Math.min(dampedAngularFreq * t, 300);\n            return (target -\n                (envelope *\n                    ((initialVelocity +\n                        dampingRatio * undampedAngularFreq * initialDelta) *\n                        Math.sinh(freqForT) +\n                        dampedAngularFreq *\n                            initialDelta *\n                            Math.cosh(freqForT))) /\n                    dampedAngularFreq);\n        };\n    }\n    const generator = {\n        calculatedDuration: isResolvedFromDuration ? duration || null : null,\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                let currentVelocity = t === 0 ? initialVelocity : 0.0;\n                /**\n                 * We only need to calculate velocity for under-damped springs\n                 * as over- and critically-damped springs can't overshoot, so\n                 * checking only for displacement is enough.\n                 */\n                if (dampingRatio < 1) {\n                    currentVelocity =\n                        t === 0\n                            ? secondsToMilliseconds(initialVelocity)\n                            : calcGeneratorVelocity(resolveSpring, t, current);\n                }\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(target - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? target : current;\n            return state;\n        },\n        toString: () => {\n            const calculatedDuration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n            const easing = generateLinearEasing((progress) => generator.next(calculatedDuration * progress).value, calculatedDuration, 30);\n            return calculatedDuration + \"ms \" + easing;\n        },\n        toTransition: () => { },\n    };\n    return generator;\n}\nspring.applyToOptions = (options) => {\n    const generatorOptions = createGeneratorEasing(options, 100, spring);\n    options.ease = generatorOptions.ease;\n    options.duration = secondsToMilliseconds(generatorOptions.duration);\n    options.type = \"keyframes\";\n    return options;\n};\n\nexport { spring };\n","import { millisecondsToSeconds } from 'motion-utils';\nimport { calcGeneratorDuration, maxGeneratorDuration } from './calc-duration.mjs';\n\n/**\n * Create a progress => progress easing function from a generator.\n */\nfunction createGeneratorEasing(options, scale = 100, createGenerator) {\n    const generator = createGenerator({ ...options, keyframes: [0, scale] });\n    const duration = Math.min(calcGeneratorDuration(generator), maxGeneratorDuration);\n    return {\n        type: \"keyframes\",\n        ease: (progress) => {\n            return generator.next(duration * progress).value / scale;\n        },\n        duration: millisecondsToSeconds(duration),\n    };\n}\n\nexport { createGeneratorEasing };\n","// Accepts an easing function and returns a new one that outputs reversed values.\n// Turns easeIn into easeOut.\nconst reverseEasing = (easing) => (p) => 1 - easing(1 - p);\n\nexport { reverseEasing };\n","/*#__NO_SIDE_EFFECTS__*/\nfunction memo(callback) {\n    let result;\n    return () => {\n        if (result === undefined)\n            result = callback();\n        return result;\n    };\n}\n\nexport { memo };\n","import { inertia } from '../generators/inertia.mjs';\nimport { keyframes } from '../generators/keyframes.mjs';\nimport { spring } from '../generators/spring/index.mjs';\n\nconst transitionTypeMap = {\n    decay: inertia,\n    inertia,\n    tween: keyframes,\n    keyframes: keyframes,\n    spring,\n};\nfunction replaceTransitionType(transition) {\n    if (typeof transition.type === \"string\") {\n        transition.type = transitionTypeMap[transition.type];\n    }\n}\n\nexport { replaceTransitionType };\n","import { backIn } from './back.mjs';\n\nconst anticipate = (p) => (p *= 2) < 1 ? 0.5 * backIn(p) : 0.5 * (2 - Math.pow(2, -10 * (p - 1)));\n\nexport { anticipate };\n","import { warnOnce, SubscriptionManager, velocityPerSecond } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { frame } from '../frameloop/frame.mjs';\n\n/**\n * Maximum time between the value of two frames, beyond which we\n * assume the velocity has since been 0.\n */\nconst MAX_VELOCITY_DELTA = 30;\nconst isFloat = (value) => {\n    return !isNaN(parseFloat(value));\n};\nconst collectMotionValues = {\n    current: undefined,\n};\n/**\n * `MotionValue` is used to track the state and velocity of motion values.\n *\n * @public\n */\nclass MotionValue {\n    /**\n     * @param init - The initiating value\n     * @param config - Optional configuration options\n     *\n     * -  `transformer`: A function to transform incoming values with.\n     */\n    constructor(init, options = {}) {\n        /**\n         * This will be replaced by the build step with the latest version number.\n         * When MotionValues are provided to motion components, warn if versions are mixed.\n         */\n        this.version = \"__VERSION__\";\n        /**\n         * Tracks whether this value can output a velocity. Currently this is only true\n         * if the value is numerical, but we might be able to widen the scope here and support\n         * other value types.\n         *\n         * @internal\n         */\n        this.canTrackVelocity = null;\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        this.updateAndNotify = (v, render = true) => {\n            const currentTime = time.now();\n            /**\n             * If we're updating the value during another frame or eventloop\n             * than the previous frame, then the we set the previous frame value\n             * to current.\n             */\n            if (this.updatedAt !== currentTime) {\n                this.setPrevFrameValue();\n            }\n            this.prev = this.current;\n            this.setCurrent(v);\n            // Update update subscribers\n            if (this.current !== this.prev) {\n                this.events.change?.notify(this.current);\n                if (this.dependents) {\n                    for (const dependent of this.dependents) {\n                        dependent.dirty();\n                    }\n                }\n            }\n            // Update render subscribers\n            if (render) {\n                this.events.renderRequest?.notify(this.current);\n            }\n        };\n        this.hasAnimated = false;\n        this.setCurrent(init);\n        this.owner = options.owner;\n    }\n    setCurrent(current) {\n        this.current = current;\n        this.updatedAt = time.now();\n        if (this.canTrackVelocity === null && current !== undefined) {\n            this.canTrackVelocity = isFloat(this.current);\n        }\n    }\n    setPrevFrameValue(prevFrameValue = this.current) {\n        this.prevFrameValue = prevFrameValue;\n        this.prevUpdatedAt = this.updatedAt;\n    }\n    /**\n     * Adds a function that will be notified when the `MotionValue` is updated.\n     *\n     * It returns a function that, when called, will cancel the subscription.\n     *\n     * When calling `onChange` inside a React component, it should be wrapped with the\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\n     *\n     * ```jsx\n     * export const MyComponent = () => {\n     *   const x = useMotionValue(0)\n     *   const y = useMotionValue(0)\n     *   const opacity = useMotionValue(1)\n     *\n     *   useEffect(() => {\n     *     function updateOpacity() {\n     *       const maxXY = Math.max(x.get(), y.get())\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\n     *       opacity.set(newOpacity)\n     *     }\n     *\n     *     const unsubscribeX = x.on(\"change\", updateOpacity)\n     *     const unsubscribeY = y.on(\"change\", updateOpacity)\n     *\n     *     return () => {\n     *       unsubscribeX()\n     *       unsubscribeY()\n     *     }\n     *   }, [])\n     *\n     *   return <motion.div style={{ x }} />\n     * }\n     * ```\n     *\n     * @param subscriber - A function that receives the latest value.\n     * @returns A function that, when called, will cancel this subscription.\n     *\n     * @deprecated\n     */\n    onChange(subscription) {\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(false, `value.onChange(callback) is deprecated. Switch to value.on(\"change\", callback).`);\n        }\n        return this.on(\"change\", subscription);\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        const unsubscribe = this.events[eventName].add(callback);\n        if (eventName === \"change\") {\n            return () => {\n                unsubscribe();\n                /**\n                 * If we have no more change listeners by the start\n                 * of the next frame, stop active animations.\n                 */\n                frame.read(() => {\n                    if (!this.events.change.getSize()) {\n                        this.stop();\n                    }\n                });\n            };\n        }\n        return unsubscribe;\n    }\n    clearListeners() {\n        for (const eventManagers in this.events) {\n            this.events[eventManagers].clear();\n        }\n    }\n    /**\n     * Attaches a passive effect to the `MotionValue`.\n     */\n    attach(passiveEffect, stopPassiveEffect) {\n        this.passiveEffect = passiveEffect;\n        this.stopPassiveEffect = stopPassiveEffect;\n    }\n    /**\n     * Sets the state of the `MotionValue`.\n     *\n     * @remarks\n     *\n     * ```jsx\n     * const x = useMotionValue(0)\n     * x.set(10)\n     * ```\n     *\n     * @param latest - Latest value to set.\n     * @param render - Whether to notify render subscribers. Defaults to `true`\n     *\n     * @public\n     */\n    set(v, render = true) {\n        if (!render || !this.passiveEffect) {\n            this.updateAndNotify(v, render);\n        }\n        else {\n            this.passiveEffect(v, this.updateAndNotify);\n        }\n    }\n    setWithVelocity(prev, current, delta) {\n        this.set(current);\n        this.prev = undefined;\n        this.prevFrameValue = prev;\n        this.prevUpdatedAt = this.updatedAt - delta;\n    }\n    /**\n     * Set the state of the `MotionValue`, stopping any active animations,\n     * effects, and resets velocity to `0`.\n     */\n    jump(v, endAnimation = true) {\n        this.updateAndNotify(v);\n        this.prev = v;\n        this.prevUpdatedAt = this.prevFrameValue = undefined;\n        endAnimation && this.stop();\n        if (this.stopPassiveEffect)\n            this.stopPassiveEffect();\n    }\n    dirty() {\n        this.events.change?.notify(this.current);\n    }\n    addDependent(dependent) {\n        if (!this.dependents) {\n            this.dependents = new Set();\n        }\n        this.dependents.add(dependent);\n    }\n    removeDependent(dependent) {\n        if (this.dependents) {\n            this.dependents.delete(dependent);\n        }\n    }\n    /**\n     * Returns the latest state of `MotionValue`\n     *\n     * @returns - The latest state of `MotionValue`\n     *\n     * @public\n     */\n    get() {\n        if (collectMotionValues.current) {\n            collectMotionValues.current.push(this);\n        }\n        return this.current;\n    }\n    /**\n     * @public\n     */\n    getPrevious() {\n        return this.prev;\n    }\n    /**\n     * Returns the latest velocity of `MotionValue`\n     *\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\n     *\n     * @public\n     */\n    getVelocity() {\n        const currentTime = time.now();\n        if (!this.canTrackVelocity ||\n            this.prevFrameValue === undefined ||\n            currentTime - this.updatedAt > MAX_VELOCITY_DELTA) {\n            return 0;\n        }\n        const delta = Math.min(this.updatedAt - this.prevUpdatedAt, MAX_VELOCITY_DELTA);\n        // Casts because of parseFloat's poor typing\n        return velocityPerSecond(parseFloat(this.current) -\n            parseFloat(this.prevFrameValue), delta);\n    }\n    /**\n     * Registers a new animation to control this `MotionValue`. Only one\n     * animation can drive a `MotionValue` at one time.\n     *\n     * ```jsx\n     * value.start()\n     * ```\n     *\n     * @param animation - A function that starts the provided animation\n     */\n    start(startAnimation) {\n        this.stop();\n        return new Promise((resolve) => {\n            this.hasAnimated = true;\n            this.animation = startAnimation(resolve);\n            if (this.events.animationStart) {\n                this.events.animationStart.notify();\n            }\n        }).then(() => {\n            if (this.events.animationComplete) {\n                this.events.animationComplete.notify();\n            }\n            this.clearAnimation();\n        });\n    }\n    /**\n     * Stop the currently active animation.\n     *\n     * @public\n     */\n    stop() {\n        if (this.animation) {\n            this.animation.stop();\n            if (this.events.animationCancel) {\n                this.events.animationCancel.notify();\n            }\n        }\n        this.clearAnimation();\n    }\n    /**\n     * Returns `true` if this value is currently animating.\n     *\n     * @public\n     */\n    isAnimating() {\n        return !!this.animation;\n    }\n    clearAnimation() {\n        delete this.animation;\n    }\n    /**\n     * Destroy and clean up subscribers to this `MotionValue`.\n     *\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\n     * created a `MotionValue` via the `motionValue` function.\n     *\n     * @public\n     */\n    destroy() {\n        this.dependents?.clear();\n        this.events.destroy?.notify();\n        this.clearListeners();\n        this.stop();\n        if (this.stopPassiveEffect) {\n            this.stopPassiveEffect();\n        }\n    }\n}\nfunction motionValue(init, options) {\n    return new MotionValue(init, options);\n}\n\nexport { MotionValue, collectMotionValues, motionValue };\n","import { noop } from '../noop.mjs';\n\n/*\n  Bezier function generator\n  This has been modified from Gaëtan Renaudeau's BezierEasing\n  https://github.com/gre/bezier-easing/blob/master/src/index.js\n  https://github.com/gre/bezier-easing/blob/master/LICENSE\n  \n  I've removed the newtonRaphsonIterate algo because in benchmarking it\n  wasn't noticiably faster than binarySubdivision, indeed removing it\n  usually improved times, depending on the curve.\n  I also removed the lookup table, as for the added bundle size and loop we're\n  only cutting ~4 or so subdivision iterations. I bumped the max iterations up\n  to 12 to compensate and this still tended to be faster for no perceivable\n  loss in accuracy.\n  Usage\n    const easeOut = cubicBezier(.17,.67,.83,.67);\n    const x = easeOut(0.5); // returns 0.627...\n*/\n// Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\nconst calcBezier = (t, a1, a2) => (((1.0 - 3.0 * a2 + 3.0 * a1) * t + (3.0 * a2 - 6.0 * a1)) * t + 3.0 * a1) *\n    t;\nconst subdivisionPrecision = 0.0000001;\nconst subdivisionMaxIterations = 12;\nfunction binarySubdivide(x, lowerBound, upperBound, mX1, mX2) {\n    let currentX;\n    let currentT;\n    let i = 0;\n    do {\n        currentT = lowerBound + (upperBound - lowerBound) / 2.0;\n        currentX = calcBezier(currentT, mX1, mX2) - x;\n        if (currentX > 0.0) {\n            upperBound = currentT;\n        }\n        else {\n            lowerBound = currentT;\n        }\n    } while (Math.abs(currentX) > subdivisionPrecision &&\n        ++i < subdivisionMaxIterations);\n    return currentT;\n}\nfunction cubicBezier(mX1, mY1, mX2, mY2) {\n    // If this is a linear gradient, return linear easing\n    if (mX1 === mY1 && mX2 === mY2)\n        return noop;\n    const getTForX = (aX) => binarySubdivide(aX, 0, 1, mX1, mX2);\n    // If animation is at start/end, return t without easing\n    return (t) => t === 0 || t === 1 ? t : calcBezier(getTForX(t), mY1, mY2);\n}\n\nexport { cubicBezier };\n","// extracted by mini-css-extract-plugin\nexport default {\"animatedContainer__content\":\"post-container-module--animated-container__content--c6ca7\"};","import * as React from 'react';\nimport { HTMLAttributes, PropsWithChildren } from 'react';\nimport { motion, MotionProps } from 'framer-motion';\nimport styles from './post-container.module.scss';\n\nconst PostContainer = ({ children, className, ...props }: PropsWithChildren<MotionProps & HTMLAttributes<HTMLDivElement>>) => {\n  return (\n    <motion.div\n      initial={{ y: 30, opacity: 0 }}\n      animate={{ y: 0, opacity: 1 }}\n      transition={{ duration: 0.3, ease: \"easeOut\" }}\n      className={`${styles['animatedContainer__content']} ${className}`}\n      {...props}\n    >\n      {children}\n    </motion.div>\n  );\n};\n\nexport default PostContainer;","// extracted by mini-css-extract-plugin\nexport default {\"postHeader__container\":\"post-header-module--post-header__container--17ea9\",\"postHeader__title\":\"post-header-module--post-header__title--8af55\",\"postHeader__meta\":\"post-header-module--post-header__meta--0e52a\"};","import * as React from 'react';\nimport { motion } from 'framer-motion';\nimport styles from './post-header.module.scss'\nimport { useAppConfig } from '@/queries/app-config';\n\ntype PostHeaderProps = {\n  title: string;\n  date: string;\n  category: string;\n}\n\nconst PostHeader = ({ title, category, date }: PostHeaderProps) => {\n  const { site } = useAppConfig()\n\n  return (\n    <motion.div\n      className={styles['postHeader__container']}\n    >\n      <h1 className={styles['postHeader__title']}>\n        {title || site.siteMetadata.defaultPostTitle}\n      </h1>\n      <div className={styles['postHeader__meta']}>\n        <p>{category || site.siteMetadata.defaultCategoryName}</p>\n        <p>{date}</p>\n      </div>\n    </motion.div>\n  )\n}\n\nexport default PostHeader;","// extracted by mini-css-extract-plugin\nexport default {\"mdx\":\"post-body-module--mdx--83808\",\"title\":\"post-body-module--title--e237e\",\"token\":\"post-body-module--token--ae5f2\",\"comment\":\"post-body-module--comment--6fb16\",\"blockComment\":\"post-body-module--block-comment--4f8d9\",\"prolog\":\"post-body-module--prolog--0d712\",\"doctype\":\"post-body-module--doctype--298d8\",\"cdata\":\"post-body-module--cdata--507f2\",\"punctuation\":\"post-body-module--punctuation--090ac\",\"tag\":\"post-body-module--tag--3dc74\",\"attrName\":\"post-body-module--attr-name--b9699\",\"namespace\":\"post-body-module--namespace--135d9\",\"deleted\":\"post-body-module--deleted--f3a7a\",\"functionName\":\"post-body-module--function-name--35039\",\"boolean\":\"post-body-module--boolean--47868\",\"number\":\"post-body-module--number--39822\",\"function\":\"post-body-module--function--b703c\",\"property\":\"post-body-module--property--e4da7\",\"className\":\"post-body-module--class-name--092ef\",\"constant\":\"post-body-module--constant--6099d\",\"symbol\":\"post-body-module--symbol--173a4\",\"selector\":\"post-body-module--selector--afa5d\",\"important\":\"post-body-module--important--36621\",\"atrule\":\"post-body-module--atrule--d34ed\",\"keyword\":\"post-body-module--keyword--18d81\",\"builtin\":\"post-body-module--builtin--c1aa2\",\"string\":\"post-body-module--string--42953\",\"char\":\"post-body-module--char--b1d59\",\"attrValue\":\"post-body-module--attr-value--a69f1\",\"regex\":\"post-body-module--regex--4cd90\",\"variable\":\"post-body-module--variable--60e59\",\"operator\":\"post-body-module--operator--933a1\",\"entity\":\"post-body-module--entity--4b0d2\",\"url\":\"post-body-module--url--2f054\",\"bold\":\"post-body-module--bold--7f8ac\",\"italic\":\"post-body-module--italic--6106c\",\"inserted\":\"post-body-module--inserted--b4dfe\",\"mdx__content\":\"post-body-module--mdx__content--77d1e\"};","import * as React from 'react';\nimport styles from './post-body.module.scss';\n\ninterface MDXProps {\n  html: string;\n}\n\nconst PostBody: React.FC<MDXProps> = ({ html }) => {\n  return (\n    <div className={styles['mdx']}>\n      <div className={styles['mdx__content']} dangerouslySetInnerHTML={{ __html: html }} />\n    </div>\n  );\n};\n\nexport default PostBody;","import PostContainer from '@/components/post/container/post-container';\nimport PostHeader from '@/components/post/header/post-header';\nimport PostBody from '@/components/post/body/post-body';\n\nexport const Post = Object.assign(PostContainer, {\n  Header: PostHeader,\n  Body: PostBody\n})","const singleColorRegex = /^(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))$/iu;\n\nexport { singleColorRegex };\n","import { floatRegex } from '../utils/float-regex.mjs';\nimport { isNullish } from '../utils/is-nullish.mjs';\nimport { singleColorRegex } from '../utils/single-color-regex.mjs';\n\n/**\n * Returns true if the provided string is a color, ie rgba(0,0,0,0) or #000,\n * but false if a number or multiple colors\n */\nconst isColorString = (type, testProp) => (v) => {\n    return Boolean((typeof v === \"string\" &&\n        singleColorRegex.test(v) &&\n        v.startsWith(type)) ||\n        (testProp &&\n            !isNullish(v) &&\n            Object.prototype.hasOwnProperty.call(v, testProp)));\n};\nconst splitColor = (aName, bName, cName) => (v) => {\n    if (typeof v !== \"string\")\n        return v;\n    const [a, b, c, alpha] = v.match(floatRegex);\n    return {\n        [aName]: parseFloat(a),\n        [bName]: parseFloat(b),\n        [cName]: parseFloat(c),\n        alpha: alpha !== undefined ? parseFloat(alpha) : 1,\n    };\n};\n\nexport { isColorString, splitColor };\n","function isNullish(v) {\n    return v == null;\n}\n\nexport { isNullish };\n","import { useLayoutEffect, useEffect } from 'react';\nimport { isBrowser } from './is-browser.mjs';\n\nconst useIsomorphicLayoutEffect = isBrowser ? useLayoutEffect : useEffect;\n\nexport { useIsomorphicLayoutEffect };\n","import { invariant, clamp, MotionGlobalConfig, noop, pipe, progress } from 'motion-utils';\nimport { mix } from './mix/index.mjs';\n\nfunction createMixers(output, ease, customMixer) {\n    const mixers = [];\n    const mixerFactory = customMixer || MotionGlobalConfig.mix || mix;\n    const numMixers = output.length - 1;\n    for (let i = 0; i < numMixers; i++) {\n        let mixer = mixerFactory(output[i], output[i + 1]);\n        if (ease) {\n            const easingFunction = Array.isArray(ease) ? ease[i] || noop : ease;\n            mixer = pipe(easingFunction, mixer);\n        }\n        mixers.push(mixer);\n    }\n    return mixers;\n}\n/**\n * Create a function that maps from a numerical input array to a generic output array.\n *\n * Accepts:\n *   - Numbers\n *   - Colors (hex, hsl, hsla, rgb, rgba)\n *   - Complex (combinations of one or more numbers or strings)\n *\n * ```jsx\n * const mixColor = interpolate([0, 1], ['#fff', '#000'])\n *\n * mixColor(0.5) // 'rgba(128, 128, 128, 1)'\n * ```\n *\n * TODO Revist this approach once we've moved to data models for values,\n * probably not needed to pregenerate mixer functions.\n *\n * @public\n */\nfunction interpolate(input, output, { clamp: isClamp = true, ease, mixer } = {}) {\n    const inputLength = input.length;\n    invariant(inputLength === output.length, \"Both input and output ranges must be the same length\");\n    /**\n     * If we're only provided a single input, we can just make a function\n     * that returns the output.\n     */\n    if (inputLength === 1)\n        return () => output[0];\n    if (inputLength === 2 && output[0] === output[1])\n        return () => output[1];\n    const isZeroDeltaRange = input[0] === input[1];\n    // If input runs highest -> lowest, reverse both arrays\n    if (input[0] > input[inputLength - 1]) {\n        input = [...input].reverse();\n        output = [...output].reverse();\n    }\n    const mixers = createMixers(output, ease, mixer);\n    const numMixers = mixers.length;\n    const interpolator = (v) => {\n        if (isZeroDeltaRange && v < input[0])\n            return output[0];\n        let i = 0;\n        if (numMixers > 1) {\n            for (; i < input.length - 2; i++) {\n                if (v < input[i + 1])\n                    break;\n            }\n        }\n        const progressInRange = progress(input[i], input[i + 1], v);\n        return mixers[i](progressInRange);\n    };\n    return isClamp\n        ? (v) => interpolator(clamp(input[0], input[inputLength - 1], v))\n        : interpolator;\n}\n\nexport { interpolate };\n","\"use client\";\nimport { createContext } from 'react';\n\n/**\n * @public\n */\nconst MotionConfigContext = createContext({\n    transformPagePoint: (p) => p,\n    isStatic: false,\n    reducedMotion: \"never\",\n});\n\nexport { MotionConfigContext };\n","import { hex } from './hex.mjs';\nimport { hsla } from './hsla.mjs';\nimport { rgba } from './rgba.mjs';\n\nconst color = {\n    test: (v) => rgba.test(v) || hex.test(v) || hsla.test(v),\n    parse: (v) => {\n        if (rgba.test(v)) {\n            return rgba.parse(v);\n        }\n        else if (hsla.test(v)) {\n            return hsla.parse(v);\n        }\n        else {\n            return hex.parse(v);\n        }\n    },\n    transform: (v) => {\n        return typeof v === \"string\"\n            ? v\n            : v.hasOwnProperty(\"red\")\n                ? rgba.transform(v)\n                : hsla.transform(v);\n    },\n};\n\nexport { color };\n","import { velocityPerSecond } from 'motion-utils';\n\nconst velocitySampleDuration = 5; // ms\nfunction calcGeneratorVelocity(resolveValue, t, current) {\n    const prevT = Math.max(t - velocitySampleDuration, 0);\n    return velocityPerSecond(current - resolveValue(prevT), t - prevT);\n}\n\nexport { calcGeneratorVelocity };\n","/*\n  Value in range from progress\n\n  Given a lower limit and an upper limit, we return the value within\n  that range as expressed by progress (usually a number from 0 to 1)\n\n  So progress = 0.5 would change\n\n  from -------- to\n\n  to\n\n  from ---- to\n\n  E.g. from = 10, to = 20, progress = 0.5 => 15\n\n  @param [number]: Lower limit of range\n  @param [number]: Upper limit of range\n  @param [number]: The progress between lower and upper limits expressed 0-1\n  @return [number]: Value as calculated from progress within range (not limited within range)\n*/\nconst mixNumber = (from, to, progress) => {\n    return from + (to - from) * progress;\n};\n\nexport { mixNumber };\n","import { time } from '../../frameloop/sync-time.mjs';\nimport { frame, cancelFrame, frameData } from '../../frameloop/frame.mjs';\n\nconst frameloopDriver = (update) => {\n    const passTimestamp = ({ timestamp }) => update(timestamp);\n    return {\n        start: (keepAlive = true) => frame.update(passTimestamp, keepAlive),\n        stop: () => cancelFrame(passTimestamp),\n        /**\n         * If we're processing this frame we can use the\n         * framelocked timestamp to keep things in sync.\n         */\n        now: () => (frameData.isProcessing ? frameData.timestamp : time.now()),\n    };\n};\n\nexport { frameloopDriver };\n","import { invariant, pipe, clamp, millisecondsToSeconds, secondsToMilliseconds } from 'motion-utils';\nimport { time } from '../frameloop/sync-time.mjs';\nimport { activeAnimations } from '../stats/animation-count.mjs';\nimport { mix } from '../utils/mix/index.mjs';\nimport { frameloopDriver } from './drivers/frame.mjs';\nimport { inertia } from './generators/inertia.mjs';\nimport { keyframes } from './generators/keyframes.mjs';\nimport { calcGeneratorDuration } from './generators/utils/calc-duration.mjs';\nimport { getFinalKeyframe } from './keyframes/get-final.mjs';\nimport { replaceTransitionType } from './utils/replace-transition-type.mjs';\nimport { WithPromise } from './utils/WithPromise.mjs';\n\nconst percentToProgress = (percent) => percent / 100;\nclass JSAnimation extends WithPromise {\n    constructor(options) {\n        super();\n        this.state = \"idle\";\n        this.startTime = null;\n        this.isStopped = false;\n        /**\n         * The current time of the animation.\n         */\n        this.currentTime = 0;\n        /**\n         * The time at which the animation was paused.\n         */\n        this.holdTime = null;\n        /**\n         * Playback speed as a factor. 0 would be stopped, -1 reverse and 2 double speed.\n         */\n        this.playbackSpeed = 1;\n        /**\n         * This method is bound to the instance to fix a pattern where\n         * animation.stop is returned as a reference from a useEffect.\n         */\n        this.stop = (sync = true) => {\n            if (sync) {\n                const { motionValue } = this.options;\n                if (motionValue && motionValue.updatedAt !== time.now()) {\n                    this.tick(time.now());\n                }\n            }\n            this.isStopped = true;\n            if (this.state === \"idle\")\n                return;\n            this.teardown();\n            const { onStop } = this.options;\n            onStop && onStop();\n        };\n        activeAnimations.mainThread++;\n        this.options = options;\n        this.initAnimation();\n        this.play();\n        if (options.autoplay === false)\n            this.pause();\n    }\n    initAnimation() {\n        const { options } = this;\n        replaceTransitionType(options);\n        const { type = keyframes, repeat = 0, repeatDelay = 0, repeatType, velocity = 0, } = options;\n        let { keyframes: keyframes$1 } = options;\n        const generatorFactory = type || keyframes;\n        if (process.env.NODE_ENV !== \"production\" &&\n            generatorFactory !== keyframes) {\n            invariant(keyframes$1.length <= 2, `Only two keyframes currently supported with spring and inertia animations. Trying to animate ${keyframes$1}`);\n        }\n        if (generatorFactory !== keyframes &&\n            typeof keyframes$1[0] !== \"number\") {\n            this.mixKeyframes = pipe(percentToProgress, mix(keyframes$1[0], keyframes$1[1]));\n            keyframes$1 = [0, 100];\n        }\n        const generator = generatorFactory({ ...options, keyframes: keyframes$1 });\n        /**\n         * If we have a mirror repeat type we need to create a second generator that outputs the\n         * mirrored (not reversed) animation and later ping pong between the two generators.\n         */\n        if (repeatType === \"mirror\") {\n            this.mirroredGenerator = generatorFactory({\n                ...options,\n                keyframes: [...keyframes$1].reverse(),\n                velocity: -velocity,\n            });\n        }\n        /**\n         * If duration is undefined and we have repeat options,\n         * we need to calculate a duration from the generator.\n         *\n         * We set it to the generator itself to cache the duration.\n         * Any timeline resolver will need to have already precalculated\n         * the duration by this step.\n         */\n        if (generator.calculatedDuration === null) {\n            generator.calculatedDuration = calcGeneratorDuration(generator);\n        }\n        const { calculatedDuration } = generator;\n        this.calculatedDuration = calculatedDuration;\n        this.resolvedDuration = calculatedDuration + repeatDelay;\n        this.totalDuration = this.resolvedDuration * (repeat + 1) - repeatDelay;\n        this.generator = generator;\n    }\n    updateTime(timestamp) {\n        const animationTime = Math.round(timestamp - this.startTime) * this.playbackSpeed;\n        // Update currentTime\n        if (this.holdTime !== null) {\n            this.currentTime = this.holdTime;\n        }\n        else {\n            // Rounding the time because floating point arithmetic is not always accurate, e.g. 3000.367 - 1000.367 =\n            // 2000.0000000000002. This is a problem when we are comparing the currentTime with the duration, for\n            // example.\n            this.currentTime = animationTime;\n        }\n    }\n    tick(timestamp, sample = false) {\n        const { generator, totalDuration, mixKeyframes, mirroredGenerator, resolvedDuration, calculatedDuration, } = this;\n        if (this.startTime === null)\n            return generator.next(0);\n        const { delay = 0, keyframes, repeat, repeatType, repeatDelay, type, onUpdate, finalKeyframe, } = this.options;\n        /**\n         * requestAnimationFrame timestamps can come through as lower than\n         * the startTime as set by performance.now(). Here we prevent this,\n         * though in the future it could be possible to make setting startTime\n         * a pending operation that gets resolved here.\n         */\n        if (this.speed > 0) {\n            this.startTime = Math.min(this.startTime, timestamp);\n        }\n        else if (this.speed < 0) {\n            this.startTime = Math.min(timestamp - totalDuration / this.speed, this.startTime);\n        }\n        if (sample) {\n            this.currentTime = timestamp;\n        }\n        else {\n            this.updateTime(timestamp);\n        }\n        // Rebase on delay\n        const timeWithoutDelay = this.currentTime - delay * (this.playbackSpeed >= 0 ? 1 : -1);\n        const isInDelayPhase = this.playbackSpeed >= 0\n            ? timeWithoutDelay < 0\n            : timeWithoutDelay > totalDuration;\n        this.currentTime = Math.max(timeWithoutDelay, 0);\n        // If this animation has finished, set the current time  to the total duration.\n        if (this.state === \"finished\" && this.holdTime === null) {\n            this.currentTime = totalDuration;\n        }\n        let elapsed = this.currentTime;\n        let frameGenerator = generator;\n        if (repeat) {\n            /**\n             * Get the current progress (0-1) of the animation. If t is >\n             * than duration we'll get values like 2.5 (midway through the\n             * third iteration)\n             */\n            const progress = Math.min(this.currentTime, totalDuration) / resolvedDuration;\n            /**\n             * Get the current iteration (0 indexed). For instance the floor of\n             * 2.5 is 2.\n             */\n            let currentIteration = Math.floor(progress);\n            /**\n             * Get the current progress of the iteration by taking the remainder\n             * so 2.5 is 0.5 through iteration 2\n             */\n            let iterationProgress = progress % 1.0;\n            /**\n             * If iteration progress is 1 we count that as the end\n             * of the previous iteration.\n             */\n            if (!iterationProgress && progress >= 1) {\n                iterationProgress = 1;\n            }\n            iterationProgress === 1 && currentIteration--;\n            currentIteration = Math.min(currentIteration, repeat + 1);\n            /**\n             * Reverse progress if we're not running in \"normal\" direction\n             */\n            const isOddIteration = Boolean(currentIteration % 2);\n            if (isOddIteration) {\n                if (repeatType === \"reverse\") {\n                    iterationProgress = 1 - iterationProgress;\n                    if (repeatDelay) {\n                        iterationProgress -= repeatDelay / resolvedDuration;\n                    }\n                }\n                else if (repeatType === \"mirror\") {\n                    frameGenerator = mirroredGenerator;\n                }\n            }\n            elapsed = clamp(0, 1, iterationProgress) * resolvedDuration;\n        }\n        /**\n         * If we're in negative time, set state as the initial keyframe.\n         * This prevents delay: x, duration: 0 animations from finishing\n         * instantly.\n         */\n        const state = isInDelayPhase\n            ? { done: false, value: keyframes[0] }\n            : frameGenerator.next(elapsed);\n        if (mixKeyframes) {\n            state.value = mixKeyframes(state.value);\n        }\n        let { done } = state;\n        if (!isInDelayPhase && calculatedDuration !== null) {\n            done =\n                this.playbackSpeed >= 0\n                    ? this.currentTime >= totalDuration\n                    : this.currentTime <= 0;\n        }\n        const isAnimationFinished = this.holdTime === null &&\n            (this.state === \"finished\" || (this.state === \"running\" && done));\n        // TODO: The exception for inertia could be cleaner here\n        if (isAnimationFinished && type !== inertia) {\n            state.value = getFinalKeyframe(keyframes, this.options, finalKeyframe, this.speed);\n        }\n        if (onUpdate) {\n            onUpdate(state.value);\n        }\n        if (isAnimationFinished) {\n            this.finish();\n        }\n        return state;\n    }\n    /**\n     * Allows the returned animation to be awaited or promise-chained. Currently\n     * resolves when the animation finishes at all but in a future update could/should\n     * reject if its cancels.\n     */\n    then(resolve, reject) {\n        return this.finished.then(resolve, reject);\n    }\n    get duration() {\n        return millisecondsToSeconds(this.calculatedDuration);\n    }\n    get time() {\n        return millisecondsToSeconds(this.currentTime);\n    }\n    set time(newTime) {\n        newTime = secondsToMilliseconds(newTime);\n        this.currentTime = newTime;\n        if (this.startTime === null ||\n            this.holdTime !== null ||\n            this.playbackSpeed === 0) {\n            this.holdTime = newTime;\n        }\n        else if (this.driver) {\n            this.startTime = this.driver.now() - newTime / this.playbackSpeed;\n        }\n        this.driver?.start(false);\n    }\n    get speed() {\n        return this.playbackSpeed;\n    }\n    set speed(newSpeed) {\n        this.updateTime(time.now());\n        const hasChanged = this.playbackSpeed !== newSpeed;\n        this.playbackSpeed = newSpeed;\n        if (hasChanged) {\n            this.time = millisecondsToSeconds(this.currentTime);\n        }\n    }\n    play() {\n        if (this.isStopped)\n            return;\n        const { driver = frameloopDriver, onPlay, startTime } = this.options;\n        if (!this.driver) {\n            this.driver = driver((timestamp) => this.tick(timestamp));\n        }\n        onPlay && onPlay();\n        const now = this.driver.now();\n        if (this.state === \"finished\") {\n            this.updateFinished();\n            this.startTime = now;\n        }\n        else if (this.holdTime !== null) {\n            this.startTime = now - this.holdTime;\n        }\n        else if (!this.startTime) {\n            this.startTime = startTime ?? now;\n        }\n        if (this.state === \"finished\" && this.speed < 0) {\n            this.startTime += this.calculatedDuration;\n        }\n        this.holdTime = null;\n        /**\n         * Set playState to running only after we've used it in\n         * the previous logic.\n         */\n        this.state = \"running\";\n        this.driver.start();\n    }\n    pause() {\n        this.state = \"paused\";\n        this.updateTime(time.now());\n        this.holdTime = this.currentTime;\n    }\n    complete() {\n        if (this.state !== \"running\") {\n            this.play();\n        }\n        this.state = \"finished\";\n        this.holdTime = null;\n    }\n    finish() {\n        this.teardown();\n        this.state = \"finished\";\n        const { onComplete } = this.options;\n        onComplete && onComplete();\n    }\n    cancel() {\n        this.holdTime = null;\n        this.startTime = 0;\n        this.tick(0);\n        this.teardown();\n    }\n    teardown() {\n        this.notifyFinished();\n        this.state = \"idle\";\n        this.stopDriver();\n        this.startTime = this.holdTime = null;\n        activeAnimations.mainThread--;\n    }\n    stopDriver() {\n        if (!this.driver)\n            return;\n        this.driver.stop();\n        this.driver = undefined;\n    }\n    sample(sampleTime) {\n        this.startTime = 0;\n        return this.tick(sampleTime, true);\n    }\n    attachTimeline(timeline) {\n        if (this.options.allowFlatten) {\n            this.options.type = \"keyframes\";\n            this.options.ease = \"linear\";\n            this.initAnimation();\n        }\n        this.driver?.stop();\n        return timeline.observe(this);\n    }\n}\n// Legacy function support\nfunction animateValue(options) {\n    return new JSAnimation(options);\n}\n\nexport { JSAnimation, animateValue };\n","const colorRegex = /(?:#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\))/giu;\n\nexport { colorRegex };\n","import { color } from '../color/index.mjs';\nimport { colorRegex } from '../utils/color-regex.mjs';\nimport { floatRegex } from '../utils/float-regex.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\n\nfunction test(v) {\n    return (isNaN(v) &&\n        typeof v === \"string\" &&\n        (v.match(floatRegex)?.length || 0) +\n            (v.match(colorRegex)?.length || 0) >\n            0);\n}\nconst NUMBER_TOKEN = \"number\";\nconst COLOR_TOKEN = \"color\";\nconst VAR_TOKEN = \"var\";\nconst VAR_FUNCTION_TOKEN = \"var(\";\nconst SPLIT_TOKEN = \"${}\";\n// this regex consists of the `singleCssVariableRegex|rgbHSLValueRegex|digitRegex`\nconst complexRegex = /var\\s*\\(\\s*--(?:[\\w-]+\\s*|[\\w-]+\\s*,(?:\\s*[^)(\\s]|\\s*\\((?:[^)(]|\\([^)(]*\\))*\\))+\\s*)\\)|#[\\da-f]{3,8}|(?:rgb|hsl)a?\\((?:-?[\\d.]+%?[,\\s]+){2}-?[\\d.]+%?\\s*(?:[,/]\\s*)?(?:\\b\\d+(?:\\.\\d+)?|\\.\\d+)?%?\\)|-?(?:\\d+(?:\\.\\d+)?|\\.\\d+)/giu;\nfunction analyseComplexValue(value) {\n    const originalValue = value.toString();\n    const values = [];\n    const indexes = {\n        color: [],\n        number: [],\n        var: [],\n    };\n    const types = [];\n    let i = 0;\n    const tokenised = originalValue.replace(complexRegex, (parsedValue) => {\n        if (color.test(parsedValue)) {\n            indexes.color.push(i);\n            types.push(COLOR_TOKEN);\n            values.push(color.parse(parsedValue));\n        }\n        else if (parsedValue.startsWith(VAR_FUNCTION_TOKEN)) {\n            indexes.var.push(i);\n            types.push(VAR_TOKEN);\n            values.push(parsedValue);\n        }\n        else {\n            indexes.number.push(i);\n            types.push(NUMBER_TOKEN);\n            values.push(parseFloat(parsedValue));\n        }\n        ++i;\n        return SPLIT_TOKEN;\n    });\n    const split = tokenised.split(SPLIT_TOKEN);\n    return { values, split, indexes, types };\n}\nfunction parseComplexValue(v) {\n    return analyseComplexValue(v).values;\n}\nfunction createTransformer(source) {\n    const { split, types } = analyseComplexValue(source);\n    const numSections = split.length;\n    return (v) => {\n        let output = \"\";\n        for (let i = 0; i < numSections; i++) {\n            output += split[i];\n            if (v[i] !== undefined) {\n                const type = types[i];\n                if (type === NUMBER_TOKEN) {\n                    output += sanitize(v[i]);\n                }\n                else if (type === COLOR_TOKEN) {\n                    output += color.transform(v[i]);\n                }\n                else {\n                    output += v[i];\n                }\n            }\n        }\n        return output;\n    };\n}\nconst convertNumbersToZero = (v) => typeof v === \"number\" ? 0 : v;\nfunction getAnimatableNone(v) {\n    const parsed = parseComplexValue(v);\n    const transformer = createTransformer(v);\n    return transformer(parsed.map(convertNumbersToZero));\n}\nconst complex = {\n    test,\n    parse: parseComplexValue,\n    createTransformer,\n    getAnimatableNone,\n};\n\nexport { analyseComplexValue, complex };\n","const activeAnimations = {\n    layout: 0,\n    mainThread: 0,\n    waapi: 0,\n};\n\nexport { activeAnimations };\n","/*\n  Progress within given range\n\n  Given a lower limit and an upper limit, we return the progress\n  (expressed as a number 0-1) represented by the given value, and\n  limit that progress to within 0-1.\n\n  @param [number]: Lower limit\n  @param [number]: Upper limit\n  @param [number]: Value to find progress within given range\n  @return [number]: Progress of value within range as expressed 0-1\n*/\n/*#__NO_SIDE_EFFECTS__*/\nconst progress = (from, to, value) => {\n    const toFromDifference = to - from;\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nexport { progress };\n","/*\n  Convert velocity into velocity per second\n\n  @param [number]: Unit per frame\n  @param [number]: Frame duration in ms\n*/\nfunction velocityPerSecond(velocity, frameDuration) {\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\n}\n\nexport { velocityPerSecond };\n","const clamp = (min, max, v) => {\n    if (v > max)\n        return max;\n    if (v < min)\n        return min;\n    return v;\n};\n\nexport { clamp };\n","/**\n * Converts seconds to milliseconds\n *\n * @param seconds - Time in seconds.\n * @return milliseconds - Converted time in milliseconds.\n */\n/*#__NO_SIDE_EFFECTS__*/\nconst secondsToMilliseconds = (seconds) => seconds * 1000;\n/*#__NO_SIDE_EFFECTS__*/\nconst millisecondsToSeconds = (milliseconds) => milliseconds / 1000;\n\nexport { millisecondsToSeconds, secondsToMilliseconds };\n","class WithPromise {\n    constructor() {\n        this.count = 0;\n        this.updateFinished();\n    }\n    get finished() {\n        return this._finished;\n    }\n    updateFinished() {\n        this.count++;\n        this._finished = new Promise((resolve) => {\n            this.resolve = resolve;\n        });\n    }\n    notifyFinished() {\n        this.resolve();\n    }\n    /**\n     * Allows the animation to be awaited.\n     *\n     * @deprecated Use `finished` instead.\n     */\n    then(onResolve, onReject) {\n        return this.finished.then(onResolve, onReject);\n    }\n}\n\nexport { WithPromise };\n","import { alpha } from '../numbers/index.mjs';\nimport { percent } from '../numbers/units.mjs';\nimport { sanitize } from '../utils/sanitize.mjs';\nimport { isColorString, splitColor } from './utils.mjs';\n\nconst hsla = {\n    test: /*@__PURE__*/ isColorString(\"hsl\", \"hue\"),\n    parse: /*@__PURE__*/ splitColor(\"hue\", \"saturation\", \"lightness\"),\n    transform: ({ hue, saturation, lightness, alpha: alpha$1 = 1 }) => {\n        return (\"hsla(\" +\n            Math.round(hue) +\n            \", \" +\n            percent.transform(sanitize(saturation)) +\n            \", \" +\n            percent.transform(sanitize(lightness)) +\n            \", \" +\n            sanitize(alpha.transform(alpha$1)) +\n            \")\");\n    },\n};\n\nexport { hsla };\n","let warning = () => { };\nlet invariant = () => { };\nif (process.env.NODE_ENV !== \"production\") {\n    warning = (check, message) => {\n        if (!check && typeof console !== \"undefined\") {\n            console.warn(message);\n        }\n    };\n    invariant = (check, message) => {\n        if (!check) {\n            throw new Error(message);\n        }\n    };\n}\n\nexport { invariant, warning };\n","const isBrowser = typeof window !== \"undefined\";\n\nexport { isBrowser };\n","import { useRef } from 'react';\n\n/**\n * Creates a constant value over the lifecycle of a component.\n *\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\n * you can ensure that initialisers don't execute twice or more.\n */\nfunction useConstant(init) {\n    const ref = useRef(null);\n    if (ref.current === null) {\n        ref.current = init();\n    }\n    return ref.current;\n}\n\nexport { useConstant };\n","import { rgba } from './rgba.mjs';\nimport { isColorString } from './utils.mjs';\n\nfunction parseHex(v) {\n    let r = \"\";\n    let g = \"\";\n    let b = \"\";\n    let a = \"\";\n    // If we have 6 characters, ie #FF0000\n    if (v.length > 5) {\n        r = v.substring(1, 3);\n        g = v.substring(3, 5);\n        b = v.substring(5, 7);\n        a = v.substring(7, 9);\n        // Or we have 3 characters, ie #F00\n    }\n    else {\n        r = v.substring(1, 2);\n        g = v.substring(2, 3);\n        b = v.substring(3, 4);\n        a = v.substring(4, 5);\n        r += r;\n        g += g;\n        b += b;\n        a += a;\n    }\n    return {\n        red: parseInt(r, 16),\n        green: parseInt(g, 16),\n        blue: parseInt(b, 16),\n        alpha: a ? parseInt(a, 16) / 255 : 1,\n    };\n}\nconst hex = {\n    test: /*@__PURE__*/ isColorString(\"#\"),\n    parse: parseHex,\n    transform: rgba.transform,\n};\n\nexport { hex };\n","const MotionGlobalConfig = {};\n\nexport { MotionGlobalConfig };\n","import { cubicBezier } from './cubic-bezier.mjs';\n\nconst easeIn = /*@__PURE__*/ cubicBezier(0.42, 0, 1, 1);\nconst easeOut = /*@__PURE__*/ cubicBezier(0, 0, 0.58, 1);\nconst easeInOut = /*@__PURE__*/ cubicBezier(0.42, 0, 0.58, 1);\n\nexport { easeIn, easeInOut, easeOut };\n","const isEasingArray = (ease) => {\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nexport { isEasingArray };\n","import { invariant } from '../../errors.mjs';\nimport { noop } from '../../noop.mjs';\nimport { anticipate } from '../anticipate.mjs';\nimport { backIn, backInOut, backOut } from '../back.mjs';\nimport { circIn, circInOut, circOut } from '../circ.mjs';\nimport { cubicBezier } from '../cubic-bezier.mjs';\nimport { easeIn, easeInOut, easeOut } from '../ease.mjs';\nimport { isBezierDefinition } from './is-bezier-definition.mjs';\n\nconst easingLookup = {\n    linear: noop,\n    easeIn,\n    easeInOut,\n    easeOut,\n    circIn,\n    circInOut,\n    circOut,\n    backIn,\n    backInOut,\n    backOut,\n    anticipate,\n};\nconst isValidEasing = (easing) => {\n    return typeof easing === \"string\";\n};\nconst easingDefinitionToFunction = (definition) => {\n    if (isBezierDefinition(definition)) {\n        // If cubic bezier definition, create bezier curve\n        invariant(definition.length === 4, `Cubic bezier arrays must contain four numerical values.`);\n        const [x1, y1, x2, y2] = definition;\n        return cubicBezier(x1, y1, x2, y2);\n    }\n    else if (isValidEasing(definition)) {\n        // Else lookup from table\n        invariant(easingLookup[definition] !== undefined, `Invalid easing type '${definition}'`);\n        return easingLookup[definition];\n    }\n    return definition;\n};\n\nexport { easingDefinitionToFunction };\n","import { easeInOut, isEasingArray, easingDefinitionToFunction } from 'motion-utils';\nimport { interpolate } from '../../utils/interpolate.mjs';\nimport { defaultOffset } from '../keyframes/offsets/default.mjs';\nimport { convertOffsetToTimes } from '../keyframes/offsets/time.mjs';\n\nfunction defaultEasing(values, easing) {\n    return values.map(() => easing || easeInOut).splice(0, values.length - 1);\n}\nfunction keyframes({ duration = 300, keyframes: keyframeValues, times, ease = \"easeInOut\", }) {\n    /**\n     * Easing functions can be externally defined as strings. Here we convert them\n     * into actual functions.\n     */\n    const easingFunctions = isEasingArray(ease)\n        ? ease.map(easingDefinitionToFunction)\n        : easingDefinitionToFunction(ease);\n    /**\n     * This is the Iterator-spec return value. We ensure it's mutable rather than using a generator\n     * to reduce GC during animation.\n     */\n    const state = {\n        done: false,\n        value: keyframeValues[0],\n    };\n    /**\n     * Create a times array based on the provided 0-1 offsets\n     */\n    const absoluteTimes = convertOffsetToTimes(\n    // Only use the provided offsets if they're the correct length\n    // TODO Maybe we should warn here if there's a length mismatch\n    times && times.length === keyframeValues.length\n        ? times\n        : defaultOffset(keyframeValues), duration);\n    const mapTimeToKeyframe = interpolate(absoluteTimes, keyframeValues, {\n        ease: Array.isArray(easingFunctions)\n            ? easingFunctions\n            : defaultEasing(keyframeValues, easingFunctions),\n    });\n    return {\n        calculatedDuration: duration,\n        next: (t) => {\n            state.value = mapTimeToKeyframe(t);\n            state.done = t >= duration;\n            return state;\n        },\n    };\n}\n\nexport { defaultEasing, keyframes };\n","function convertOffsetToTimes(offset, duration) {\n    return offset.map((o) => o * duration);\n}\n\nexport { convertOffsetToTimes };\n","const stepsOrder = [\n    \"setup\", // Compute\n    \"read\", // Read\n    \"resolveKeyframes\", // Write/Read/Write/Read\n    \"preUpdate\", // Compute\n    \"update\", // Compute\n    \"preRender\", // Compute\n    \"render\", // Write\n    \"postRender\", // Compute\n];\n\nexport { stepsOrder };\n","import { MotionGlobalConfig } from 'motion-utils';\nimport { stepsOrder } from './order.mjs';\nimport { createRenderStep } from './render-step.mjs';\n\nconst maxElapsed = 40;\nfunction createRenderBatcher(scheduleNextBatch, allowKeepAlive) {\n    let runNextFrame = false;\n    let useDefaultElapsed = true;\n    const state = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    const flagRunNextFrame = () => (runNextFrame = true);\n    const steps = stepsOrder.reduce((acc, key) => {\n        acc[key] = createRenderStep(flagRunNextFrame, allowKeepAlive ? key : undefined);\n        return acc;\n    }, {});\n    const { setup, read, resolveKeyframes, preUpdate, update, preRender, render, postRender, } = steps;\n    const processBatch = () => {\n        const timestamp = MotionGlobalConfig.useManualTiming\n            ? state.timestamp\n            : performance.now();\n        runNextFrame = false;\n        if (!MotionGlobalConfig.useManualTiming) {\n            state.delta = useDefaultElapsed\n                ? 1000 / 60\n                : Math.max(Math.min(timestamp - state.timestamp, maxElapsed), 1);\n        }\n        state.timestamp = timestamp;\n        state.isProcessing = true;\n        // Unrolled render loop for better per-frame performance\n        setup.process(state);\n        read.process(state);\n        resolveKeyframes.process(state);\n        preUpdate.process(state);\n        update.process(state);\n        preRender.process(state);\n        render.process(state);\n        postRender.process(state);\n        state.isProcessing = false;\n        if (runNextFrame && allowKeepAlive) {\n            useDefaultElapsed = false;\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const wake = () => {\n        runNextFrame = true;\n        useDefaultElapsed = true;\n        if (!state.isProcessing) {\n            scheduleNextBatch(processBatch);\n        }\n    };\n    const schedule = stepsOrder.reduce((acc, key) => {\n        const step = steps[key];\n        acc[key] = (process, keepAlive = false, immediate = false) => {\n            if (!runNextFrame)\n                wake();\n            return step.schedule(process, keepAlive, immediate);\n        };\n        return acc;\n    }, {});\n    const cancel = (process) => {\n        for (let i = 0; i < stepsOrder.length; i++) {\n            steps[stepsOrder[i]].cancel(process);\n        }\n    };\n    return { schedule, cancel, state, steps };\n}\n\nexport { createRenderBatcher };\n","import { statsBuffer } from '../stats/buffer.mjs';\n\nfunction createRenderStep(runNextFrame, stepName) {\n    /**\n     * We create and reuse two queues, one to queue jobs for the current frame\n     * and one for the next. We reuse to avoid triggering GC after x frames.\n     */\n    let thisFrame = new Set();\n    let nextFrame = new Set();\n    /**\n     * Track whether we're currently processing jobs in this step. This way\n     * we can decide whether to schedule new jobs for this frame or next.\n     */\n    let isProcessing = false;\n    let flushNextFrame = false;\n    /**\n     * A set of processes which were marked keepAlive when scheduled.\n     */\n    const toKeepAlive = new WeakSet();\n    let latestFrameData = {\n        delta: 0.0,\n        timestamp: 0.0,\n        isProcessing: false,\n    };\n    let numCalls = 0;\n    function triggerCallback(callback) {\n        if (toKeepAlive.has(callback)) {\n            step.schedule(callback);\n            runNextFrame();\n        }\n        numCalls++;\n        callback(latestFrameData);\n    }\n    const step = {\n        /**\n         * Schedule a process to run on the next frame.\n         */\n        schedule: (callback, keepAlive = false, immediate = false) => {\n            const addToCurrentFrame = immediate && isProcessing;\n            const queue = addToCurrentFrame ? thisFrame : nextFrame;\n            if (keepAlive)\n                toKeepAlive.add(callback);\n            if (!queue.has(callback))\n                queue.add(callback);\n            return callback;\n        },\n        /**\n         * Cancel the provided callback from running on the next frame.\n         */\n        cancel: (callback) => {\n            nextFrame.delete(callback);\n            toKeepAlive.delete(callback);\n        },\n        /**\n         * Execute all schedule callbacks.\n         */\n        process: (frameData) => {\n            latestFrameData = frameData;\n            /**\n             * If we're already processing we've probably been triggered by a flushSync\n             * inside an existing process. Instead of executing, mark flushNextFrame\n             * as true and ensure we flush the following frame at the end of this one.\n             */\n            if (isProcessing) {\n                flushNextFrame = true;\n                return;\n            }\n            isProcessing = true;\n            [thisFrame, nextFrame] = [nextFrame, thisFrame];\n            // Execute this frame\n            thisFrame.forEach(triggerCallback);\n            /**\n             * If we're recording stats then\n             */\n            if (stepName && statsBuffer.value) {\n                statsBuffer.value.frameloop[stepName].push(numCalls);\n            }\n            numCalls = 0;\n            // Clear the frame so no callbacks remain. This is to avoid\n            // memory leaks should this render step not run for a while.\n            thisFrame.clear();\n            isProcessing = false;\n            if (flushNextFrame) {\n                flushNextFrame = false;\n                step.process(frameData);\n            }\n        },\n    };\n    return step;\n}\n\nexport { createRenderStep };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { clamp } from 'motion-utils';\n\nconst number = {\n    test: (v) => typeof v === \"number\",\n    parse: parseFloat,\n    transform: (v) => v,\n};\nconst alpha = {\n    ...number,\n    transform: (v) => clamp(0, 1, v),\n};\nconst scale = {\n    ...number,\n    default: 1,\n};\n\nexport { alpha, number, scale };\n","import { memo } from 'motion-utils';\n\nconst supportsScrollTimeline = /* @__PURE__ */ memo(() => window.ScrollTimeline !== undefined);\n\nexport { supportsScrollTimeline };\n","const isMotionValue = (value) => Boolean(value && value.getVelocity);\n\nexport { isMotionValue };\n"],"names":["combineFunctions","a","b","v","pipe","transformers","reduce","checkStringStartsWith","token","key","startsWith","isCSSVariableName","startsAsVariableToken","isCSSVariableToken","value","singleCssVariableRegex","test","split","trim","createUnitType","unit","endsWith","length","parse","parseFloat","transform","degrees","percent","px","vh","vw","progressPercentage","mirrorEasing","easing","p","defaultOffset","arr","offset","remaining","min","i","offsetProgress","progress","push","fillOffset","backOut","backIn","backInOut","schedule","frame","cancel","cancelFrame","state","frameData","steps","frameSteps","requestAnimationFrame","noop","any","now","clearTime","undefined","time","set","isProcessing","useManualTiming","timestamp","performance","newTime","queueMicrotask","addUniqueItem","item","indexOf","removeItem","index","splice","maxGeneratorDuration","calcGeneratorDuration","generator","duration","next","done","Infinity","rgbUnit","Math","round","clampRgbUnit","rgba","red","green","blue","alpha","alpha$1","hueToRgb","q","t","mixImmediate","mixLinearColor","from","to","fromExpo","expo","sqrt","colorTypes","hex","hsla","asRGBA","color","type","find","Boolean","model","hue","saturation","lightness","hslaToRgba","mixColor","fromRGBA","toRGBA","blended","invisibleValues","Set","mixNumber","getMixer","mixComplex","Array","isArray","mixArray","mixObject","output","numValues","blendValue","map","origin","target","template","complex","createTransformer","originStats","targetStats","indexes","var","number","has","values","mixVisibility","orderedOrigin","pointers","types","originIndex","originValue","matchOrder","mix","mixer","inertia","keyframes","velocity","power","timeConstant","bounceDamping","bounceStiffness","modifyTarget","max","restDelta","restSpeed","nearestBoundary","abs","amplitude","ideal","calcDelta","exp","calcLatest","applyFriction","delta","latest","timeReachedBoundary","spring$1","checkCatchBoundary","damping","stiffness","calculatedDuration","hasUpdatedFrame","createDOMMotionComponentProxy","componentFactory","Proxy","componentCache","Map","args","get","_target","isAnimationControls","start","getValueState","visualElement","forEach","getVelocity","resolveVariantFromProps","props","definition","custom","current","variants","resolveVariant","getProps","getValueTransition","transition","transformPropOrder","transformProps","positionalKeys","isKeyframesTarget","setMotionValue","hasValue","getValue","addValue","addValueToWillChange","willChange","add","WillChange","newWillChange","camelToDash","str","replace","toLowerCase","optimizedAppearDataAttribute","getOptimisedAppearId","radToDeg","rad","PI","rotate","angle","atan2","rebaseAngle","matrix2dParsers","x","y","translateX","translateY","scaleX","scaleY","scale","rotateZ","skewX","atan","skewY","skew","matrix3dParsers","z","translateZ","rotateX","rotateY","defaultTransformValue","name","includes","parseValueFromTransform","matrix3dMatch","match","parsers","matrix2dMatch","valueParser","convertTransformToNumber","isNumOrPxType","transformKeys","nonTranslationalTransformKeys","filter","positionalValues","width","paddingLeft","paddingRight","height","paddingTop","paddingBottom","top","_bbox","left","bottom","right","toResolve","isScheduled","anyNeedsMeasurement","isForced","measureAllKeyframes","resolversToMeasure","resolver","needsMeasurement","elementsToMeasure","element","transformsToRestore","removedTransforms","removeNonTranslationalTransform","render","measureInitialState","restore","measureEndState","suspendedScrollY","window","scrollTo","complete","clear","readAllKeyframes","readKeyframes","KeyframeResolver","constructor","unresolvedKeyframes","onComplete","motionValue","isAsync","this","scheduleResolve","read","resolveKeyframes","currentValue","finalKeyframe","valueAsRead","readValue","fillWildcards","setFinalKeyframe","renderEndStyles","isForcedComplete","delete","resume","supportsFlags","memoSupports","callback","supportsFlag","memoized","memo","supportsLinearEasing","document","createElement","animate","opacity","e","cubicBezierAsString","c","d","supportedWaapiEasing","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","mapEasingToNativeEasing","segmentEasing","startWaapiAnimation","valueName","delay","repeat","repeatType","times","pseudoElement","keyframeOptions","waapi","options","fill","iterations","direction","animation","finished","finally","isGenerator","NativeAnimation","WithPromise","super","finishedTime","isStopped","allowFlatten","isPseudoElement","applyToOptions","applyGeneratorOptions","autoplay","pause","onfinish","keyframe","speed","updateMotionValue","isCSSVar","style","setProperty","setStyle","notifyFinished","oncancel","play","updateFinished","finish","stop","commitStyles","effect","getComputedTiming","Number","currentTime","playbackRate","newSpeed","playState","startTime","newStartTime","attachTimeline","timeline","observe","updateTiming","unsupportedEasingFunctions","anticipate","circInOut","replaceStringEasing","NativeAnimationExtended","onUpdate","sampleAnimation","JSAnimation","sampleTime","setWithVelocity","sample","isAnimatable","acceleratedValues","supportsWaapi","Object","hasOwnProperty","call","Element","prototype","AsyncMotionValueAnimation","repeatDelay","_animation","stopTimeline","keyframeResolver","createdAt","optionsWithDefaults","KeyframeResolver$1","resolvedKeyframes","forced","onKeyframesResolved","sync","isHandoff","resolvedAt","originKeyframe","targetKeyframe","isOriginAnimatable","isTargetAnimatable","hasKeyframesChanged","canAnimate","instantAnimations","resolvedOptions","owner","HTMLElement","transformTemplate","supportsBrowserAnimation","then","catch","pendingTimeline","_finished","onResolve","_onReject","isNotNull","underDampedSpring","keyframesTransition","getDefaultTransition","valueKey","animateMotionValue","valueTransition","elapsed","when","_delay","delayChildren","staggerChildren","staggerDirection","keys","isTransitionDefined","assign","shouldSkip","skipAnimations","getFinalKeyframe","update","isSync","shouldBlockAnimation","protectedKeys","needsAnimating","shouldBlock","animateTarget","targetAndTransition","transitionOverride","transitionEnd","animations","animationTypeState","animationState","getState","latestValues","valueTarget","isAnimating","MotionHandoffAnimation","appearId","shouldReduceMotion","Promise","all","resolved","setTarget","animateVariant","variant","presenceContext","getAnimation","resolve","getChildAnimations","variantChildren","size","forwardDelay","maxStaggerDuration","generateStaggerDuration","sort","sortByTreeOrder","child","notify","animateChildren","first","last","sortNodePosition","shallowCompare","prev","prevLength","isVariantLabel","variantPriorityOrder","variantProps","numVariantProps","getVariantContext","isControllingVariants","context","parent","initial","prop","reversePriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createState","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","removedKeys","encounteredKeys","removedVariantIndex","typeState","propIsVariant","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","variantDidChange","checkVariantsDidChange","shouldAnimateType","handledRemovedValues","definitionList","resolvedValues","prevResolvedValues","allKeys","markToAnimate","liveStyle","valueHasChanged","blockInitialAnimation","fallbackAnimation","initialTransition","fallbackTarget","getBaseTarget","shouldAnimate","setActive","setAnimateFunction","makeAnimator","reset","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","Feature","node","isMounted","id","updateAnimationControlsSubscription","unmountControls","subscribe","mount","prevAnimate","prevProps","unmount","arguments","isPresent","onExitComplete","prevIsPresent","prevPresenceContext","exitAnimation","register","isDragging","isDragActive","addDomEvent","eventName","handler","passive","addEventListener","removeEventListener","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","point","pageX","pageY","addPointerEvent","addPointerInfo","convertBoundingBoxToBox","calcLength","axis","calcAxisDelta","source","originPoint","translate","isNaN","calcBoxDelta","originX","originY","calcRelativeAxis","relative","calcRelativeAxisPosition","layout","calcRelativePosition","createBox","eachAxis","isIdentityScale","hasScale","hasTransform","has2DTranslate","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","TREE_SCALE_SNAP_MIN","TREE_SCALE_SNAP_MAX","translateAxis","distance","transformAxis","axisTranslate","axisScale","axisOrigin","transformBox","measureViewportBox","instance","transformPoint","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","getContextWindow","ownerDocument","defaultView","isRefObject","ref","PanSession","handlers","transformPagePoint","contextWindow","dragSnapToOrigin","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","distance2D","onStart","onMove","handlePointerMove","handlePointerUp","end","onEnd","onSessionEnd","resumeAnimation","panInfo","initialInfo","onSessionStart","removeListeners","updateHandlers","subtractPoint","lastDevicePoint","startDevicePoint","timeDelta","timestampedPoint","lastPoint","currentVelocity","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","elementDragControls","WeakMap","VisualElementDragControls","openDragLock","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","snapToCursor","panSession","pauseAnimation","stopAnimation","drag","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","measuredAxis","layoutBox","postRender","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","getAnimationState","getTransformPagePoint","startAnimation","onDragEnd","_point","shouldDrag","axisValue","applyConstraints","dragConstraints","measure","prevConstraints","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","onMeasureDragConstraints","constraintsElement","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","dragMomentum","dragTransition","onDragTransitionEnd","momentumAnimations","startAxisValueAnimation","dragKey","toUpperCase","externalMotionValue","scalePositionWithinConstraints","boxProgress","sourceLength","targetLength","clamp","calcOrigin","updateScroll","updateLayout","addListeners","stopPointerListener","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","stopLayoutUpdateListener","hasLayoutChanged","asyncHandler","microtask","cancelMicrotask","createContext","LayoutGroupContext","SwitchLayoutGroupContext","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","correctBoxShadow","treeScale","projectionDelta","original","shadow","xScale","yScale","averageScale","scaleCorrectors","MeasureLayoutWithContext","Component","componentDidMount","layoutGroup","switchLayoutGroup","layoutId","correctors","isCSSVariable","addScaleCorrector","defaultScaleCorrectors","group","didUpdate","safeToRemove","setOptions","getSnapshotBeforeUpdate","layoutDependency","willUpdate","promote","relegate","stack","getStack","members","componentDidUpdate","currentAnimation","isLead","componentWillUnmount","promoteContext","scheduleCheckAfterUnmount","remove","deregister","MeasureLayout","useContext","useId","useEffect","useCallback","usePresence","jsx","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","compareByDepth","depth","FlatTree","children","isDirty","timeout","checkElapsed","setup","resolveMotionValue","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","circ","easeCrossfadeOut","copyAxisInto","originAxis","copyBoxInto","originBox","copyAxisDeltaInto","originDelta","removePointDelta","removeAxisTransforms","transforms","scaleKey","originKey","sourceAxis","removeAxisDelta","xKeys","yKeys","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","axisEquals","axisEqualsRounded","boxEqualsRounded","aspectRatio","axisDeltaEquals","NodeStack","scheduleRender","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","animationValues","isUpdating","isLayoutDirty","crossfade","hide","exitAnimationComplete","resumingFrom","removeLeadSnapshot","metrics","nodes","calculatedTargetDeltas","calculatedProjections","transformAxes","hiddenVisibility","visibility","resetDistortingTransform","sharedAnimationValues","setStaticValue","cancelTreeOptimisedTransformAnimations","projectionNode","hasCheckedOptimisedAppear","MotionHasOptimisedAnimation","MotionCancelOptimisedAnimation","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","hasTreeAnimated","updateScheduled","scheduleUpdate","projectionUpdateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","addProjectionMetrics","resolvedRelativeTargetAt","hasProjected","isVisible","animationProgress","sharedNodes","path","notifyListeners","subscriptionManager","hasListeners","SVGElement","tagName","cancelDelay","resizeUnblockUpdate","finishAnimation","registerSharedNode","hasRelativeLayoutChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","onLayoutAnimationStart","onLayoutAnimationComplete","hasTargetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","blockUpdate","unblockUpdate","isUpdateBlocked","startUpdate","resetSkewAndRotation","getTransformTemplate","shouldNotifyListeners","prevTransformTemplateValue","updateSnapshot","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","process","preRender","clearSnapshot","removeLeadSnapshots","scheduleUpdateProjection","measuredBox","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","layoutScroll","isRoot","wasRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","some","checkNodeWasScrollRoot","boxWithoutScroll","applyTransform","transformOnly","withTransforms","boxWithoutTransform","setTargetDelta","targetDelta","forceRelativeParentToResolveTarget","relativeParent","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","getClosestProjectingParent","relativeTargetOrigin","targetWithTransforms","isProjecting","canSkip","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","prevProjectionDelta","createProjectionDeltas","notifyAll","projectionDeltaWithTransform","snapshotLatestValues","mixedValues","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","hasOpacityCrossfade","prevRelativeTarget","mixTargetDelta","mixAxisDelta","mixAxis","follow","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","animateSingleValue","onStop","completeAnimation","applyTransformsToTarget","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","getPrevLead","hasDistortingTransform","resetValues","getProjectionStyles","styleProp","styles","pointerEvents","emptyStyles","valuesToRender","latestTransform","xTranslate","yTranslate","zTranslate","transformPerspective","elementScaleX","elementScaleY","buildProjectionTransform","transformOrigin","corrected","num","renderState","vars","resetTree","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","userAgentContains","string","navigator","userAgent","roundPoint","maxDistance","DocumentProjectionNode","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","removePointerDownListener","onPointerDown","pointerDownEvent","session","createPanHandlers","onPanSessionStart","onPanStart","onPan","onPanEnd","removeGroupControls","controls","dragControls","ProjectionNode","setupGesture","elementOrSelector","elements","gestureAbortController","AbortController","signal","abort","isValidHover","handleHoverEvent","lifecycle","isNodeOrChild","parentElement","focusableElements","isPressing","WeakSet","filterEvents","firePointerEvent","dispatchEvent","PointerEvent","bubbles","isValidPressEvent","press","targetOrSelector","onPressStart","targets","eventOptions","cancelEvents","startPress","currentTarget","onPressEnd","onPointerEnd","endEvent","success","onPointerUp","onPointerCancel","upEvent","useGlobalTarget","cancelEvent","focusEvent","handleKeydown","handleKeyup","enableKeyboardPress","tabIndex","hasAttribute","handlePressEvent","HTMLButtonElement","disabled","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","unobserve","thresholdNames","gestureAnimations","inView","hasEnteredView","isInView","startObserver","viewport","margin","rootMargin","amount","once","threshold","isIntersecting","onViewportEnter","onViewportLeave","prevViewport","hasViewportOptionChanged","tap","_element","globalTapTarget","focus","onFocus","isFocusVisible","matches","onBlur","hover","onHoverStart","onPointerEnter","enterEvent","onHoverEnd","onPointerLeave","leaveEvent","LazyContext","strict","MotionContext","isVariantNode","useCreateMotionContext","inherit","getCurrentTreeVariants","useMemo","variantLabelsAsDependency","join","featureProps","featureDefinitions","isEnabled","motionComponentSymbol","Symbol","for","useMotionRef","visualState","externalRef","onMount","useVisualElement","createVisualElement","ProjectionNodeConstructor","lazyContext","reducedMotionConfig","MotionConfigContext","reducedMotion","visualElementRef","useRef","renderer","initialLayoutGroupConfig","layoutCrossfade","getClosestProjectingNode","useInsertionEffect","optimisedAppearId","wantsHandoff","MotionHandoffIsComplete","MotionIsMounted","updateFeatures","MotionHandoffMarkAsComplete","allowProjection","createRendererMotionComponent","preloadedFeatures","useRender","useVisualState","MotionComponent","configAndProps","useLayoutId","isStatic","useStrictMode","layoutProjection","combined","getProjectionFunctionality","jsxs","Provider","features","loadFeatures","displayName","ForwardRefMotionComponent","forwardRef","layoutGroupId","isForcedMotionValue","getValueAsType","transformValueTypes","scaleZ","perspective","originZ","numberValueTypes","borderWidth","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","radius","maxWidth","maxHeight","padding","marginTop","marginRight","marginBottom","marginLeft","backgroundPositionX","backgroundPositionY","zIndex","fillOpacity","strokeOpacity","numOctaves","translateAlias","numTransforms","buildHTMLStyles","hasTransformOrigin","valueAsType","transformString","transformIsDefault","valueIsDefault","buildTransform","createHtmlRenderState","copyRawValuesOnly","useStyle","useInitialMotionValues","useHTMLProps","htmlProps","draggable","userSelect","WebkitUserSelect","WebkitTouchCallout","touchAction","onTap","onTapStart","validMotionProps","isValidMotionProp","shouldForward","isValidProp","require","default","lowercaseSVGElements","isSVGComponent","dashKeys","array","camelKeys","buildSVGAttrs","attrX","attrY","attrScale","pathLength","pathSpacing","pathOffset","isSVGTag","viewBox","attrs","spacing","useDashCase","buildSVGPath","createSvgRenderState","tag","useSVGProps","_isStatic","visualProps","rawStyles","createUseRender","forwardMotionProps","filteredProps","isDom","filterProps","elementProps","Fragment","renderedChildren","makeUseVisualState","make","scrapeMotionValuesFromProps","createRenderState","makeLatestValues","makeState","scrapeMotionValues","motionValues","isControllingVariants$1","isVariantNode$1","isInitialAnimationBlocked","variantToSet","list","newValues","htmlMotionConfig","charAt","substring","svgMotionConfig","createMotionComponentFactory","testValueType","dimensionValueTypes","findDimensionValueType","isNumericalString","splitCSSVariableRegex","getVariableValue","fallback","exec","token1","token2","parseCSSVariable","getPropertyValue","trimmed","isZeroValueString","maxDefaults","applyDefaultFilter","slice","defaultValue","functionRegex","getAnimatableNone","functions","defaultValueTypes","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","invalidTemplates","DOMKeyframesResolver","resolveNoneKeyframes","originType","targetType","noneKeyframeIndexes","animatableTemplate","noneIndex","makeNoneKeyframesAnimatable","pageYOffset","measuredOrigin","measureKeyframe","jump","finalKeyframeIndex","unsetTransformName","unsetTransformValue","valueTypes","prefersReducedMotion","hasReducedMotionListener","visualElementStore","propEventHandlers","VisualElement","_props","_prevProps","_visualElement","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderScheduledAt","baseTarget","initialValues","initialMotionValues","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","feature","valueIsTransform","onBindTransform","removeOnChange","on","latestValue","removeOnRenderRequest","removeSyncCheck","MotionCheckAppearSync","other","sortInstanceNodePosition","featureDefinition","FeatureConstructor","build","measureInstanceViewportBox","getStaticValue","listener","nextValue","prevValue","existingValue","hasAnimated","removeValue","updateMotionValuesFromProps","handleChildMotionValue","getVariant","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","setBaseTarget","valueFromInitial","DOMVisualElement","compareDocumentPosition","childSubscription","textContent","renderHTML","HTMLVisualElement","readTransformValue","computedStyle","camelCaseAttributes","SVGVisualElement","defaultType","getAttribute","_styleProp","setAttribute","renderSVG","motion","generateLinearEasing","resolution","points","numPoints","statsBuffer","sanitize","floatRegex","SubscriptionManager","subscriptions","numSubscriptions","getSize","useAppConfig","useStaticQuery","resolveElements","scope","selectorCache","EventTarget","querySelectorAll","sin","acos","springDefaults","mass","bounce","visualDuration","granular","minDuration","maxDuration","minDamping","maxDamping","safeMin","findSpring","envelope","derivative","dampingRatio","undampedFreq","exponentialDecay","calcAngularFreq","pow","f","g","initialGuess","result","rootIterations","approximateRoot","durationKeys","physicsKeys","isSpringType","spring","optionsOrVisualDuration","isResolvedFromDuration","springOptions","derived","getSpringOptions","initialVelocity","initialDelta","undampedAngularFreq","isGranularScale","resolveSpring","angularFreq","cos","dampedAngularFreq","freqForT","sinh","cosh","isBelowVelocityThreshold","isBelowDisplacementThreshold","toString","toTransition","generatorOptions","createGenerator","createGeneratorEasing","reverseEasing","transitionTypeMap","decay","tween","replaceTransitionType","collectMotionValues","MotionValue","init","version","canTrackVelocity","updateAndNotify","updatedAt","setPrevFrameValue","setCurrent","change","dependents","dependent","dirty","renderRequest","prevFrameValue","prevUpdatedAt","onChange","subscription","clearListeners","eventManagers","attach","passiveEffect","stopPassiveEffect","endAnimation","addDependent","removeDependent","getPrevious","animationStart","animationComplete","clearAnimation","animationCancel","destroy","calcBezier","a1","a2","subdivisionPrecision","subdivisionMaxIterations","cubicBezier","mX1","mY1","mX2","mY2","getTForX","aX","lowerBound","upperBound","currentX","currentT","binarySubdivide","_ref","className","React","div","title","category","date","site","siteMetadata","defaultPostTitle","defaultCategoryName","html","dangerouslySetInnerHTML","__html","Post","PostContainer","Header","PostHeader","Body","PostBody","singleColorRegex","isColorString","testProp","isNullish","splitColor","aName","bName","cName","useIsomorphicLayoutEffect","useLayoutEffect","interpolate","input","isClamp","inputLength","isZeroDeltaRange","mixers","customMixer","mixerFactory","numMixers","easingFunction","createMixers","interpolator","progressInRange","velocitySampleDuration","calcGeneratorVelocity","resolveValue","prevT","frameloopDriver","passTimestamp","keepAlive","percentToProgress","holdTime","playbackSpeed","tick","teardown","mainThread","initAnimation","keyframes$1","generatorFactory","mixKeyframes","mirroredGenerator","resolvedDuration","totalDuration","updateTime","animationTime","timeWithoutDelay","isInDelayPhase","frameGenerator","currentIteration","floor","iterationProgress","isAnimationFinished","reject","driver","hasChanged","stopDriver","colorRegex","NUMBER_TOKEN","COLOR_TOKEN","VAR_TOKEN","VAR_FUNCTION_TOKEN","SPLIT_TOKEN","complexRegex","analyseComplexValue","originalValue","parsedValue","parseComplexValue","numSections","convertNumbersToZero","parsed","transformer","activeAnimations","toFromDifference","velocityPerSecond","frameDuration","secondsToMilliseconds","seconds","millisecondsToSeconds","milliseconds","count","onReject","warning","invariant","isBrowser","useConstant","r","parseInt","MotionGlobalConfig","isEasingArray","easingLookup","easingDefinitionToFunction","x1","y1","x2","y2","keyframeValues","easingFunctions","absoluteTimes","o","convertOffsetToTimes","mapTimeToKeyframe","stepsOrder","maxElapsed","createRenderBatcher","scheduleNextBatch","allowKeepAlive","runNextFrame","useDefaultElapsed","flagRunNextFrame","stepName","thisFrame","nextFrame","flushNextFrame","toKeepAlive","latestFrameData","numCalls","triggerCallback","step","immediate","queue","frameloop","createRenderStep","preUpdate","processBatch","isBezierDefinition","supportsScrollTimeline","ScrollTimeline","isMotionValue"],"sourceRoot":""}