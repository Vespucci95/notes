{"version":3,"file":"component---src-pages-index-tsx-21aa067e6e6fbf1185e9.js","mappings":"qOAmBA,SAASA,EAAmBC,EAAWC,EAAyB,IAC9D,IAAIC,EAAkB,GAqBtB,MAAMC,EAAc,KAClB,MAAMC,EAAgBF,EAAgBG,KAAKC,GAClC,gBAAoBA,KAE7B,OAAO,SAAkBC,GACvB,MAAMC,EAAWD,IAAQP,IAAcI,EACvC,OAAO,WACL,KAAM,CAAG,CAAC,UAAUJ,KAAc,IAAKO,EAAO,CAACP,GAAYQ,MAC3D,CAACD,EAAOC,GAEZ,CAAC,EAGH,OADAL,EAAYH,UAAYA,EACjB,CAjCP,SAAwBS,EAAmBH,GACzC,MAAMI,EAAc,gBAAoBJ,GAClCK,EAAQT,EAAgBU,OAC9BV,EAAkB,IAAIA,EAAiBI,GACvC,MAAMO,EAAYC,IAChB,MAAM,MAAEP,EAAK,SAAEQ,KAAaC,GAAYF,EAClCG,EAAUV,IAAQP,KAAaW,IAAUD,EACzCQ,EAAQ,WAAc,IAAMF,GAASG,OAAOC,OAAOJ,IACzD,OAAuB,IAAAK,KAAIJ,EAAQJ,SAAU,CAAEK,QAAOH,YAAW,EAUnE,OARAF,EAASS,YAAcb,EAAoB,WAQpC,CAACI,EAPR,SAAqBU,EAAchB,GACjC,MAAMU,EAAUV,IAAQP,KAAaW,IAAUD,EACzCM,EAAU,aAAiBC,GACjC,GAAID,EAAS,OAAOA,EACpB,QAAuB,IAAnBV,EAA2B,OAAOA,EACtC,MAAM,IAAIkB,MAAM,KAAKD,6BAAwCd,MAC/D,EAEF,EAcwBgB,EAAqBtB,KAAgBF,GAC/D,CACA,SAASwB,KAAwBC,GAC/B,MAAMC,EAAYD,EAAO,GACzB,GAAsB,IAAlBA,EAAOd,OAAc,OAAOe,EAChC,MAAMxB,EAAc,KAClB,MAAMyB,EAAaF,EAAOrB,KAAKwB,IAAiB,CAC9CC,SAAUD,IACV7B,UAAW6B,EAAa7B,cAE1B,OAAO,SAA2B+B,GAChC,MAAMC,EAAaJ,EAAWK,QAAO,CAACC,GAAeJ,WAAU9B,gBAGtD,IAAKkC,KAFOJ,EAASC,GACI,UAAU/B,QAEzC,CAAC,GACJ,OAAO,WAAc,KAAM,CAAG,CAAC,UAAU2B,EAAU3B,aAAcgC,KAAe,CAACA,GACnF,CAAC,EAGH,OADA7B,EAAYH,UAAY2B,EAAU3B,UAC3BG,CACT,CCzEA,SAASgC,EAAOC,EAAKlB,GACnB,GAAmB,mBAARkB,EACT,OAAOA,EAAIlB,GACFkB,UACTA,EAAIC,QAAUnB,EAElB,CACA,SAASoB,KAAeC,GACtB,OAAQC,IACN,IAAIC,GAAa,EACjB,MAAMC,EAAWH,EAAKlC,KAAK+B,IACzB,MAAMO,EAAUR,EAAOC,EAAKI,GAI5B,OAHKC,GAAgC,mBAAXE,IACxBF,GAAa,GAERE,CAAO,IAEhB,GAAIF,EACF,MAAO,KACL,IAAK,IAAIG,EAAI,EAAGA,EAAIF,EAAS9B,OAAQgC,IAAK,CACxC,MAAMD,EAAUD,EAASE,GACH,mBAAXD,EACTA,IAEAR,EAAOI,EAAKK,GAAI,KAEpB,EAEJ,CAEJ,CACA,SAASC,KAAmBN,GAC1B,OAAO,cAAkBD,KAAeC,GAAOA,EACjD,CC9BA,SAASO,EAAWC,GAClB,MAAMC,EAA4BC,EAAgBF,GAC5CG,EAAQ,cAAiB,CAACpC,EAAOqC,KACrC,MAAM,SAAEpC,KAAaqC,GAActC,EAC7BuC,EAAgB,WAAeC,QAAQvC,GACvCwC,EAAYF,EAAcG,KAAKC,GACrC,GAAIF,EAAW,CACb,MAAMG,EAAaH,EAAUzC,MAAMC,SAC7B4C,EAAcN,EAAchD,KAAKuD,GACjCA,IAAUL,EACR,WAAeM,MAAMH,GAAc,EAAU,WAAeI,KAAK,MAC9D,iBAAqBJ,GAAcA,EAAW5C,MAAMC,SAAW,KAE/D6C,IAGX,OAAuB,IAAAvC,KAAI2B,EAAW,IAAKI,EAAWhB,IAAKe,EAAcpC,SAAU,iBAAqB2C,GAAc,eAAmBA,OAAY,EAAQC,GAAe,MAC9K,CACA,OAAuB,IAAAtC,KAAI2B,EAAW,IAAKI,EAAWhB,IAAKe,EAAcpC,YAAW,IAGtF,OADAmC,EAAM5B,YAAc,GAAGyB,SAChBG,CACT,CAGA,SAASD,EAAgBF,GACvB,MAAMC,EAAY,cAAiB,CAAClC,EAAOqC,KACzC,MAAM,SAAEpC,KAAaqC,GAActC,EACnC,GAAI,iBAAqBC,GAAW,CAClC,MAAMgD,EAkDZ,SAAuBC,GACrB,IAAIC,EAAS9C,OAAO+C,yBAAyBF,EAAQlD,MAAO,QAAQqD,IAChEC,EAAUH,GAAU,mBAAoBA,GAAUA,EAAOI,eAC7D,GAAID,EACF,OAAOJ,EAAQ5B,IAIjB,GAFA6B,EAAS9C,OAAO+C,yBAAyBF,EAAS,QAAQG,IAC1DC,EAAUH,GAAU,mBAAoBA,GAAUA,EAAOI,eACrDD,EACF,OAAOJ,EAAQlD,MAAMsB,IAEvB,OAAO4B,EAAQlD,MAAMsB,KAAO4B,EAAQ5B,GACtC,CA9D0BkC,CAAcvD,GAC5BwD,EAyBZ,SAAoBnB,EAAWoB,GAC7B,MAAMC,EAAgB,IAAKD,GAC3B,IAAK,MAAME,KAAYF,EAAY,CACjC,MAAMG,EAAgBvB,EAAUsB,GAC1BE,EAAiBJ,EAAWE,GAChB,WAAWG,KAAKH,GAE5BC,GAAiBC,EACnBH,EAAcC,GAAY,IAAII,KAC5B,MAAMC,EAASH,KAAkBE,GAEjC,OADAH,KAAiBG,GACVC,CAAM,EAENJ,IACTF,EAAcC,GAAYC,GAEN,UAAbD,EACTD,EAAcC,GAAY,IAAKC,KAAkBC,GAC3B,cAAbF,IACTD,EAAcC,GAAY,CAACC,EAAeC,GAAgBI,OAAOC,SAASC,KAAK,KAEnF,CACA,MAAO,IAAK9B,KAAcqB,EAC5B,CAhDqBU,CAAW/B,EAAWrC,EAASD,OAI9C,OAHIC,EAASqE,OAAS,aACpBb,EAAOnC,IAAMe,EAAeb,EAAYa,EAAcY,GAAeA,GAEhE,eAAmBhD,EAAUwD,EACtC,CACA,OAAO,WAAeV,MAAM9C,GAAY,EAAI,WAAe+C,KAAK,MAAQ,IAAI,IAG9E,OADAd,EAAU1B,YAAc,GAAGyB,cACpBC,CACT,CACA,IAAIqC,EAAuBC,OAAO,mBAWlC,SAAS7B,EAAYG,GACnB,OAAO,iBAAqBA,IAAgC,mBAAfA,EAAMwB,MAAuB,cAAexB,EAAMwB,MAAQxB,EAAMwB,KAAKG,YAAcF,CAClI,CCmBA,IAAIG,EAAiC,IAAIC,QACIC,IA8R7C,SAASC,EAAGC,EAAOjF,GACjB,GAAI,OAAQkF,MAAMC,UAChB,OAAOD,MAAMC,UAAUH,GAAGI,KAAKH,EAAOjF,GAExC,MAAMqF,EAGR,SAAqBJ,EAAOjF,GAC1B,MAAMC,EAASgF,EAAMhF,OACfqF,EAAgBC,EAAcvF,GAC9BqF,EAAcC,GAAiB,EAAIA,EAAgBrF,EAASqF,EAClE,OAAOD,EAAc,GAAKA,GAAepF,GAAU,EAAIoF,CACzD,CARsBG,CAAYP,EAAOjF,GACvC,OAAwB,IAAjBqF,OAAqB,EAASJ,EAAMI,EAC7C,CAOA,SAASE,EAAcE,GACrB,OAAOA,GAAWA,GAAqB,IAAXA,EAAe,EAAIC,KAAKC,MAAMF,EAC5D,CC3XA,SAASG,EAAqBC,EAAsBC,GAAiB,yBAAEC,GAA2B,GAAS,CAAC,GAC1G,OAAO,SAAqBC,GAE1B,GADAH,IAAuBG,IACU,IAA7BD,IAAuCC,EAAMC,iBAC/C,OAAOH,IAAkBE,EAE7B,CACF,CCNA,IAAIE,EAAmBC,YAAYC,SAAW,kBAAwB,OCClEC,EAAqB,EAAM,uBAAuBC,OAAOC,aAAe,EAC5E,SAASC,GAAqB,KAC5BC,EAAI,YACJC,EAAW,SACXC,EAAW,OACV,OACDC,IAEA,MAAOC,EAAkBC,EAAqBC,GAmChD,UAA8B,YAC5BL,EAAW,SACXC,IAEA,MAAOpG,EAAOyG,GAAY,WAAeN,GACnCO,EAAe,SAAa1G,GAC5BwG,EAAc,SAAaJ,GAUjC,OATAN,GAAmB,KACjBU,EAAYrF,QAAUiF,CAAQ,GAC7B,CAACA,IACJ,aAAgB,KACVM,EAAavF,UAAYnB,IAC3BwG,EAAYrF,UAAUnB,GACtB0G,EAAavF,QAAUnB,EACzB,GACC,CAACA,EAAO0G,IACJ,CAAC1G,EAAOyG,EAAUD,EAC3B,CApD+DG,CAAqB,CAChFR,cACAC,aAEIQ,OAAwB,IAATV,EACflG,EAAQ4G,EAAeV,EAAOI,EAC1B,CACR,MAAMO,EAAkB,cAAsB,IAATX,GACrC,aAAgB,KACd,MAAMY,EAAgBD,EAAgB1F,QACtC,GAAI2F,IAAkBF,EAAc,CAClC,MAAMG,EAAOD,EAAgB,aAAe,eACtCE,EAAKJ,EAAe,aAAe,eACzCK,QAAQC,KACN,GAAGb,sBAA2BU,QAAWC,8KAE7C,CACAH,EAAgB1F,QAAUyF,CAAY,GACrC,CAACA,EAAcP,GACpB,CACA,MAAMI,EAAW,eACdU,IACC,GAAIP,EAAc,CAChB,MAAMQ,EA8Bd,SAAoBpH,GAClB,MAAwB,mBAAVA,CAChB,CAhCuBqH,CAAWF,GAAaA,EAAUjB,GAAQiB,EACrDC,IAAWlB,GACbM,EAAYrF,UAAUiG,EAE1B,MACEb,EAAoBY,EACtB,GAEF,CAACP,EAAcV,EAAMK,EAAqBC,IAE5C,MAAO,CAACxG,EAAOyG,EACjB,CA0BiBrC,OAAO,oB,WC/CpBkD,EAnBQ,CACV,IACA,SACA,MACA,OACA,KACA,KACA,MACA,QACA,QACA,KACA,MACA,KACA,IACA,SACA,OACA,MACA,MAEoBvG,QAAO,CAACwG,EAAWjG,KACvC,MAAMkG,EAAO5F,EAAW,aAAaN,KAC/BmG,EAAO,cAAiB,CAAC7H,EAAOqC,KACpC,MAAM,QAAEyF,KAAYC,GAAmB/H,EACjCgI,EAAOF,EAAUF,EAAOlG,EAI9B,MAHsB,oBAAXuG,SACTA,OAAOzD,OAAO0D,IAAI,cAAe,IAEZ,IAAA3H,KAAIyH,EAAM,IAAKD,EAAgBzG,IAAKe,GAAe,IAG5E,OADAwF,EAAKrH,YAAc,aAAakB,IACzB,IAAKiG,EAAW,CAACjG,GAAOmG,EAAM,GACpC,CAAC,GCnBJ,IAAIM,EAAYnI,IACd,MAAM,QAAEoI,EAAO,SAAEnI,GAAaD,EACxBqI,EAOR,SAAqBD,GACnB,MAAO1G,EAAM4G,GAAW,aAClBC,EAAY,SAAc,MAC1BC,EAAiB,SAAcJ,GAC/BK,EAAuB,SAAc,QACrCC,EAAeN,EAAU,UAAY,aACpCO,EAAOC,GAvBhB,SAAyBF,EAAcG,GACrC,OAAO,cAAiB,CAACF,EAAO9C,IACZgD,EAAQF,GAAO9C,IACb8C,GACnBD,EACL,CAkBwBI,CAAgBJ,EAAc,CAClDK,QAAS,CACPC,QAAS,YACTC,cAAe,oBAEjBC,iBAAkB,CAChBC,MAAO,UACPC,cAAe,aAEjBC,UAAW,CACTF,MAAO,aAmEX,OAhEA,aAAiB,KACf,MAAMG,EAAuBC,EAAiBhB,EAAUhH,SACxDkH,EAAqBlH,QAAoB,YAAVoH,EAAsBW,EAAuB,MAAM,GACjF,CAACX,IACJ,GAAgB,KACd,MAAMa,EAASjB,EAAUhH,QACnBkI,EAAajB,EAAejH,QAElC,GAD0BkI,IAAerB,EAClB,CACrB,MAAMsB,EAAoBjB,EAAqBlH,QACzC+H,EAAuBC,EAAiBC,GAC9C,GAAIpB,EACFQ,EAAK,cACA,GAA6B,SAAzBU,GAAuD,SAApBE,GAAQG,QACpDf,EAAK,eACA,CAGHA,EADEa,GADgBC,IAAsBJ,EAEnC,gBAEA,UAET,CACAd,EAAejH,QAAU6G,CAC3B,IACC,CAACA,EAASQ,IACb,GAAgB,KACd,GAAIlH,EAAM,CACR,IAAIkI,EACJ,MAAMC,EAAcnI,EAAKoI,cAAcC,aAAe9B,OAChD+B,EAAsBnE,IAC1B,MACMoE,EADuBV,EAAiBhB,EAAUhH,SACR2I,SAASrE,EAAMsE,eAC/D,GAAItE,EAAMuE,SAAW1I,GAAQuI,IAC3BrB,EAAK,kBACAJ,EAAejH,SAAS,CAC3B,MAAM8I,EAAkB3I,EAAK4I,MAAMC,kBACnC7I,EAAK4I,MAAMC,kBAAoB,WAC/BX,EAAYC,EAAYW,YAAW,KACI,aAAjC9I,EAAK4I,MAAMC,oBACb7I,EAAK4I,MAAMC,kBAAoBF,EACjC,GAEJ,CACF,EAEII,EAAwB5E,IACxBA,EAAMuE,SAAW1I,IACnB+G,EAAqBlH,QAAUgI,EAAiBhB,EAAUhH,SAC5D,EAKF,OAHAG,EAAKgJ,iBAAiB,iBAAkBD,GACxC/I,EAAKgJ,iBAAiB,kBAAmBV,GACzCtI,EAAKgJ,iBAAiB,eAAgBV,GAC/B,KACLH,EAAYc,aAAaf,GACzBlI,EAAKkJ,oBAAoB,iBAAkBH,GAC3C/I,EAAKkJ,oBAAoB,kBAAmBZ,GAC5CtI,EAAKkJ,oBAAoB,eAAgBZ,EAAmB,CAEhE,CACEpB,EAAK,gBACP,GACC,CAAClH,EAAMkH,IACH,CACLiC,UAAW,CAAC,UAAW,oBAAoBX,SAASvB,GACpDrH,IAAK,eAAoBwJ,IACvBvC,EAAUhH,QAAUuJ,EAAQC,iBAAiBD,GAAS,KACtDxC,EAAQwC,EAAM,GACb,IAEP,CAjGmBE,CAAY5C,GACvBtF,EAA4B,mBAAb7C,EAA0BA,EAAS,CAAEmI,QAASC,EAASwC,YAAe,WAAgB7H,KAAK/C,GAC1GqB,EAAMS,EAAgBsG,EAAS/G,IAmGvC,SAAuB4B,GACrB,IAAIC,EAAS9C,OAAO+C,yBAAyBF,EAAQlD,MAAO,QAAQqD,IAChEC,EAAUH,GAAU,mBAAoBA,GAAUA,EAAOI,eAC7D,GAAID,EACF,OAAOJ,EAAQ5B,IAIjB,GAFA6B,EAAS9C,OAAO+C,yBAAyBF,EAAS,QAAQG,IAC1DC,EAAUH,GAAU,mBAAoBA,GAAUA,EAAOI,eACrDD,EACF,OAAOJ,EAAQlD,MAAMsB,IAEvB,OAAO4B,EAAQlD,MAAMsB,KAAO4B,EAAQ5B,GACtC,CA/G4C,CAAcwB,IAExD,MADuC,mBAAb7C,GACLoI,EAASwC,UAAY,eAAoB/H,EAAO,CAAExB,QAAS,IAAI,EA8FtF,SAASiI,EAAiBC,GACxB,OAAOA,GAAQW,eAAiB,MAClC,CA9FAhC,EAAS3H,YAAc,WA4GvB,IClIIyK,EAAa,EAAM,UAAU9E,OAAOC,aAAe,MAAa,GAChErD,EAAQ,EACZ,SAASmI,EAAMC,GACb,MAAOC,EAAIC,GAAS,WAAeJ,KAInC,OAHA,GAAgB,KACTE,GAAiBE,GAAOC,GAAYA,GAAWC,OAAOxI,MAAS,GACnE,CAACoI,IACGA,IAAoBC,EAAK,SAASA,IAAO,GAClD,CCEA,IAAII,EAAmB,eAClBC,EAA0BC,GAA0BzM,EAAmBuM,IACvEG,EAAqBC,GAAyBH,EAAyBD,GACxEK,EAAc,cAChB,CAAC7L,EAAOqC,KACN,MAAM,mBACJyJ,EACAC,KAAMC,EAAQ,YACdC,EAAW,SACXC,EAAQ,aACRC,KACGC,GACDpM,GACG+L,EAAMM,GAAWhG,EAAqB,CAC3CC,KAAM0F,EACNzF,YAAa0F,IAAe,EAC5BzF,SAAU2F,EACV1F,OAAQ+E,IAEV,OAAuB,IAAAjL,KACrBoL,EACA,CACElM,MAAOqM,EACPI,WACAI,UAAWpB,IACXa,OACAQ,aAAc,eAAkB,IAAMF,GAASG,IAAcA,KAAW,CAACH,IACzEpM,UAA0B,IAAAM,KACxBmH,EAAU+E,IACV,CACE,aAAcC,EAASX,GACvB,gBAAiBG,EAAW,QAAK,KAC9BE,EACH9K,IAAKe,KAIZ,IAGLwJ,EAAYrL,YAAcgL,EAC1B,IAAImB,EAAe,qBACfC,EAAqB,cACvB,CAAC5M,EAAOqC,KACN,MAAM,mBAAEyJ,KAAuBe,GAAiB7M,EAC1CE,EAAU0L,EAAsBe,EAAcb,GACpD,OAAuB,IAAAvL,KACrBmH,EAAUoF,OACV,CACExI,KAAM,SACN,gBAAiBpE,EAAQoM,UACzB,gBAAiBpM,EAAQ6L,OAAQ,EACjC,aAAcW,EAASxM,EAAQ6L,MAC/B,gBAAiB7L,EAAQgM,SAAW,QAAK,EACzCA,SAAUhM,EAAQgM,YACfW,EACHvL,IAAKe,EACL0K,QAAStH,EAAqBzF,EAAM+M,QAAS7M,EAAQqM,eAExD,IAGLK,EAAmBpM,YAAcmM,EACjC,IAAIK,EAAe,qBACfC,EAAqB,cACvB,CAACjN,EAAOqC,KACN,MAAM,WAAE6K,KAAeC,GAAiBnN,EAClCE,EAAU0L,EAAsBoB,EAAchN,EAAM8L,oBAC1D,OAAuB,IAAAvL,KAAI4H,EAAU,CAAEC,QAAS8E,GAAchN,EAAQ6L,KAAM9L,SAAU,EAAGmI,cAA8B,IAAA7H,KAAI6M,EAAwB,IAAKD,EAAc7L,IAAKe,EAAc+F,aAAa,IAG1M6E,EAAmBzM,YAAcwM,EACjC,IAAII,EAAyB,cAAiB,CAACpN,EAAOqC,KACpD,MAAM,mBAAEyJ,EAAkB,QAAE1D,EAAO,SAAEnI,KAAakN,GAAiBnN,EAC7DE,EAAU0L,EAAsBoB,EAAclB,IAC7CjB,EAAWwC,GAAgB,WAAejF,GAC3C9G,EAAM,SAAa,MACnBgM,EAAevL,EAAgBM,EAAcf,GAC7CiM,EAAY,SAAa,GACzBC,EAASD,EAAUhM,QACnBkM,EAAW,SAAa,GACxBC,EAAQD,EAASlM,QACjBoM,EAASzN,EAAQ6L,MAAQlB,EACzB+C,EAA+B,SAAaD,GAC5CE,EAAoB,cAAa,GAwBvC,OAvBA,aAAgB,KACd,MAAMC,EAAMC,uBAAsB,IAAMH,EAA6BrM,SAAU,IAC/E,MAAO,IAAMyM,qBAAqBF,EAAI,GACrC,IACH,GAAgB,KACd,MAAMpM,EAAOJ,EAAIC,QACjB,GAAIG,EAAM,CACRmM,EAAkBtM,QAAUsM,EAAkBtM,SAAW,CACvD0M,mBAAoBvM,EAAK4I,MAAM2D,mBAC/B9D,cAAezI,EAAK4I,MAAMH,eAE5BzI,EAAK4I,MAAM2D,mBAAqB,KAChCvM,EAAK4I,MAAMH,cAAgB,OAC3B,MAAM+D,EAAOxM,EAAKyM,wBAClBZ,EAAUhM,QAAU2M,EAAKV,OACzBC,EAASlM,QAAU2M,EAAKR,MACnBE,EAA6BrM,UAChCG,EAAK4I,MAAM2D,mBAAqBJ,EAAkBtM,QAAQ0M,mBAC1DvM,EAAK4I,MAAMH,cAAgB0D,EAAkBtM,QAAQ4I,eAEvDkD,EAAajF,EACf,IACC,CAAClI,EAAQ6L,KAAM3D,KACK,IAAA7H,KACrBmH,EAAU+E,IACV,CACE,aAAcC,EAASxM,EAAQ6L,MAC/B,gBAAiB7L,EAAQgM,SAAW,QAAK,EACzCd,GAAIlL,EAAQoM,UACZ8B,QAAST,KACNR,EACH7L,IAAKgM,EACLhD,MAAO,CACL,qCAAwCkD,EAAS,GAAGA,WAAa,EACjE,oCAAuCE,EAAQ,GAAGA,WAAY,KAC3D1N,EAAMsK,OAEXrK,SAAU0N,GAAU1N,GAEvB,IAEH,SAASyM,EAASX,GAChB,OAAOA,EAAO,OAAS,QACzB,CACA,IAAI,EAAOF,EACPwC,EAAUzB,EACV0B,EAAUrB,EC7IVsB,EAAmB,qBAAoB,GAS3C,ICGIC,EAAiB,YACjBC,EAAiB,CAAC,OAAQ,MAAO,YAAa,UAAW,YAAa,eACrEC,EAAYC,EAAeC,GTThC,SAA0BC,GACxB,MAAMC,EAAgBD,EAAO,sBACtBE,EAAyBH,GAAyB3P,EAAmB6P,IACrEE,EAAwBC,GAAwBF,EACrDD,EACA,CAAEI,cAAe,CAAE3N,QAAS,MAAQ4N,QAAyB,IAAIvK,MAE7DwK,EAAsBpP,IAC1B,MAAM,MAAEP,EAAK,SAAEQ,GAAaD,EACtBsB,EAAM,SAAa,MACnB6N,EAAU,SAA6B,IAAIvK,KAAOrD,QACxD,OAAuB,IAAAhB,KAAIyO,EAAwB,CAAEvP,QAAO0P,UAASD,cAAe5N,EAAKrB,YAAW,EAEtGmP,EAAmB5O,YAAcsO,EACjC,MAAMO,EAAuBR,EAAO,iBAC9BS,EAAqBtN,EAAWqN,GAChCE,EAAiB,cACrB,CAACvP,EAAOqC,KACN,MAAM,MAAE5C,EAAK,SAAEQ,GAAaD,EAEtBsN,EAAevL,EAAgBM,EADrB4M,EAAqBI,EAAsB5P,GACAyP,eAC3D,OAAuB,IAAA3O,KAAI+O,EAAoB,CAAEhO,IAAKgM,EAAcrN,YAAW,IAGnFsP,EAAe/O,YAAc6O,EAC7B,MAAMG,EAAiBX,EAAO,qBACxBY,EAAiB,6BACjBC,EAAyB1N,EAAWwN,GACpCG,EAAqB,cACzB,CAAC3P,EAAOqC,KACN,MAAM,MAAE5C,EAAK,SAAEQ,KAAa2P,GAAa5P,EACnCsB,EAAM,SAAa,MACnBgM,EAAevL,EAAgBM,EAAcf,GAC7CpB,EAAU+O,EAAqBO,EAAgB/P,GAKrD,OAJA,aAAgB,KACdS,EAAQiP,QAAQU,IAAIvO,EAAK,CAAEA,SAAQsO,IAC5B,KAAW1P,EAAQiP,QAAQW,OAAOxO,EAAI,MAExB,IAAAf,KAAImP,EAAwB,CAAO,CAACD,GAAiB,GAAMnO,IAAKgM,EAAcrN,YAAW,IAkBpH,OAfA0P,EAAmBnP,YAAcgP,EAe1B,CACL,CAAEzP,SAAUqP,EAAoBxH,KAAM2H,EAAgBQ,SAAUJ,GAflE,SAAuBlQ,GACrB,MAAMS,EAAU+O,EAAqBJ,EAAO,qBAAsBpP,GAWlE,OAViB,eAAkB,KACjC,MAAMuQ,EAAiB9P,EAAQgP,cAAc3N,QAC7C,IAAKyO,EAAgB,MAAO,GAC5B,MAAMC,EAAelL,MAAMoC,KAAK6I,EAAeE,iBAAiB,IAAIT,OAKpE,OAJc1K,MAAMoC,KAAKjH,EAAQiP,QAAQ7O,UACd6P,MACzB,CAACC,EAAGC,IAAMJ,EAAaK,QAAQF,EAAE9O,IAAIC,SAAW0O,EAAaK,QAAQD,EAAE/O,IAAIC,UAE1D,GAClB,CAACrB,EAAQgP,cAAehP,EAAQiP,SAErC,EAIEP,EAEJ,CSpDyD2B,CAAiB/B,IACrEgC,EAAwBC,GAAwBxR,EAAmBuP,EAAgB,CACtFI,EACAlD,IAEEgF,EAAsBhF,IACtBiF,EAAY,cACd,CAAC3Q,EAAOqC,KACN,MAAM,KAAEiC,KAASsM,GAAmB5Q,EAC9B6Q,EAAcD,EACdE,EAAgBF,EACtB,OAAuB,IAAArQ,KAAImO,EAAW3O,SAAU,CAAEN,MAAOO,EAAM+Q,iBAAkB9Q,SAAmB,aAATqE,GAAsC,IAAA/D,KAAIyQ,GAAuB,IAAKF,EAAexP,IAAKe,KAAkC,IAAA9B,KAAI0Q,GAAqB,IAAKJ,EAAavP,IAAKe,KAAkB,IAG7RsO,EAAUnQ,YAAcgO,EACxB,IAAK0C,GAAwBC,IAA4BX,EAAuBhC,IAC3E4C,GAA8BC,IAAkCb,EACnEhC,EACA,CAAE8C,aAAa,IAEbL,GAAsB,cACxB,CAACjR,EAAOqC,KACN,MACEjC,MAAOmR,EAAS,aAChBC,EAAY,cACZC,EAAgB,OACf,YACDH,GAAc,KACXI,GACD1R,GACGI,EAAOyG,GAAYR,EAAqB,CAC7CC,KAAMiL,EACNhL,YAAaiL,GAAgB,GAC7BhL,SAAUiL,EACVhL,OAAQ+H,IAEV,OAAuB,IAAAjO,KACrB2Q,GACA,CACEzR,MAAOO,EAAM+Q,iBACb3Q,MAAO,WAAc,IAAMA,EAAQ,CAACA,GAAS,IAAI,CAACA,IAClDuR,WAAY9K,EACZ+K,YAAa,eAAkB,IAAMN,GAAezK,EAAS,KAAK,CAACyK,EAAazK,IAChF5G,UAA0B,IAAAM,KAAI6Q,GAA8B,CAAE3R,MAAOO,EAAM+Q,iBAAkBO,cAAarR,UAA0B,IAAAM,KAAIsR,GAAe,IAAKH,EAAsBpQ,IAAKe,OAE1L,IAGD2O,GAAwB,cAAiB,CAAChR,EAAOqC,KACnD,MACEjC,MAAOmR,EAAS,aAChBC,EAAY,cACZC,EAAgB,UAEbK,GACD9R,GACGI,EAAOyG,GAAYR,EAAqB,CAC7CC,KAAMiL,EACNhL,YAAaiL,GAAgB,GAC7BhL,SAAUiL,EACVhL,OAAQ+H,IAEJuD,EAAiB,eACpBC,GAAcnL,GAAS,CAACoL,EAAY,KAAO,IAAIA,EAAWD,MAC3D,CAACnL,IAEGqL,EAAkB,eACrBF,GAAcnL,GAAS,CAACoL,EAAY,KAAOA,EAAU/N,QAAQsD,GAAWA,IAAWwK,OACpF,CAACnL,IAEH,OAAuB,IAAAtG,KACrB2Q,GACA,CACEzR,MAAOO,EAAM+Q,iBACb3Q,QACAuR,WAAYI,EACZH,YAAaM,EACbjS,UAA0B,IAAAM,KAAI6Q,GAA8B,CAAE3R,MAAOO,EAAM+Q,iBAAkBO,aAAa,EAAMrR,UAA0B,IAAAM,KAAIsR,GAAe,IAAKC,EAAwBxQ,IAAKe,OAElM,KAEE8P,GAAuBC,IAAuB5B,EAAuBhC,GACtEqD,GAAgB,cAClB,CAAC7R,EAAOqC,KACN,MAAM,iBAAE0O,EAAgB,SAAE7E,EAAQ,IAAEmG,EAAG,YAAEC,EAAc,cAAe1B,GAAmB5Q,EAEnFsN,EAAevL,EADA,SAAa,MACiBM,GAC7CkQ,EAAW5D,EAAcoC,GAEzByB,EAA+B,QDlGzC,SAAsBC,GACpB,MAAMC,EAAY,aAAiBnE,GACnC,OAAOkE,GAAYC,GAAa,KAClC,CC8FsBC,CAAaN,GAEzBO,EAAgBnN,EAAqBzF,EAAM6S,WAAYhN,IAC3D,IAAK4I,EAAevE,SAASrE,EAAMiN,KAAM,OACzC,MAAM1I,EAASvE,EAAMuE,OACf2I,EAAoBR,IAAWrO,QAAQ8O,IAAUA,EAAK1R,IAAIC,SAAS2K,WACnE+G,EAAeF,EAAkBG,WAAWF,GAASA,EAAK1R,IAAIC,UAAY6I,IAC1E+I,EAAeJ,EAAkBjT,OACvC,IAAsB,IAAlBmT,EAAqB,OACzBpN,EAAMuN,iBACN,IAAIC,EAAYJ,EAChB,MACMK,EAAWH,EAAe,EAC1BI,EAAW,KACfF,EAAYJ,EAAe,EACvBI,EAAYC,IACdD,EALc,EAMhB,EAEIG,EAAW,KACfH,EAAYJ,EAAe,EACvBI,EAVY,IAWdA,EAAYC,EACd,EAEF,OAAQzN,EAAMiN,KACZ,IAAK,OACHO,EAhBc,EAiBd,MACF,IAAK,MACHA,EAAYC,EACZ,MACF,IAAK,aACiB,eAAhBhB,IACEE,EACFe,IAEAC,KAGJ,MACF,IAAK,YACiB,aAAhBlB,GACFiB,IAEF,MACF,IAAK,YACiB,eAAhBjB,IACEE,EACFgB,IAEAD,KAGJ,MACF,IAAK,UACiB,aAAhBjB,GACFkB,IAIN,MAAMC,EAAeJ,EAAYF,EACjCJ,EAAkBU,GAAcnS,IAAIC,SAASmS,OAAO,IAEtD,OAAuB,IAAAnT,KACrB4R,GACA,CACE1S,MAAOsR,EACP7E,WACAyH,UAAWtB,EACXC,cACArS,UAA0B,IAAAM,KAAImO,EAAW9G,KAAM,CAAEnI,MAAOsR,EAAkB9Q,UAA0B,IAAAM,KAClGmH,EAAU+E,IACV,IACKmE,EACH,mBAAoB0B,EACpBhR,IAAKgM,EACLuF,UAAW3G,OAAW,EAAS0G,OAItC,IAGDgB,GAAY,iBACXC,GAAuBC,IAA2BtD,EAAuBoD,IAC1EG,GAAgB,cAClB,CAAC/T,EAAOqC,KACN,MAAM,iBAAE0O,EAAgB,MAAE3Q,KAAU4T,GAAuBhU,EACrDiU,EAAmB7B,GAAoBwB,GAAW7C,GAClDmD,EAAe/C,GAAyByC,GAAW7C,GACnDoD,EAAmBzD,EAAoBK,GACvCqD,EAAYlJ,IACZa,EAAO3L,GAAS8T,EAAa9T,MAAM8J,SAAS9J,KAAU,EACtD8L,EAAW+H,EAAiB/H,UAAYlM,EAAMkM,SACpD,OAAuB,IAAA3L,KACrBsT,GACA,CACEpU,MAAOsR,EACPhF,OACAG,WACAkI,YACAnU,UAA0B,IAAAM,KACxB,EACA,CACE,mBAAoB0T,EAAiB3B,YACrC,aAAc,GAASvG,MACpBoI,KACAH,EACH1S,IAAKe,EACL6J,WACAH,OACAI,aAAekI,IACTA,EACFH,EAAavC,WAAWvR,GAExB8T,EAAatC,YAAYxR,EAC3B,KAKT,IAGL2T,GAAcvT,YAAcoT,GAC5B,IAAIU,GAAc,kBACdC,GAAkB,cACpB,CAACvU,EAAOqC,KACN,MAAM,iBAAE0O,KAAqByD,GAAgBxU,EACvCiU,EAAmB7B,GAAoB5D,EAAgBuC,GACvD0D,EAAcX,GAAwBQ,GAAavD,GACzD,OAAuB,IAAAxQ,KACrBmH,EAAUgN,GACV,CACE,mBAAoBT,EAAiB3B,YACrC,aAAc,GAASmC,EAAY1I,MACnC,gBAAiB0I,EAAYvI,SAAW,QAAK,KAC1CsI,EACHlT,IAAKe,GAER,IAGLkS,GAAgB/T,YAAc8T,GAC9B,IAAI,GAAe,mBACfK,GAAmB,cACrB,CAAC3U,EAAOqC,KACN,MAAM,iBAAE0O,KAAqBlE,GAAiB7M,EACxCiU,EAAmB7B,GAAoB5D,EAAgBuC,GACvD0D,EAAcX,GAAwB,GAAc/C,GACpD6D,EAAqBvD,GAA+B,GAAcN,GAClEoD,EAAmBzD,EAAoBK,GAC7C,OAAuB,IAAAxQ,KAAImO,EAAWqB,SAAU,CAAEtQ,MAAOsR,EAAkB9Q,UAA0B,IAAAM,KACnG,EACA,CACE,gBAAiBkU,EAAY1I,OAAS6I,EAAmBtD,kBAAe,EACxE,mBAAoB2C,EAAiB3B,YACrClH,GAAIqJ,EAAYL,aACbD,KACAtH,EACHvL,IAAKe,KAEL,IAGRsS,GAAiBnU,YAAc,GAC/B,IAAI,GAAe,mBACfqU,GAAmB,cACrB,CAAC7U,EAAOqC,KACN,MAAM,iBAAE0O,KAAqB5D,GAAiBnN,EACxCiU,EAAmB7B,GAAoB5D,EAAgBuC,GACvD0D,EAAcX,GAAwB,GAAc/C,GACpDoD,EAAmBzD,EAAoBK,GAC7C,OAAuB,IAAAxQ,KACrB,EACA,CACEuU,KAAM,SACN,kBAAmBL,EAAYL,UAC/B,mBAAoBH,EAAiB3B,eAClC6B,KACAhH,EACH7L,IAAKe,EACLiI,MAAO,CACL,mCAAsC,0CACtC,kCAAqC,4CAClCtK,EAAMsK,QAGd,IAIL,SAAS,GAASyB,GAChB,OAAOA,EAAO,OAAS,QACzB,CAHA8I,GAAiBrU,YAAc,GAI/B,IAAIuU,GAAQpE,EACRqE,GAAOjB,GAEPkB,GAAWN,GACXO,GAAWL,G,0BCnSR,MAAMM,GAA2BA,KACtC,MAAMC,GCWgEC,EAAAA,GAAAA,gBAvBzC,eDavB,KAAEC,IAASC,EAAAA,GAAAA,KAEjB,OAAOC,EAAAA,EAAAA,UAAQ,IAAMJ,EAAWK,kBAAkBC,MAAMnW,KAAKoW,IAAQ,CAE/DC,aAAcD,EAASE,YAAcP,EAAKQ,aAAaC,kBACvDC,MAAOL,EAASM,MAAM1W,KAAK2W,IAAI,IAAAC,EAAAC,EAAA,MAAM,CACnCC,OAA4B,QAArBF,EAAAD,EAAKxU,KAAK4U,mBAAW,IAAAH,OAAA,EAArBA,EAAuBE,QAASf,EAAKQ,aAAaS,iBACzDC,MAAsB,QAAhBJ,EAAAF,EAAKxU,KAAK+U,cAAM,IAAAL,OAAA,EAAhBA,EAAkBI,OAAQ,IACjC,SAGL,CAACpB,EAAYE,GACd,EE3BH,OAAgD,oEAAhD,GAAkJ,kEAAlJ,GAAkP,kEAAlP,GAA+U,+DCoC/U,OA/B2BoB,KACzB,MAAMC,EAAexB,KAErB,OACEyB,EAAAA,cAAA,OAAKC,UAAWrN,IACdoN,EAAAA,cAACjG,GAAc,CAACrM,KAAK,WAAWuS,UAAWrN,IAEvCmN,EAAapX,KAAIuX,IAAA,IAAC,aAAElB,EAAY,MAAEI,GAAOc,EAAA,OACvCF,EAAAA,cAACjG,GAAc,CAACvQ,MAAOwV,EAAc9C,IAAK8C,GACxCgB,EAAAA,cAACjG,GAAiB,CAACkG,UAAWrN,IAAwCoM,GACtEgB,EAAAA,cAACjG,GAAiB,CAACkG,UAAWrN,IAE1BwM,EAAMzW,KAAIwX,IAAA,IAAC,MAAEV,EAAK,KAAEG,GAAMO,EAAA,OACxBH,EAAAA,cAACI,GAAAA,KAAI,CACHlE,IAAK,GAAG8C,KAAgBS,KACxBjP,GAAIoP,EACJK,UAAWrN,IAEV6M,EACI,KAIE,KAInB,ECpBV,OARuCS,IAAc,IAAb,KAAEG,GAAMH,EAC9C,OACEF,EAAAA,cAACM,EAAAA,EAAI,CAAC5M,MAAO,CAAC6M,OAAQ,WACpBP,EAAAA,cAACF,GAAkB,MACd,EAMJ,MAAMU,GAAeA,IAAMR,EAAAA,cAAA,aAAO,O","sources":["webpack://study-books/./node_modules/@radix-ui/react-context/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-compose-refs/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-slot/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-collection/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/primitive/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-use-layout-effect/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-use-controllable-state/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-primitive/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-presence/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-id/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-collapsible/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-direction/dist/index.mjs","webpack://study-books/./node_modules/@radix-ui/react-accordion/dist/index.mjs","webpack://study-books/./src/hooks/use-category-list-view-model.ts","webpack://study-books/./src/queries/categories.ts","webpack://study-books/./src/components/category-navigation/category-navigation.module.scss","webpack://study-books/./src/components/category-navigation/category-navigation.tsx","webpack://study-books/./src/pages/index.tsx"],"sourcesContent":["// packages/react/context/src/create-context.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createContext2(rootComponentName, defaultContext) {\n  const Context = React.createContext(defaultContext);\n  const Provider = (props) => {\n    const { children, ...context } = props;\n    const value = React.useMemo(() => context, Object.values(context));\n    return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n  };\n  Provider.displayName = rootComponentName + \"Provider\";\n  function useContext2(consumerName) {\n    const context = React.useContext(Context);\n    if (context) return context;\n    if (defaultContext !== void 0) return defaultContext;\n    throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n  }\n  return [Provider, useContext2];\n}\nfunction createContextScope(scopeName, createContextScopeDeps = []) {\n  let defaultContexts = [];\n  function createContext3(rootComponentName, defaultContext) {\n    const BaseContext = React.createContext(defaultContext);\n    const index = defaultContexts.length;\n    defaultContexts = [...defaultContexts, defaultContext];\n    const Provider = (props) => {\n      const { scope, children, ...context } = props;\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const value = React.useMemo(() => context, Object.values(context));\n      return /* @__PURE__ */ jsx(Context.Provider, { value, children });\n    };\n    Provider.displayName = rootComponentName + \"Provider\";\n    function useContext2(consumerName, scope) {\n      const Context = scope?.[scopeName]?.[index] || BaseContext;\n      const context = React.useContext(Context);\n      if (context) return context;\n      if (defaultContext !== void 0) return defaultContext;\n      throw new Error(`\\`${consumerName}\\` must be used within \\`${rootComponentName}\\``);\n    }\n    return [Provider, useContext2];\n  }\n  const createScope = () => {\n    const scopeContexts = defaultContexts.map((defaultContext) => {\n      return React.createContext(defaultContext);\n    });\n    return function useScope(scope) {\n      const contexts = scope?.[scopeName] || scopeContexts;\n      return React.useMemo(\n        () => ({ [`__scope${scopeName}`]: { ...scope, [scopeName]: contexts } }),\n        [scope, contexts]\n      );\n    };\n  };\n  createScope.scopeName = scopeName;\n  return [createContext3, composeContextScopes(createScope, ...createContextScopeDeps)];\n}\nfunction composeContextScopes(...scopes) {\n  const baseScope = scopes[0];\n  if (scopes.length === 1) return baseScope;\n  const createScope = () => {\n    const scopeHooks = scopes.map((createScope2) => ({\n      useScope: createScope2(),\n      scopeName: createScope2.scopeName\n    }));\n    return function useComposedScopes(overrideScopes) {\n      const nextScopes = scopeHooks.reduce((nextScopes2, { useScope, scopeName }) => {\n        const scopeProps = useScope(overrideScopes);\n        const currentScope = scopeProps[`__scope${scopeName}`];\n        return { ...nextScopes2, ...currentScope };\n      }, {});\n      return React.useMemo(() => ({ [`__scope${baseScope.scopeName}`]: nextScopes }), [nextScopes]);\n    };\n  };\n  createScope.scopeName = baseScope.scopeName;\n  return createScope;\n}\nexport {\n  createContext2 as createContext,\n  createContextScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/compose-refs/src/compose-refs.tsx\nimport * as React from \"react\";\nfunction setRef(ref, value) {\n  if (typeof ref === \"function\") {\n    return ref(value);\n  } else if (ref !== null && ref !== void 0) {\n    ref.current = value;\n  }\n}\nfunction composeRefs(...refs) {\n  return (node) => {\n    let hasCleanup = false;\n    const cleanups = refs.map((ref) => {\n      const cleanup = setRef(ref, node);\n      if (!hasCleanup && typeof cleanup == \"function\") {\n        hasCleanup = true;\n      }\n      return cleanup;\n    });\n    if (hasCleanup) {\n      return () => {\n        for (let i = 0; i < cleanups.length; i++) {\n          const cleanup = cleanups[i];\n          if (typeof cleanup == \"function\") {\n            cleanup();\n          } else {\n            setRef(refs[i], null);\n          }\n        }\n      };\n    }\n  };\n}\nfunction useComposedRefs(...refs) {\n  return React.useCallback(composeRefs(...refs), refs);\n}\nexport {\n  composeRefs,\n  useComposedRefs\n};\n//# sourceMappingURL=index.mjs.map\n","// src/slot.tsx\nimport * as React from \"react\";\nimport { composeRefs } from \"@radix-ui/react-compose-refs\";\nimport { Fragment as Fragment2, jsx } from \"react/jsx-runtime\";\n// @__NO_SIDE_EFFECTS__\nfunction createSlot(ownerName) {\n  const SlotClone = /* @__PURE__ */ createSlotClone(ownerName);\n  const Slot2 = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    const childrenArray = React.Children.toArray(children);\n    const slottable = childrenArray.find(isSlottable);\n    if (slottable) {\n      const newElement = slottable.props.children;\n      const newChildren = childrenArray.map((child) => {\n        if (child === slottable) {\n          if (React.Children.count(newElement) > 1) return React.Children.only(null);\n          return React.isValidElement(newElement) ? newElement.props.children : null;\n        } else {\n          return child;\n        }\n      });\n      return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children: React.isValidElement(newElement) ? React.cloneElement(newElement, void 0, newChildren) : null });\n    }\n    return /* @__PURE__ */ jsx(SlotClone, { ...slotProps, ref: forwardedRef, children });\n  });\n  Slot2.displayName = `${ownerName}.Slot`;\n  return Slot2;\n}\nvar Slot = /* @__PURE__ */ createSlot(\"Slot\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlotClone(ownerName) {\n  const SlotClone = React.forwardRef((props, forwardedRef) => {\n    const { children, ...slotProps } = props;\n    if (React.isValidElement(children)) {\n      const childrenRef = getElementRef(children);\n      const props2 = mergeProps(slotProps, children.props);\n      if (children.type !== React.Fragment) {\n        props2.ref = forwardedRef ? composeRefs(forwardedRef, childrenRef) : childrenRef;\n      }\n      return React.cloneElement(children, props2);\n    }\n    return React.Children.count(children) > 1 ? React.Children.only(null) : null;\n  });\n  SlotClone.displayName = `${ownerName}.SlotClone`;\n  return SlotClone;\n}\nvar SLOTTABLE_IDENTIFIER = Symbol(\"radix.slottable\");\n// @__NO_SIDE_EFFECTS__\nfunction createSlottable(ownerName) {\n  const Slottable2 = ({ children }) => {\n    return /* @__PURE__ */ jsx(Fragment2, { children });\n  };\n  Slottable2.displayName = `${ownerName}.Slottable`;\n  Slottable2.__radixId = SLOTTABLE_IDENTIFIER;\n  return Slottable2;\n}\nvar Slottable = /* @__PURE__ */ createSlottable(\"Slottable\");\nfunction isSlottable(child) {\n  return React.isValidElement(child) && typeof child.type === \"function\" && \"__radixId\" in child.type && child.type.__radixId === SLOTTABLE_IDENTIFIER;\n}\nfunction mergeProps(slotProps, childProps) {\n  const overrideProps = { ...childProps };\n  for (const propName in childProps) {\n    const slotPropValue = slotProps[propName];\n    const childPropValue = childProps[propName];\n    const isHandler = /^on[A-Z]/.test(propName);\n    if (isHandler) {\n      if (slotPropValue && childPropValue) {\n        overrideProps[propName] = (...args) => {\n          const result = childPropValue(...args);\n          slotPropValue(...args);\n          return result;\n        };\n      } else if (slotPropValue) {\n        overrideProps[propName] = slotPropValue;\n      }\n    } else if (propName === \"style\") {\n      overrideProps[propName] = { ...slotPropValue, ...childPropValue };\n    } else if (propName === \"className\") {\n      overrideProps[propName] = [slotPropValue, childPropValue].filter(Boolean).join(\" \");\n    }\n  }\n  return { ...slotProps, ...overrideProps };\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nexport {\n  Slot as Root,\n  Slot,\n  Slottable,\n  createSlot,\n  createSlottable\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/collection-legacy.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createCollection(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope(PROVIDER_NAME);\n  const [CollectionProviderImpl, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    { collectionRef: { current: null }, itemMap: /* @__PURE__ */ new Map() }\n  );\n  const CollectionProvider = (props) => {\n    const { scope, children } = props;\n    const ref = React.useRef(null);\n    const itemMap = React.useRef(/* @__PURE__ */ new Map()).current;\n    return /* @__PURE__ */ jsx(CollectionProviderImpl, { scope, itemMap, collectionRef: ref, children });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React.useRef(null);\n      const composedRefs = useComposedRefs(forwardedRef, ref);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      React.useEffect(() => {\n        context.itemMap.set(ref, { ref, ...itemData });\n        return () => void context.itemMap.delete(ref);\n      });\n      return /* @__PURE__ */ jsx(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useCollection(scope) {\n    const context = useCollectionContext(name + \"CollectionConsumer\", scope);\n    const getItems = React.useCallback(() => {\n      const collectionNode = context.collectionRef.current;\n      if (!collectionNode) return [];\n      const orderedNodes = Array.from(collectionNode.querySelectorAll(`[${ITEM_DATA_ATTR}]`));\n      const items = Array.from(context.itemMap.values());\n      const orderedItems = items.sort(\n        (a, b) => orderedNodes.indexOf(a.ref.current) - orderedNodes.indexOf(b.ref.current)\n      );\n      return orderedItems;\n    }, [context.collectionRef, context.itemMap]);\n    return getItems;\n  }\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    useCollection,\n    createCollectionScope\n  ];\n}\n\n// src/collection.tsx\nimport React2 from \"react\";\nimport { createContextScope as createContextScope2 } from \"@radix-ui/react-context\";\nimport { useComposedRefs as useComposedRefs2 } from \"@radix-ui/react-compose-refs\";\nimport { createSlot as createSlot2 } from \"@radix-ui/react-slot\";\n\n// src/ordered-dictionary.ts\nvar __instanciated = /* @__PURE__ */ new WeakMap();\nvar OrderedDict = class _OrderedDict extends Map {\n  #keys;\n  constructor(entries) {\n    super(entries);\n    this.#keys = [...super.keys()];\n    __instanciated.set(this, true);\n  }\n  set(key, value) {\n    if (__instanciated.get(this)) {\n      if (this.has(key)) {\n        this.#keys[this.#keys.indexOf(key)] = key;\n      } else {\n        this.#keys.push(key);\n      }\n    }\n    super.set(key, value);\n    return this;\n  }\n  insert(index, key, value) {\n    const has = this.has(key);\n    const length = this.#keys.length;\n    const relativeIndex = toSafeInteger(index);\n    let actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n    const safeIndex = actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n    if (safeIndex === this.size || has && safeIndex === this.size - 1 || safeIndex === -1) {\n      this.set(key, value);\n      return this;\n    }\n    const size = this.size + (has ? 0 : 1);\n    if (relativeIndex < 0) {\n      actualIndex++;\n    }\n    const keys = [...this.#keys];\n    let nextValue;\n    let shouldSkip = false;\n    for (let i = actualIndex; i < size; i++) {\n      if (actualIndex === i) {\n        let nextKey = keys[i];\n        if (keys[i] === key) {\n          nextKey = keys[i + 1];\n        }\n        if (has) {\n          this.delete(key);\n        }\n        nextValue = this.get(nextKey);\n        this.set(key, value);\n      } else {\n        if (!shouldSkip && keys[i - 1] === key) {\n          shouldSkip = true;\n        }\n        const currentKey = keys[shouldSkip ? i : i - 1];\n        const currentValue = nextValue;\n        nextValue = this.get(currentKey);\n        this.delete(currentKey);\n        this.set(currentKey, currentValue);\n      }\n    }\n    return this;\n  }\n  with(index, key, value) {\n    const copy = new _OrderedDict(this);\n    copy.insert(index, key, value);\n    return copy;\n  }\n  before(key) {\n    const index = this.#keys.indexOf(key) - 1;\n    if (index < 0) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position before the given key.\n   */\n  setBefore(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index, newKey, value);\n  }\n  after(key) {\n    let index = this.#keys.indexOf(key);\n    index = index === -1 || index === this.size - 1 ? -1 : index + 1;\n    if (index === -1) {\n      return void 0;\n    }\n    return this.entryAt(index);\n  }\n  /**\n   * Sets a new key-value pair at the position after the given key.\n   */\n  setAfter(key, newKey, value) {\n    const index = this.#keys.indexOf(key);\n    if (index === -1) {\n      return this;\n    }\n    return this.insert(index + 1, newKey, value);\n  }\n  first() {\n    return this.entryAt(0);\n  }\n  last() {\n    return this.entryAt(-1);\n  }\n  clear() {\n    this.#keys = [];\n    return super.clear();\n  }\n  delete(key) {\n    const deleted = super.delete(key);\n    if (deleted) {\n      this.#keys.splice(this.#keys.indexOf(key), 1);\n    }\n    return deleted;\n  }\n  deleteAt(index) {\n    const key = this.keyAt(index);\n    if (key !== void 0) {\n      return this.delete(key);\n    }\n    return false;\n  }\n  at(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return this.get(key);\n    }\n  }\n  entryAt(index) {\n    const key = at(this.#keys, index);\n    if (key !== void 0) {\n      return [key, this.get(key)];\n    }\n  }\n  indexOf(key) {\n    return this.#keys.indexOf(key);\n  }\n  keyAt(index) {\n    return at(this.#keys, index);\n  }\n  from(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.at(dest);\n  }\n  keyFrom(key, offset) {\n    const index = this.indexOf(key);\n    if (index === -1) {\n      return void 0;\n    }\n    let dest = index + offset;\n    if (dest < 0) dest = 0;\n    if (dest >= this.size) dest = this.size - 1;\n    return this.keyAt(dest);\n  }\n  find(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return entry;\n      }\n      index++;\n    }\n    return void 0;\n  }\n  findIndex(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return index;\n      }\n      index++;\n    }\n    return -1;\n  }\n  filter(predicate, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        entries.push(entry);\n      }\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  map(callbackfn, thisArg) {\n    const entries = [];\n    let index = 0;\n    for (const entry of this) {\n      entries.push([entry[0], Reflect.apply(callbackfn, thisArg, [entry, index, this])]);\n      index++;\n    }\n    return new _OrderedDict(entries);\n  }\n  reduce(...args) {\n    const [callbackfn, initialValue] = args;\n    let index = 0;\n    let accumulator = initialValue ?? this.at(0);\n    for (const entry of this) {\n      if (index === 0 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n      index++;\n    }\n    return accumulator;\n  }\n  reduceRight(...args) {\n    const [callbackfn, initialValue] = args;\n    let accumulator = initialValue ?? this.at(-1);\n    for (let index = this.size - 1; index >= 0; index--) {\n      const entry = this.at(index);\n      if (index === this.size - 1 && args.length === 1) {\n        accumulator = entry;\n      } else {\n        accumulator = Reflect.apply(callbackfn, this, [accumulator, entry, index, this]);\n      }\n    }\n    return accumulator;\n  }\n  toSorted(compareFn) {\n    const entries = [...this.entries()].sort(compareFn);\n    return new _OrderedDict(entries);\n  }\n  toReversed() {\n    const reversed = new _OrderedDict();\n    for (let index = this.size - 1; index >= 0; index--) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      reversed.set(key, element);\n    }\n    return reversed;\n  }\n  toSpliced(...args) {\n    const entries = [...this.entries()];\n    entries.splice(...args);\n    return new _OrderedDict(entries);\n  }\n  slice(start, end) {\n    const result = new _OrderedDict();\n    let stop = this.size - 1;\n    if (start === void 0) {\n      return result;\n    }\n    if (start < 0) {\n      start = start + this.size;\n    }\n    if (end !== void 0 && end > 0) {\n      stop = end - 1;\n    }\n    for (let index = start; index <= stop; index++) {\n      const key = this.keyAt(index);\n      const element = this.get(key);\n      result.set(key, element);\n    }\n    return result;\n  }\n  every(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (!Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return false;\n      }\n      index++;\n    }\n    return true;\n  }\n  some(predicate, thisArg) {\n    let index = 0;\n    for (const entry of this) {\n      if (Reflect.apply(predicate, thisArg, [entry, index, this])) {\n        return true;\n      }\n      index++;\n    }\n    return false;\n  }\n};\nfunction at(array, index) {\n  if (\"at\" in Array.prototype) {\n    return Array.prototype.at.call(array, index);\n  }\n  const actualIndex = toSafeIndex(array, index);\n  return actualIndex === -1 ? void 0 : array[actualIndex];\n}\nfunction toSafeIndex(array, index) {\n  const length = array.length;\n  const relativeIndex = toSafeInteger(index);\n  const actualIndex = relativeIndex >= 0 ? relativeIndex : length + relativeIndex;\n  return actualIndex < 0 || actualIndex >= length ? -1 : actualIndex;\n}\nfunction toSafeInteger(number) {\n  return number !== number || number === 0 ? 0 : Math.trunc(number);\n}\n\n// src/collection.tsx\nimport { jsx as jsx2 } from \"react/jsx-runtime\";\nfunction createCollection2(name) {\n  const PROVIDER_NAME = name + \"CollectionProvider\";\n  const [createCollectionContext, createCollectionScope] = createContextScope2(PROVIDER_NAME);\n  const [CollectionContextProvider, useCollectionContext] = createCollectionContext(\n    PROVIDER_NAME,\n    {\n      collectionElement: null,\n      collectionRef: { current: null },\n      collectionRefObject: { current: null },\n      itemMap: new OrderedDict(),\n      setItemMap: () => void 0\n    }\n  );\n  const CollectionProvider = ({ state, ...props }) => {\n    return state ? /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state }) : /* @__PURE__ */ jsx2(CollectionInit, { ...props });\n  };\n  CollectionProvider.displayName = PROVIDER_NAME;\n  const CollectionInit = (props) => {\n    const state = useInitCollection();\n    return /* @__PURE__ */ jsx2(CollectionProviderImpl, { ...props, state });\n  };\n  CollectionInit.displayName = PROVIDER_NAME + \"Init\";\n  const CollectionProviderImpl = (props) => {\n    const { scope, children, state } = props;\n    const ref = React2.useRef(null);\n    const [collectionElement, setCollectionElement] = React2.useState(\n      null\n    );\n    const composeRefs = useComposedRefs2(ref, setCollectionElement);\n    const [itemMap, setItemMap] = state;\n    React2.useEffect(() => {\n      if (!collectionElement) return;\n      const observer = getChildListObserver(() => {\n      });\n      observer.observe(collectionElement, {\n        childList: true,\n        subtree: true\n      });\n      return () => {\n        observer.disconnect();\n      };\n    }, [collectionElement]);\n    return /* @__PURE__ */ jsx2(\n      CollectionContextProvider,\n      {\n        scope,\n        itemMap,\n        setItemMap,\n        collectionRef: composeRefs,\n        collectionRefObject: ref,\n        collectionElement,\n        children\n      }\n    );\n  };\n  CollectionProviderImpl.displayName = PROVIDER_NAME + \"Impl\";\n  const COLLECTION_SLOT_NAME = name + \"CollectionSlot\";\n  const CollectionSlotImpl = createSlot2(COLLECTION_SLOT_NAME);\n  const CollectionSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children } = props;\n      const context = useCollectionContext(COLLECTION_SLOT_NAME, scope);\n      const composedRefs = useComposedRefs2(forwardedRef, context.collectionRef);\n      return /* @__PURE__ */ jsx2(CollectionSlotImpl, { ref: composedRefs, children });\n    }\n  );\n  CollectionSlot.displayName = COLLECTION_SLOT_NAME;\n  const ITEM_SLOT_NAME = name + \"CollectionItemSlot\";\n  const ITEM_DATA_ATTR = \"data-radix-collection-item\";\n  const CollectionItemSlotImpl = createSlot2(ITEM_SLOT_NAME);\n  const CollectionItemSlot = React2.forwardRef(\n    (props, forwardedRef) => {\n      const { scope, children, ...itemData } = props;\n      const ref = React2.useRef(null);\n      const [element, setElement] = React2.useState(null);\n      const composedRefs = useComposedRefs2(forwardedRef, ref, setElement);\n      const context = useCollectionContext(ITEM_SLOT_NAME, scope);\n      const { setItemMap } = context;\n      const itemDataRef = React2.useRef(itemData);\n      if (!shallowEqual(itemDataRef.current, itemData)) {\n        itemDataRef.current = itemData;\n      }\n      const memoizedItemData = itemDataRef.current;\n      React2.useEffect(() => {\n        const itemData2 = memoizedItemData;\n        setItemMap((map) => {\n          if (!element) {\n            return map;\n          }\n          if (!map.has(element)) {\n            map.set(element, { ...itemData2, element });\n            return map.toSorted(sortByDocumentPosition);\n          }\n          return map.set(element, { ...itemData2, element }).toSorted(sortByDocumentPosition);\n        });\n        return () => {\n          setItemMap((map) => {\n            if (!element || !map.has(element)) {\n              return map;\n            }\n            map.delete(element);\n            return new OrderedDict(map);\n          });\n        };\n      }, [element, memoizedItemData, setItemMap]);\n      return /* @__PURE__ */ jsx2(CollectionItemSlotImpl, { ...{ [ITEM_DATA_ATTR]: \"\" }, ref: composedRefs, children });\n    }\n  );\n  CollectionItemSlot.displayName = ITEM_SLOT_NAME;\n  function useInitCollection() {\n    return React2.useState(new OrderedDict());\n  }\n  function useCollection(scope) {\n    const { itemMap } = useCollectionContext(name + \"CollectionConsumer\", scope);\n    return itemMap;\n  }\n  const functions = {\n    createCollectionScope,\n    useCollection,\n    useInitCollection\n  };\n  return [\n    { Provider: CollectionProvider, Slot: CollectionSlot, ItemSlot: CollectionItemSlot },\n    functions\n  ];\n}\nfunction shallowEqual(a, b) {\n  if (a === b) return true;\n  if (typeof a !== \"object\" || typeof b !== \"object\") return false;\n  if (a == null || b == null) return false;\n  const keysA = Object.keys(a);\n  const keysB = Object.keys(b);\n  if (keysA.length !== keysB.length) return false;\n  for (const key of keysA) {\n    if (!Object.prototype.hasOwnProperty.call(b, key)) return false;\n    if (a[key] !== b[key]) return false;\n  }\n  return true;\n}\nfunction isElementPreceding(a, b) {\n  return !!(b.compareDocumentPosition(a) & Node.DOCUMENT_POSITION_PRECEDING);\n}\nfunction sortByDocumentPosition(a, b) {\n  return !a[1].element || !b[1].element ? 0 : isElementPreceding(a[1].element, b[1].element) ? -1 : 1;\n}\nfunction getChildListObserver(callback) {\n  const observer = new MutationObserver((mutationsList) => {\n    for (const mutation of mutationsList) {\n      if (mutation.type === \"childList\") {\n        callback();\n        return;\n      }\n    }\n  });\n  return observer;\n}\nexport {\n  createCollection,\n  createCollection2 as unstable_createCollection\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/core/primitive/src/primitive.tsx\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nexport {\n  composeEventHandlers\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/use-layout-effect/src/use-layout-effect.tsx\nimport * as React from \"react\";\nvar useLayoutEffect2 = globalThis?.document ? React.useLayoutEffect : () => {\n};\nexport {\n  useLayoutEffect2 as useLayoutEffect\n};\n//# sourceMappingURL=index.mjs.map\n","// src/use-controllable-state.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nvar useInsertionEffect = React[\" useInsertionEffect \".trim().toString()] || useLayoutEffect;\nfunction useControllableState({\n  prop,\n  defaultProp,\n  onChange = () => {\n  },\n  caller\n}) {\n  const [uncontrolledProp, setUncontrolledProp, onChangeRef] = useUncontrolledState({\n    defaultProp,\n    onChange\n  });\n  const isControlled = prop !== void 0;\n  const value = isControlled ? prop : uncontrolledProp;\n  if (true) {\n    const isControlledRef = React.useRef(prop !== void 0);\n    React.useEffect(() => {\n      const wasControlled = isControlledRef.current;\n      if (wasControlled !== isControlled) {\n        const from = wasControlled ? \"controlled\" : \"uncontrolled\";\n        const to = isControlled ? \"controlled\" : \"uncontrolled\";\n        console.warn(\n          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`\n        );\n      }\n      isControlledRef.current = isControlled;\n    }, [isControlled, caller]);\n  }\n  const setValue = React.useCallback(\n    (nextValue) => {\n      if (isControlled) {\n        const value2 = isFunction(nextValue) ? nextValue(prop) : nextValue;\n        if (value2 !== prop) {\n          onChangeRef.current?.(value2);\n        }\n      } else {\n        setUncontrolledProp(nextValue);\n      }\n    },\n    [isControlled, prop, setUncontrolledProp, onChangeRef]\n  );\n  return [value, setValue];\n}\nfunction useUncontrolledState({\n  defaultProp,\n  onChange\n}) {\n  const [value, setValue] = React.useState(defaultProp);\n  const prevValueRef = React.useRef(value);\n  const onChangeRef = React.useRef(onChange);\n  useInsertionEffect(() => {\n    onChangeRef.current = onChange;\n  }, [onChange]);\n  React.useEffect(() => {\n    if (prevValueRef.current !== value) {\n      onChangeRef.current?.(value);\n      prevValueRef.current = value;\n    }\n  }, [value, prevValueRef]);\n  return [value, setValue, onChangeRef];\n}\nfunction isFunction(value) {\n  return typeof value === \"function\";\n}\n\n// src/use-controllable-state-reducer.tsx\nimport * as React2 from \"react\";\nimport { useEffectEvent } from \"@radix-ui/react-use-effect-event\";\nvar SYNC_STATE = Symbol(\"RADIX:SYNC_STATE\");\nfunction useControllableStateReducer(reducer, userArgs, initialArg, init) {\n  const { prop: controlledState, defaultProp, onChange: onChangeProp, caller } = userArgs;\n  const isControlled = controlledState !== void 0;\n  const onChange = useEffectEvent(onChangeProp);\n  if (true) {\n    const isControlledRef = React2.useRef(controlledState !== void 0);\n    React2.useEffect(() => {\n      const wasControlled = isControlledRef.current;\n      if (wasControlled !== isControlled) {\n        const from = wasControlled ? \"controlled\" : \"uncontrolled\";\n        const to = isControlled ? \"controlled\" : \"uncontrolled\";\n        console.warn(\n          `${caller} is changing from ${from} to ${to}. Components should not switch from controlled to uncontrolled (or vice versa). Decide between using a controlled or uncontrolled value for the lifetime of the component.`\n        );\n      }\n      isControlledRef.current = isControlled;\n    }, [isControlled, caller]);\n  }\n  const args = [{ ...initialArg, state: defaultProp }];\n  if (init) {\n    args.push(init);\n  }\n  const [internalState, dispatch] = React2.useReducer(\n    (state2, action) => {\n      if (action.type === SYNC_STATE) {\n        return { ...state2, state: action.state };\n      }\n      const next = reducer(state2, action);\n      if (isControlled && !Object.is(next.state, state2.state)) {\n        onChange(next.state);\n      }\n      return next;\n    },\n    ...args\n  );\n  const uncontrolledState = internalState.state;\n  const prevValueRef = React2.useRef(uncontrolledState);\n  React2.useEffect(() => {\n    if (prevValueRef.current !== uncontrolledState) {\n      prevValueRef.current = uncontrolledState;\n      if (!isControlled) {\n        onChange(uncontrolledState);\n      }\n    }\n  }, [onChange, uncontrolledState, prevValueRef, isControlled]);\n  const state = React2.useMemo(() => {\n    const isControlled2 = controlledState !== void 0;\n    if (isControlled2) {\n      return { ...internalState, state: controlledState };\n    }\n    return internalState;\n  }, [internalState, controlledState]);\n  React2.useEffect(() => {\n    if (isControlled && !Object.is(controlledState, internalState.state)) {\n      dispatch({ type: SYNC_STATE, state: controlledState });\n    }\n  }, [controlledState, internalState.state, isControlled]);\n  return [state, dispatch];\n}\nexport {\n  useControllableState,\n  useControllableStateReducer\n};\n//# sourceMappingURL=index.mjs.map\n","// src/primitive.tsx\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { createSlot } from \"@radix-ui/react-slot\";\nimport { jsx } from \"react/jsx-runtime\";\nvar NODES = [\n  \"a\",\n  \"button\",\n  \"div\",\n  \"form\",\n  \"h2\",\n  \"h3\",\n  \"img\",\n  \"input\",\n  \"label\",\n  \"li\",\n  \"nav\",\n  \"ol\",\n  \"p\",\n  \"select\",\n  \"span\",\n  \"svg\",\n  \"ul\"\n];\nvar Primitive = NODES.reduce((primitive, node) => {\n  const Slot = createSlot(`Primitive.${node}`);\n  const Node = React.forwardRef((props, forwardedRef) => {\n    const { asChild, ...primitiveProps } = props;\n    const Comp = asChild ? Slot : node;\n    if (typeof window !== \"undefined\") {\n      window[Symbol.for(\"radix-ui\")] = true;\n    }\n    return /* @__PURE__ */ jsx(Comp, { ...primitiveProps, ref: forwardedRef });\n  });\n  Node.displayName = `Primitive.${node}`;\n  return { ...primitive, [node]: Node };\n}, {});\nfunction dispatchDiscreteCustomEvent(target, event) {\n  if (target) ReactDOM.flushSync(() => target.dispatchEvent(event));\n}\nvar Root = Primitive;\nexport {\n  Primitive,\n  Root,\n  dispatchDiscreteCustomEvent\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/presence.tsx\nimport * as React2 from \"react\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\n\n// src/use-state-machine.tsx\nimport * as React from \"react\";\nfunction useStateMachine(initialState, machine) {\n  return React.useReducer((state, event) => {\n    const nextState = machine[state][event];\n    return nextState ?? state;\n  }, initialState);\n}\n\n// src/presence.tsx\nvar Presence = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n  const child = typeof children === \"function\" ? children({ present: presence.isPresent }) : React2.Children.only(children);\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === \"function\";\n  return forceMount || presence.isPresent ? React2.cloneElement(child, { ref }) : null;\n};\nPresence.displayName = \"Presence\";\nfunction usePresence(present) {\n  const [node, setNode] = React2.useState();\n  const stylesRef = React2.useRef(null);\n  const prevPresentRef = React2.useRef(present);\n  const prevAnimationNameRef = React2.useRef(\"none\");\n  const initialState = present ? \"mounted\" : \"unmounted\";\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: \"unmounted\",\n      ANIMATION_OUT: \"unmountSuspended\"\n    },\n    unmountSuspended: {\n      MOUNT: \"mounted\",\n      ANIMATION_END: \"unmounted\"\n    },\n    unmounted: {\n      MOUNT: \"mounted\"\n    }\n  });\n  React2.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === \"mounted\" ? currentAnimationName : \"none\";\n  }, [state]);\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n      if (present) {\n        send(\"MOUNT\");\n      } else if (currentAnimationName === \"none\" || styles?.display === \"none\") {\n        send(\"UNMOUNT\");\n      } else {\n        const isAnimating = prevAnimationName !== currentAnimationName;\n        if (wasPresent && isAnimating) {\n          send(\"ANIMATION_OUT\");\n        } else {\n          send(\"UNMOUNT\");\n        }\n      }\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      const handleAnimationEnd = (event) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        const isCurrentAnimation = currentAnimationName.includes(event.animationName);\n        if (event.target === node && isCurrentAnimation) {\n          send(\"ANIMATION_END\");\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = \"forwards\";\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === \"forwards\") {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event) => {\n        if (event.target === node) {\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener(\"animationstart\", handleAnimationStart);\n      node.addEventListener(\"animationcancel\", handleAnimationEnd);\n      node.addEventListener(\"animationend\", handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener(\"animationstart\", handleAnimationStart);\n        node.removeEventListener(\"animationcancel\", handleAnimationEnd);\n        node.removeEventListener(\"animationend\", handleAnimationEnd);\n      };\n    } else {\n      send(\"ANIMATION_END\");\n    }\n  }, [node, send]);\n  return {\n    isPresent: [\"mounted\", \"unmountSuspended\"].includes(state),\n    ref: React2.useCallback((node2) => {\n      stylesRef.current = node2 ? getComputedStyle(node2) : null;\n      setNode(node2);\n    }, [])\n  };\n}\nfunction getAnimationName(styles) {\n  return styles?.animationName || \"none\";\n}\nfunction getElementRef(element) {\n  let getter = Object.getOwnPropertyDescriptor(element.props, \"ref\")?.get;\n  let mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.ref;\n  }\n  getter = Object.getOwnPropertyDescriptor(element, \"ref\")?.get;\n  mayWarn = getter && \"isReactWarning\" in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n  return element.props.ref || element.ref;\n}\nvar Root = Presence;\nexport {\n  Presence,\n  Root\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/id/src/id.tsx\nimport * as React from \"react\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nvar useReactId = React[\" useId \".trim().toString()] || (() => void 0);\nvar count = 0;\nfunction useId(deterministicId) {\n  const [id, setId] = React.useState(useReactId());\n  useLayoutEffect(() => {\n    if (!deterministicId) setId((reactId) => reactId ?? String(count++));\n  }, [deterministicId]);\n  return deterministicId || (id ? `radix-${id}` : \"\");\n}\nexport {\n  useId\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/collapsible.tsx\nimport * as React from \"react\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { useLayoutEffect } from \"@radix-ui/react-use-layout-effect\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { Presence } from \"@radix-ui/react-presence\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { jsx } from \"react/jsx-runtime\";\nvar COLLAPSIBLE_NAME = \"Collapsible\";\nvar [createCollapsibleContext, createCollapsibleScope] = createContextScope(COLLAPSIBLE_NAME);\nvar [CollapsibleProvider, useCollapsibleContext] = createCollapsibleContext(COLLAPSIBLE_NAME);\nvar Collapsible = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      __scopeCollapsible,\n      open: openProp,\n      defaultOpen,\n      disabled,\n      onOpenChange,\n      ...collapsibleProps\n    } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? false,\n      onChange: onOpenChange,\n      caller: COLLAPSIBLE_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      CollapsibleProvider,\n      {\n        scope: __scopeCollapsible,\n        disabled,\n        contentId: useId(),\n        open,\n        onOpenToggle: React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen]),\n        children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            \"data-state\": getState(open),\n            \"data-disabled\": disabled ? \"\" : void 0,\n            ...collapsibleProps,\n            ref: forwardedRef\n          }\n        )\n      }\n    );\n  }\n);\nCollapsible.displayName = COLLAPSIBLE_NAME;\nvar TRIGGER_NAME = \"CollapsibleTrigger\";\nvar CollapsibleTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeCollapsible, ...triggerProps } = props;\n    const context = useCollapsibleContext(TRIGGER_NAME, __scopeCollapsible);\n    return /* @__PURE__ */ jsx(\n      Primitive.button,\n      {\n        type: \"button\",\n        \"aria-controls\": context.contentId,\n        \"aria-expanded\": context.open || false,\n        \"data-state\": getState(context.open),\n        \"data-disabled\": context.disabled ? \"\" : void 0,\n        disabled: context.disabled,\n        ...triggerProps,\n        ref: forwardedRef,\n        onClick: composeEventHandlers(props.onClick, context.onOpenToggle)\n      }\n    );\n  }\n);\nCollapsibleTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"CollapsibleContent\";\nvar CollapsibleContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { forceMount, ...contentProps } = props;\n    const context = useCollapsibleContext(CONTENT_NAME, props.__scopeCollapsible);\n    return /* @__PURE__ */ jsx(Presence, { present: forceMount || context.open, children: ({ present }) => /* @__PURE__ */ jsx(CollapsibleContentImpl, { ...contentProps, ref: forwardedRef, present }) });\n  }\n);\nCollapsibleContent.displayName = CONTENT_NAME;\nvar CollapsibleContentImpl = React.forwardRef((props, forwardedRef) => {\n  const { __scopeCollapsible, present, children, ...contentProps } = props;\n  const context = useCollapsibleContext(CONTENT_NAME, __scopeCollapsible);\n  const [isPresent, setIsPresent] = React.useState(present);\n  const ref = React.useRef(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const heightRef = React.useRef(0);\n  const height = heightRef.current;\n  const widthRef = React.useRef(0);\n  const width = widthRef.current;\n  const isOpen = context.open || isPresent;\n  const isMountAnimationPreventedRef = React.useRef(isOpen);\n  const originalStylesRef = React.useRef(void 0);\n  React.useEffect(() => {\n    const rAF = requestAnimationFrame(() => isMountAnimationPreventedRef.current = false);\n    return () => cancelAnimationFrame(rAF);\n  }, []);\n  useLayoutEffect(() => {\n    const node = ref.current;\n    if (node) {\n      originalStylesRef.current = originalStylesRef.current || {\n        transitionDuration: node.style.transitionDuration,\n        animationName: node.style.animationName\n      };\n      node.style.transitionDuration = \"0s\";\n      node.style.animationName = \"none\";\n      const rect = node.getBoundingClientRect();\n      heightRef.current = rect.height;\n      widthRef.current = rect.width;\n      if (!isMountAnimationPreventedRef.current) {\n        node.style.transitionDuration = originalStylesRef.current.transitionDuration;\n        node.style.animationName = originalStylesRef.current.animationName;\n      }\n      setIsPresent(present);\n    }\n  }, [context.open, present]);\n  return /* @__PURE__ */ jsx(\n    Primitive.div,\n    {\n      \"data-state\": getState(context.open),\n      \"data-disabled\": context.disabled ? \"\" : void 0,\n      id: context.contentId,\n      hidden: !isOpen,\n      ...contentProps,\n      ref: composedRefs,\n      style: {\n        [`--radix-collapsible-content-height`]: height ? `${height}px` : void 0,\n        [`--radix-collapsible-content-width`]: width ? `${width}px` : void 0,\n        ...props.style\n      },\n      children: isOpen && children\n    }\n  );\n});\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root = Collapsible;\nvar Trigger = CollapsibleTrigger;\nvar Content = CollapsibleContent;\nexport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n  Content,\n  Root,\n  Trigger,\n  createCollapsibleScope\n};\n//# sourceMappingURL=index.mjs.map\n","// packages/react/direction/src/direction.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar DirectionContext = React.createContext(void 0);\nvar DirectionProvider = (props) => {\n  const { dir, children } = props;\n  return /* @__PURE__ */ jsx(DirectionContext.Provider, { value: dir, children });\n};\nfunction useDirection(localDir) {\n  const globalDir = React.useContext(DirectionContext);\n  return localDir || globalDir || \"ltr\";\n}\nvar Provider = DirectionProvider;\nexport {\n  DirectionProvider,\n  Provider,\n  useDirection\n};\n//# sourceMappingURL=index.mjs.map\n","\"use client\";\n\n// src/accordion.tsx\nimport React from \"react\";\nimport { createContextScope } from \"@radix-ui/react-context\";\nimport { createCollection } from \"@radix-ui/react-collection\";\nimport { useComposedRefs } from \"@radix-ui/react-compose-refs\";\nimport { composeEventHandlers } from \"@radix-ui/primitive\";\nimport { useControllableState } from \"@radix-ui/react-use-controllable-state\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\nimport { createCollapsibleScope } from \"@radix-ui/react-collapsible\";\nimport { useId } from \"@radix-ui/react-id\";\nimport { useDirection } from \"@radix-ui/react-direction\";\nimport { jsx } from \"react/jsx-runtime\";\nvar ACCORDION_NAME = \"Accordion\";\nvar ACCORDION_KEYS = [\"Home\", \"End\", \"ArrowDown\", \"ArrowUp\", \"ArrowLeft\", \"ArrowRight\"];\nvar [Collection, useCollection, createCollectionScope] = createCollection(ACCORDION_NAME);\nvar [createAccordionContext, createAccordionScope] = createContextScope(ACCORDION_NAME, [\n  createCollectionScope,\n  createCollapsibleScope\n]);\nvar useCollapsibleScope = createCollapsibleScope();\nvar Accordion = React.forwardRef(\n  (props, forwardedRef) => {\n    const { type, ...accordionProps } = props;\n    const singleProps = accordionProps;\n    const multipleProps = accordionProps;\n    return /* @__PURE__ */ jsx(Collection.Provider, { scope: props.__scopeAccordion, children: type === \"multiple\" ? /* @__PURE__ */ jsx(AccordionImplMultiple, { ...multipleProps, ref: forwardedRef }) : /* @__PURE__ */ jsx(AccordionImplSingle, { ...singleProps, ref: forwardedRef }) });\n  }\n);\nAccordion.displayName = ACCORDION_NAME;\nvar [AccordionValueProvider, useAccordionValueContext] = createAccordionContext(ACCORDION_NAME);\nvar [AccordionCollapsibleProvider, useAccordionCollapsibleContext] = createAccordionContext(\n  ACCORDION_NAME,\n  { collapsible: false }\n);\nvar AccordionImplSingle = React.forwardRef(\n  (props, forwardedRef) => {\n    const {\n      value: valueProp,\n      defaultValue,\n      onValueChange = () => {\n      },\n      collapsible = false,\n      ...accordionSingleProps\n    } = props;\n    const [value, setValue] = useControllableState({\n      prop: valueProp,\n      defaultProp: defaultValue ?? \"\",\n      onChange: onValueChange,\n      caller: ACCORDION_NAME\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionValueProvider,\n      {\n        scope: props.__scopeAccordion,\n        value: React.useMemo(() => value ? [value] : [], [value]),\n        onItemOpen: setValue,\n        onItemClose: React.useCallback(() => collapsible && setValue(\"\"), [collapsible, setValue]),\n        children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionSingleProps, ref: forwardedRef }) })\n      }\n    );\n  }\n);\nvar AccordionImplMultiple = React.forwardRef((props, forwardedRef) => {\n  const {\n    value: valueProp,\n    defaultValue,\n    onValueChange = () => {\n    },\n    ...accordionMultipleProps\n  } = props;\n  const [value, setValue] = useControllableState({\n    prop: valueProp,\n    defaultProp: defaultValue ?? [],\n    onChange: onValueChange,\n    caller: ACCORDION_NAME\n  });\n  const handleItemOpen = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => [...prevValue, itemValue]),\n    [setValue]\n  );\n  const handleItemClose = React.useCallback(\n    (itemValue) => setValue((prevValue = []) => prevValue.filter((value2) => value2 !== itemValue)),\n    [setValue]\n  );\n  return /* @__PURE__ */ jsx(\n    AccordionValueProvider,\n    {\n      scope: props.__scopeAccordion,\n      value,\n      onItemOpen: handleItemOpen,\n      onItemClose: handleItemClose,\n      children: /* @__PURE__ */ jsx(AccordionCollapsibleProvider, { scope: props.__scopeAccordion, collapsible: true, children: /* @__PURE__ */ jsx(AccordionImpl, { ...accordionMultipleProps, ref: forwardedRef }) })\n    }\n  );\n});\nvar [AccordionImplProvider, useAccordionContext] = createAccordionContext(ACCORDION_NAME);\nvar AccordionImpl = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, disabled, dir, orientation = \"vertical\", ...accordionProps } = props;\n    const accordionRef = React.useRef(null);\n    const composedRefs = useComposedRefs(accordionRef, forwardedRef);\n    const getItems = useCollection(__scopeAccordion);\n    const direction = useDirection(dir);\n    const isDirectionLTR = direction === \"ltr\";\n    const handleKeyDown = composeEventHandlers(props.onKeyDown, (event) => {\n      if (!ACCORDION_KEYS.includes(event.key)) return;\n      const target = event.target;\n      const triggerCollection = getItems().filter((item) => !item.ref.current?.disabled);\n      const triggerIndex = triggerCollection.findIndex((item) => item.ref.current === target);\n      const triggerCount = triggerCollection.length;\n      if (triggerIndex === -1) return;\n      event.preventDefault();\n      let nextIndex = triggerIndex;\n      const homeIndex = 0;\n      const endIndex = triggerCount - 1;\n      const moveNext = () => {\n        nextIndex = triggerIndex + 1;\n        if (nextIndex > endIndex) {\n          nextIndex = homeIndex;\n        }\n      };\n      const movePrev = () => {\n        nextIndex = triggerIndex - 1;\n        if (nextIndex < homeIndex) {\n          nextIndex = endIndex;\n        }\n      };\n      switch (event.key) {\n        case \"Home\":\n          nextIndex = homeIndex;\n          break;\n        case \"End\":\n          nextIndex = endIndex;\n          break;\n        case \"ArrowRight\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              moveNext();\n            } else {\n              movePrev();\n            }\n          }\n          break;\n        case \"ArrowDown\":\n          if (orientation === \"vertical\") {\n            moveNext();\n          }\n          break;\n        case \"ArrowLeft\":\n          if (orientation === \"horizontal\") {\n            if (isDirectionLTR) {\n              movePrev();\n            } else {\n              moveNext();\n            }\n          }\n          break;\n        case \"ArrowUp\":\n          if (orientation === \"vertical\") {\n            movePrev();\n          }\n          break;\n      }\n      const clampedIndex = nextIndex % triggerCount;\n      triggerCollection[clampedIndex].ref.current?.focus();\n    });\n    return /* @__PURE__ */ jsx(\n      AccordionImplProvider,\n      {\n        scope: __scopeAccordion,\n        disabled,\n        direction: dir,\n        orientation,\n        children: /* @__PURE__ */ jsx(Collection.Slot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n          Primitive.div,\n          {\n            ...accordionProps,\n            \"data-orientation\": orientation,\n            ref: composedRefs,\n            onKeyDown: disabled ? void 0 : handleKeyDown\n          }\n        ) })\n      }\n    );\n  }\n);\nvar ITEM_NAME = \"AccordionItem\";\nvar [AccordionItemProvider, useAccordionItemContext] = createAccordionContext(ITEM_NAME);\nvar AccordionItem = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, value, ...accordionItemProps } = props;\n    const accordionContext = useAccordionContext(ITEM_NAME, __scopeAccordion);\n    const valueContext = useAccordionValueContext(ITEM_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    const triggerId = useId();\n    const open = value && valueContext.value.includes(value) || false;\n    const disabled = accordionContext.disabled || props.disabled;\n    return /* @__PURE__ */ jsx(\n      AccordionItemProvider,\n      {\n        scope: __scopeAccordion,\n        open,\n        disabled,\n        triggerId,\n        children: /* @__PURE__ */ jsx(\n          CollapsiblePrimitive.Root,\n          {\n            \"data-orientation\": accordionContext.orientation,\n            \"data-state\": getState(open),\n            ...collapsibleScope,\n            ...accordionItemProps,\n            ref: forwardedRef,\n            disabled,\n            open,\n            onOpenChange: (open2) => {\n              if (open2) {\n                valueContext.onItemOpen(value);\n              } else {\n                valueContext.onItemClose(value);\n              }\n            }\n          }\n        )\n      }\n    );\n  }\n);\nAccordionItem.displayName = ITEM_NAME;\nvar HEADER_NAME = \"AccordionHeader\";\nvar AccordionHeader = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...headerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(HEADER_NAME, __scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      Primitive.h3,\n      {\n        \"data-orientation\": accordionContext.orientation,\n        \"data-state\": getState(itemContext.open),\n        \"data-disabled\": itemContext.disabled ? \"\" : void 0,\n        ...headerProps,\n        ref: forwardedRef\n      }\n    );\n  }\n);\nAccordionHeader.displayName = HEADER_NAME;\nvar TRIGGER_NAME = \"AccordionTrigger\";\nvar AccordionTrigger = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...triggerProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleContext = useAccordionCollapsibleContext(TRIGGER_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(Collection.ItemSlot, { scope: __scopeAccordion, children: /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Trigger,\n      {\n        \"aria-disabled\": itemContext.open && !collapsibleContext.collapsible || void 0,\n        \"data-orientation\": accordionContext.orientation,\n        id: itemContext.triggerId,\n        ...collapsibleScope,\n        ...triggerProps,\n        ref: forwardedRef\n      }\n    ) });\n  }\n);\nAccordionTrigger.displayName = TRIGGER_NAME;\nvar CONTENT_NAME = \"AccordionContent\";\nvar AccordionContent = React.forwardRef(\n  (props, forwardedRef) => {\n    const { __scopeAccordion, ...contentProps } = props;\n    const accordionContext = useAccordionContext(ACCORDION_NAME, __scopeAccordion);\n    const itemContext = useAccordionItemContext(CONTENT_NAME, __scopeAccordion);\n    const collapsibleScope = useCollapsibleScope(__scopeAccordion);\n    return /* @__PURE__ */ jsx(\n      CollapsiblePrimitive.Content,\n      {\n        role: \"region\",\n        \"aria-labelledby\": itemContext.triggerId,\n        \"data-orientation\": accordionContext.orientation,\n        ...collapsibleScope,\n        ...contentProps,\n        ref: forwardedRef,\n        style: {\n          [\"--radix-accordion-content-height\"]: \"var(--radix-collapsible-content-height)\",\n          [\"--radix-accordion-content-width\"]: \"var(--radix-collapsible-content-width)\",\n          ...props.style\n        }\n      }\n    );\n  }\n);\nAccordionContent.displayName = CONTENT_NAME;\nfunction getState(open) {\n  return open ? \"open\" : \"closed\";\n}\nvar Root2 = Accordion;\nvar Item = AccordionItem;\nvar Header = AccordionHeader;\nvar Trigger2 = AccordionTrigger;\nvar Content2 = AccordionContent;\nexport {\n  Accordion,\n  AccordionContent,\n  AccordionHeader,\n  AccordionItem,\n  AccordionTrigger,\n  Content2 as Content,\n  Header,\n  Item,\n  Root2 as Root,\n  Trigger2 as Trigger,\n  createAccordionScope\n};\n//# sourceMappingURL=index.mjs.map\n","import { useFetchAllCategoriesQuery } from '@/queries/categories';\nimport { useFetchAppConfig } from '@/queries/app-config';\nimport { useMemo } from 'react';\n\nexport type Post = {\n  title: string;\n  path: string;\n}\n\nexport type Category = {\n  categoryName: string;\n  posts: Post[]\n}\n\nexport const useCategoryListViewModel = (): Category[] => {\n  const categories = useFetchAllCategoriesQuery();\n  const { site } = useFetchAppConfig();\n\n  return useMemo(() => categories.allMarkdownRemark.group.map((category) => (\n      {\n        categoryName: category.fieldValue || site.siteMetadata.categoryFieldName,\n        posts: category.edges.map((edge) => ({\n          title: edge.node.frontmatter?.title || site.siteMetadata.defaultPostTitle,\n          path: edge.node.fields?.path || '/',\n        })),\n      }\n    )),\n    [categories, site]\n  );\n}","import { graphql, useStaticQuery } from 'gatsby';\nimport { AllCategoriesDataQuery } from '@/__generated__/gatsby-types'\n\nexport const AllCategoriesQuery = graphql`\n    query AllCategoriesData {\n        allMarkdownRemark(sort: {frontmatter: {date: ASC}}) {\n            group(field: {fields: {category: SELECT}}) {\n                fieldValue\n                totalCount\n                edges {\n                    node {\n                        id\n                        frontmatter {\n                            title\n                            date\n                        }\n                        fields {\n                            path\n                        }\n                    }\n                }\n            }\n        }\n    }\n`;\n\nexport const useFetchAllCategoriesQuery = (): AllCategoriesDataQuery => useStaticQuery(AllCategoriesQuery);","// extracted by mini-css-extract-plugin\nexport default {\"categoryNavigation__container\":\"category-navigation-module--category-navigation__container--49639\",\"categoryNavigation__trigger\":\"category-navigation-module--category-navigation__trigger--561ba\",\"categoryNavigation__content\":\"category-navigation-module--category-navigation__content--31a7f\",\"categoryNavigation__link\":\"category-navigation-module--category-navigation__link--e81e0\"};","import * as React from \"react\"\nimport * as Accordion from '@radix-ui/react-accordion';\nimport { useCategoryListViewModel } from '@/hooks/use-category-list-view-model';\nimport { Link } from 'gatsby';\nimport styles from './category-navigation.module.scss';\n\nconst CategoryNavigation = () => {\n  const categoryList = useCategoryListViewModel();\n\n  return (\n    <nav className={styles['categoryNavigation__container']}>\n      <Accordion.Root type='multiple' className={styles['categoryNavigation__container']}>\n        {\n          categoryList.map(({ categoryName, posts }) => (\n            <Accordion.Item value={categoryName} key={categoryName}>\n              <Accordion.Trigger className={styles['categoryNavigation__trigger']}>{categoryName}</Accordion.Trigger>\n              <Accordion.Content className={styles['categoryNavigation__content']}>\n                {\n                  posts.map(({ title, path }) => (\n                    <Link \n                      key={`${categoryName}-${title}}`} \n                      to={path} \n                      className={styles['categoryNavigation__link']}\n                    >\n                      {title}\n                    </Link>\n                  ))\n                }\n              </Accordion.Content>\n            </Accordion.Item>\n          ))\n        }\n      </Accordion.Root>\n    </nav>\n  )\n}\n\nexport default CategoryNavigation;","import * as React from \"react\"\nimport { HeadFC, PageProps } from \"gatsby\"\nimport { Post } from '@/components/post';\nimport CategoryNavigation from '@/components/category-navigation/category-navigation';\n\nconst IndexPage: React.FC<PageProps> = ({ data }) => {\n  return (\n    <Post style={{margin: '0 auto'}}>\n      <CategoryNavigation />\n    </Post>\n  )\n}\n\nexport default IndexPage\n\nexport const Head: HeadFC = () => <title>note</title>"],"names":["createContextScope","scopeName","createContextScopeDeps","defaultContexts","createScope","scopeContexts","map","defaultContext","scope","contexts","rootComponentName","BaseContext","index","length","Provider","props","children","context","Context","value","Object","values","jsx","displayName","consumerName","Error","composeContextScopes","scopes","baseScope","scopeHooks","createScope2","useScope","overrideScopes","nextScopes","reduce","nextScopes2","setRef","ref","current","composeRefs","refs","node","hasCleanup","cleanups","cleanup","i","useComposedRefs","createSlot","ownerName","SlotClone","createSlotClone","Slot2","forwardedRef","slotProps","childrenArray","toArray","slottable","find","isSlottable","newElement","newChildren","child","count","only","childrenRef","element","getter","getOwnPropertyDescriptor","get","mayWarn","isReactWarning","getElementRef","props2","childProps","overrideProps","propName","slotPropValue","childPropValue","test","args","result","filter","Boolean","join","mergeProps","type","SLOTTABLE_IDENTIFIER","Symbol","__radixId","__instanciated","WeakMap","Map","at","array","Array","prototype","call","actualIndex","relativeIndex","toSafeInteger","toSafeIndex","number","Math","trunc","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","useLayoutEffect2","globalThis","document","useInsertionEffect","trim","toString","useControllableState","prop","defaultProp","onChange","caller","uncontrolledProp","setUncontrolledProp","onChangeRef","setValue","prevValueRef","useUncontrolledState","isControlled","isControlledRef","wasControlled","from","to","console","warn","nextValue","value2","isFunction","Primitive","primitive","Slot","Node","asChild","primitiveProps","Comp","window","for","Presence","present","presence","setNode","stylesRef","prevPresentRef","prevAnimationNameRef","initialState","state","send","machine","useStateMachine","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","display","timeoutId","ownerWindow","ownerDocument","defaultView","handleAnimationEnd","isCurrentAnimation","includes","animationName","target","currentFillMode","style","animationFillMode","setTimeout","handleAnimationStart","addEventListener","clearTimeout","removeEventListener","isPresent","node2","getComputedStyle","usePresence","useReactId","useId","deterministicId","id","setId","reactId","String","COLLAPSIBLE_NAME","createCollapsibleContext","createCollapsibleScope","CollapsibleProvider","useCollapsibleContext","Collapsible","__scopeCollapsible","open","openProp","defaultOpen","disabled","onOpenChange","collapsibleProps","setOpen","contentId","onOpenToggle","prevOpen","div","getState","TRIGGER_NAME","CollapsibleTrigger","triggerProps","button","onClick","CONTENT_NAME","CollapsibleContent","forceMount","contentProps","CollapsibleContentImpl","setIsPresent","composedRefs","heightRef","height","widthRef","width","isOpen","isMountAnimationPreventedRef","originalStylesRef","rAF","requestAnimationFrame","cancelAnimationFrame","transitionDuration","rect","getBoundingClientRect","hidden","Trigger","Content","DirectionContext","ACCORDION_NAME","ACCORDION_KEYS","Collection","useCollection","createCollectionScope","name","PROVIDER_NAME","createCollectionContext","CollectionProviderImpl","useCollectionContext","collectionRef","itemMap","CollectionProvider","COLLECTION_SLOT_NAME","CollectionSlotImpl","CollectionSlot","ITEM_SLOT_NAME","ITEM_DATA_ATTR","CollectionItemSlotImpl","CollectionItemSlot","itemData","set","delete","ItemSlot","collectionNode","orderedNodes","querySelectorAll","sort","a","b","indexOf","createCollection","createAccordionContext","createAccordionScope","useCollapsibleScope","Accordion","accordionProps","singleProps","multipleProps","__scopeAccordion","AccordionImplMultiple","AccordionImplSingle","AccordionValueProvider","useAccordionValueContext","AccordionCollapsibleProvider","useAccordionCollapsibleContext","collapsible","valueProp","defaultValue","onValueChange","accordionSingleProps","onItemOpen","onItemClose","AccordionImpl","accordionMultipleProps","handleItemOpen","itemValue","prevValue","handleItemClose","AccordionImplProvider","useAccordionContext","dir","orientation","getItems","isDirectionLTR","localDir","globalDir","useDirection","handleKeyDown","onKeyDown","key","triggerCollection","item","triggerIndex","findIndex","triggerCount","preventDefault","nextIndex","endIndex","moveNext","movePrev","clampedIndex","focus","direction","ITEM_NAME","AccordionItemProvider","useAccordionItemContext","AccordionItem","accordionItemProps","accordionContext","valueContext","collapsibleScope","triggerId","open2","HEADER_NAME","AccordionHeader","headerProps","itemContext","h3","AccordionTrigger","collapsibleContext","AccordionContent","role","Root2","Item","Trigger2","Content2","useCategoryListViewModel","categories","useStaticQuery","site","useFetchAppConfig","useMemo","allMarkdownRemark","group","category","categoryName","fieldValue","siteMetadata","categoryFieldName","posts","edges","edge","_edge$node$frontmatte","_edge$node$fields","title","frontmatter","defaultPostTitle","path","fields","CategoryNavigation","categoryList","React","className","_ref","_ref2","Link","data","Post","margin","Head"],"sourceRoot":""}